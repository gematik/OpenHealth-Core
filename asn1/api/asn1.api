public final class de/gematik/openhealth/asn1/Asn1DateTimeKt {
	public static final fun readGeneralizedTime (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Lde/gematik/openhealth/asn1/Asn1GeneralizedTime;
	public static final fun readUtcTime (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Lde/gematik/openhealth/asn1/Asn1UtcTime;
	public static final fun writeGeneralizedTime (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;Lde/gematik/openhealth/asn1/Asn1GeneralizedTime;)V
	public static final fun writeUtcTime (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;Lde/gematik/openhealth/asn1/Asn1UtcTime;)V
}

public final class de/gematik/openhealth/asn1/Asn1Decoder {
	public fun <init> ([B)V
	public final fun read (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class de/gematik/openhealth/asn1/Asn1Decoder$ParserScope {
	public fun <init> (Lde/gematik/openhealth/asn1/Asn1Decoder;II)V
	public final fun advance ([Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun advanceWithTag (IILkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun advanceWithTag$default (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;IILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun check (ZLkotlin/jvm/functions/Function0;)V
	public final fun fail (Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)Ljava/lang/Void;
	public final fun fail (Lkotlin/jvm/functions/Function0;)Ljava/lang/Void;
	public final fun getEndOffset ()I
	public final fun getOffset ()I
	public final fun getRemainingLength ()I
	public final fun optional (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun readByte ()B
	public final fun readBytes (I)[B
	public final fun readInt (IZ)I
	public static synthetic fun readInt$default (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;IZILjava/lang/Object;)I
	public final fun readLength ()I
	public final fun readTag ()Lde/gematik/openhealth/asn1/Asn1Tag;
	public final fun skip (I)V
	public final fun skipToEnd ()V
}

public final class de/gematik/openhealth/asn1/Asn1DecoderException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1DecoderKt {
	public static final fun readBitString (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)[B
	public static final fun readBoolean (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Z
	public static final fun readInt (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)I
	public static final fun readOctetString (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)[B
	public static final fun readUtf8String (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Ljava/lang/String;
	public static final fun readVisibleString (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1Encoder {
	public fun <init> ()V
	public final fun write (Lkotlin/jvm/functions/Function1;)[B
}

public final class de/gematik/openhealth/asn1/Asn1Encoder$WriterScope {
	public fun <init> ()V
	public final fun fail (Lkotlin/jvm/functions/Function0;)Ljava/lang/Void;
	public final fun getBuffer ()[B
	public final fun write (B)V
	public final fun write (I)V
	public final fun write (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;)V
	public final fun write ([B)V
	public final fun writeLength (I)V
}

public final class de/gematik/openhealth/asn1/Asn1EncoderException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1EncoderKt {
	public static final fun writeBitString (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;[BI)V
	public static synthetic fun writeBitString$default (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;[BIILjava/lang/Object;)V
	public static final fun writeBoolean (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;Z)V
	public static final fun writeInt (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;I)V
	public static final fun writeOctetString (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;[B)V
	public static final fun writeTag (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;II)V
	public static synthetic fun writeTag$default (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;IIILjava/lang/Object;)V
	public static final fun writeTaggedObject (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;IILkotlin/jvm/functions/Function1;)V
	public static synthetic fun writeTaggedObject$default (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;IILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun writeUtf8String (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;Ljava/lang/String;)V
}

public final class de/gematik/openhealth/asn1/Asn1GeneralizedTime {
	public fun <init> (IIIILjava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()Ljava/lang/Integer;
	public final fun component6 ()Ljava/lang/Integer;
	public final fun component7 ()Ljava/lang/Integer;
	public final fun component8 ()Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;
	public final fun copy (IIIILjava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;)Lde/gematik/openhealth/asn1/Asn1GeneralizedTime;
	public static synthetic fun copy$default (Lde/gematik/openhealth/asn1/Asn1GeneralizedTime;IIIILjava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;ILjava/lang/Object;)Lde/gematik/openhealth/asn1/Asn1GeneralizedTime;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDay ()I
	public final fun getFractionOfSecond ()Ljava/lang/Integer;
	public final fun getHour ()I
	public final fun getMinute ()Ljava/lang/Integer;
	public final fun getMonth ()I
	public final fun getOffset ()Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;
	public final fun getSecond ()Ljava/lang/Integer;
	public final fun getYear ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1ObjectIdentifierKt {
	public static final fun readObjectIdentifier (Lde/gematik/openhealth/asn1/Asn1Decoder$ParserScope;)Ljava/lang/String;
	public static final fun writeObjectIdentifier (Lde/gematik/openhealth/asn1/Asn1Encoder$WriterScope;Ljava/lang/String;)V
}

public abstract class de/gematik/openhealth/asn1/Asn1Offset {
}

public final class de/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset : de/gematik/openhealth/asn1/Asn1Offset {
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;
	public static synthetic fun copy$default (Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;IIILjava/lang/Object;)Lde/gematik/openhealth/asn1/Asn1Offset$GeneralizedOffset;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHours ()I
	public final fun getMinutes ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1Offset$UtcOffset : de/gematik/openhealth/asn1/Asn1Offset {
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;
	public static synthetic fun copy$default (Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;IIILjava/lang/Object;)Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHours ()I
	public final fun getMinutes ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1Tag {
	public static final field APPLICATION I
	public static final field CONSTRUCTED I
	public static final field CONTEXT_SPECIFIC I
	public static final field Companion Lde/gematik/openhealth/asn1/Asn1Tag$Companion;
	public static final field PRIVATE I
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lde/gematik/openhealth/asn1/Asn1Tag;
	public static synthetic fun copy$default (Lde/gematik/openhealth/asn1/Asn1Tag;IIILjava/lang/Object;)Lde/gematik/openhealth/asn1/Asn1Tag;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTagClass ()I
	public final fun getTagNumber ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class de/gematik/openhealth/asn1/Asn1Tag$Companion {
}

public final class de/gematik/openhealth/asn1/Asn1Type {
	public static final field BIT_STRING I
	public static final field BMP_STRING I
	public static final field BOOLEAN I
	public static final field CHARACTER_STRING I
	public static final field DATE I
	public static final field DATE_TIME I
	public static final field DURATION I
	public static final field EMBEDDED_PDV I
	public static final field ENUMERATED I
	public static final field EXTERNAL I
	public static final field GENERALIZED_TIME I
	public static final field GENERAL_STRING I
	public static final field GRAPHIC_STRING I
	public static final field IA5_STRING I
	public static final field INSTANCE Lde/gematik/openhealth/asn1/Asn1Type;
	public static final field INTEGER I
	public static final field NULL I
	public static final field NUMERIC_STRING I
	public static final field OBJECT_DESCRIPTOR I
	public static final field OBJECT_IDENTIFIER I
	public static final field OCTET_STRING I
	public static final field PRINTABLE_STRING I
	public static final field REAL I
	public static final field RELATIVE_OID I
	public static final field SEQUENCE I
	public static final field SET I
	public static final field TELETEX_STRING I
	public static final field TIME I
	public static final field TIME_OF_DAY I
	public static final field UNIVERSAL_STRING I
	public static final field UTC_TIME I
	public static final field UTF8_STRING I
	public static final field VIDEOTEX_STRING I
	public static final field VISIBLE_STRING I
}

public final class de/gematik/openhealth/asn1/Asn1UtcTime {
	public fun <init> (IIIIILjava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()Ljava/lang/Integer;
	public final fun component7 ()Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;
	public final fun copy (IIIIILjava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;)Lde/gematik/openhealth/asn1/Asn1UtcTime;
	public static synthetic fun copy$default (Lde/gematik/openhealth/asn1/Asn1UtcTime;IIIIILjava/lang/Integer;Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;ILjava/lang/Object;)Lde/gematik/openhealth/asn1/Asn1UtcTime;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDay ()I
	public final fun getHour ()I
	public final fun getMinute ()I
	public final fun getMonth ()I
	public final fun getOffset ()Lde/gematik/openhealth/asn1/Asn1Offset$UtcOffset;
	public final fun getSecond ()Ljava/lang/Integer;
	public final fun getYear ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

