[{"name":"class Asn1Decoder(data: ByteArray)","description":"de.gematik.openhealth.asn1.Asn1Decoder","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/index.html","searchKeys":["Asn1Decoder","class Asn1Decoder(data: ByteArray)","de.gematik.openhealth.asn1.Asn1Decoder"]},{"name":"class Asn1DecoderException(val message: String, val cause: Throwable?) : IllegalArgumentException","description":"de.gematik.openhealth.asn1.Asn1DecoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder-exception/index.html","searchKeys":["Asn1DecoderException","class Asn1DecoderException(val message: String, val cause: Throwable?) : IllegalArgumentException","de.gematik.openhealth.asn1.Asn1DecoderException"]},{"name":"class Asn1Encoder","description":"de.gematik.openhealth.asn1.Asn1Encoder","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/index.html","searchKeys":["Asn1Encoder","class Asn1Encoder","de.gematik.openhealth.asn1.Asn1Encoder"]},{"name":"class Asn1EncoderException(val message: String, val cause: Throwable?) : IllegalArgumentException","description":"de.gematik.openhealth.asn1.Asn1EncoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder-exception/index.html","searchKeys":["Asn1EncoderException","class Asn1EncoderException(val message: String, val cause: Throwable?) : IllegalArgumentException","de.gematik.openhealth.asn1.Asn1EncoderException"]},{"name":"class WriterScope","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/index.html","searchKeys":["WriterScope","class WriterScope","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope"]},{"name":"const val APPLICATION: Int = 64","description":"de.gematik.openhealth.asn1.Asn1Tag.Companion.APPLICATION","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-companion/-a-p-p-l-i-c-a-t-i-o-n.html","searchKeys":["APPLICATION","const val APPLICATION: Int = 64","de.gematik.openhealth.asn1.Asn1Tag.Companion.APPLICATION"]},{"name":"const val BIT_STRING: Int = 3","description":"de.gematik.openhealth.asn1.Asn1Type.BIT_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-b-i-t_-s-t-r-i-n-g.html","searchKeys":["BIT_STRING","const val BIT_STRING: Int = 3","de.gematik.openhealth.asn1.Asn1Type.BIT_STRING"]},{"name":"const val BMP_STRING: Int = 30","description":"de.gematik.openhealth.asn1.Asn1Type.BMP_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-b-m-p_-s-t-r-i-n-g.html","searchKeys":["BMP_STRING","const val BMP_STRING: Int = 30","de.gematik.openhealth.asn1.Asn1Type.BMP_STRING"]},{"name":"const val BOOLEAN: Int = 1","description":"de.gematik.openhealth.asn1.Asn1Type.BOOLEAN","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-b-o-o-l-e-a-n.html","searchKeys":["BOOLEAN","const val BOOLEAN: Int = 1","de.gematik.openhealth.asn1.Asn1Type.BOOLEAN"]},{"name":"const val CHARACTER_STRING: Int = 29","description":"de.gematik.openhealth.asn1.Asn1Type.CHARACTER_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-c-h-a-r-a-c-t-e-r_-s-t-r-i-n-g.html","searchKeys":["CHARACTER_STRING","const val CHARACTER_STRING: Int = 29","de.gematik.openhealth.asn1.Asn1Type.CHARACTER_STRING"]},{"name":"const val CONSTRUCTED: Int = 32","description":"de.gematik.openhealth.asn1.Asn1Tag.Companion.CONSTRUCTED","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-companion/-c-o-n-s-t-r-u-c-t-e-d.html","searchKeys":["CONSTRUCTED","const val CONSTRUCTED: Int = 32","de.gematik.openhealth.asn1.Asn1Tag.Companion.CONSTRUCTED"]},{"name":"const val CONTEXT_SPECIFIC: Int = 128","description":"de.gematik.openhealth.asn1.Asn1Tag.Companion.CONTEXT_SPECIFIC","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-companion/-c-o-n-t-e-x-t_-s-p-e-c-i-f-i-c.html","searchKeys":["CONTEXT_SPECIFIC","const val CONTEXT_SPECIFIC: Int = 128","de.gematik.openhealth.asn1.Asn1Tag.Companion.CONTEXT_SPECIFIC"]},{"name":"const val DATE: Int = 31","description":"de.gematik.openhealth.asn1.Asn1Type.DATE","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-d-a-t-e.html","searchKeys":["DATE","const val DATE: Int = 31","de.gematik.openhealth.asn1.Asn1Type.DATE"]},{"name":"const val DATE_TIME: Int = 33","description":"de.gematik.openhealth.asn1.Asn1Type.DATE_TIME","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-d-a-t-e_-t-i-m-e.html","searchKeys":["DATE_TIME","const val DATE_TIME: Int = 33","de.gematik.openhealth.asn1.Asn1Type.DATE_TIME"]},{"name":"const val DURATION: Int = 34","description":"de.gematik.openhealth.asn1.Asn1Type.DURATION","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-d-u-r-a-t-i-o-n.html","searchKeys":["DURATION","const val DURATION: Int = 34","de.gematik.openhealth.asn1.Asn1Type.DURATION"]},{"name":"const val EMBEDDED_PDV: Int = 11","description":"de.gematik.openhealth.asn1.Asn1Type.EMBEDDED_PDV","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-e-m-b-e-d-d-e-d_-p-d-v.html","searchKeys":["EMBEDDED_PDV","const val EMBEDDED_PDV: Int = 11","de.gematik.openhealth.asn1.Asn1Type.EMBEDDED_PDV"]},{"name":"const val ENUMERATED: Int = 10","description":"de.gematik.openhealth.asn1.Asn1Type.ENUMERATED","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-e-n-u-m-e-r-a-t-e-d.html","searchKeys":["ENUMERATED","const val ENUMERATED: Int = 10","de.gematik.openhealth.asn1.Asn1Type.ENUMERATED"]},{"name":"const val EXTERNAL: Int = 8","description":"de.gematik.openhealth.asn1.Asn1Type.EXTERNAL","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-e-x-t-e-r-n-a-l.html","searchKeys":["EXTERNAL","const val EXTERNAL: Int = 8","de.gematik.openhealth.asn1.Asn1Type.EXTERNAL"]},{"name":"const val GENERALIZED_TIME: Int = 24","description":"de.gematik.openhealth.asn1.Asn1Type.GENERALIZED_TIME","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-g-e-n-e-r-a-l-i-z-e-d_-t-i-m-e.html","searchKeys":["GENERALIZED_TIME","const val GENERALIZED_TIME: Int = 24","de.gematik.openhealth.asn1.Asn1Type.GENERALIZED_TIME"]},{"name":"const val GENERAL_STRING: Int = 27","description":"de.gematik.openhealth.asn1.Asn1Type.GENERAL_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-g-e-n-e-r-a-l_-s-t-r-i-n-g.html","searchKeys":["GENERAL_STRING","const val GENERAL_STRING: Int = 27","de.gematik.openhealth.asn1.Asn1Type.GENERAL_STRING"]},{"name":"const val GRAPHIC_STRING: Int = 25","description":"de.gematik.openhealth.asn1.Asn1Type.GRAPHIC_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-g-r-a-p-h-i-c_-s-t-r-i-n-g.html","searchKeys":["GRAPHIC_STRING","const val GRAPHIC_STRING: Int = 25","de.gematik.openhealth.asn1.Asn1Type.GRAPHIC_STRING"]},{"name":"const val IA5_STRING: Int = 22","description":"de.gematik.openhealth.asn1.Asn1Type.IA5_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-i-a5_-s-t-r-i-n-g.html","searchKeys":["IA5_STRING","const val IA5_STRING: Int = 22","de.gematik.openhealth.asn1.Asn1Type.IA5_STRING"]},{"name":"const val INTEGER: Int = 2","description":"de.gematik.openhealth.asn1.Asn1Type.INTEGER","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-i-n-t-e-g-e-r.html","searchKeys":["INTEGER","const val INTEGER: Int = 2","de.gematik.openhealth.asn1.Asn1Type.INTEGER"]},{"name":"const val NULL: Int = 5","description":"de.gematik.openhealth.asn1.Asn1Type.NULL","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-n-u-l-l.html","searchKeys":["NULL","const val NULL: Int = 5","de.gematik.openhealth.asn1.Asn1Type.NULL"]},{"name":"const val NUMERIC_STRING: Int = 18","description":"de.gematik.openhealth.asn1.Asn1Type.NUMERIC_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-n-u-m-e-r-i-c_-s-t-r-i-n-g.html","searchKeys":["NUMERIC_STRING","const val NUMERIC_STRING: Int = 18","de.gematik.openhealth.asn1.Asn1Type.NUMERIC_STRING"]},{"name":"const val OBJECT_DESCRIPTOR: Int = 7","description":"de.gematik.openhealth.asn1.Asn1Type.OBJECT_DESCRIPTOR","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-o-b-j-e-c-t_-d-e-s-c-r-i-p-t-o-r.html","searchKeys":["OBJECT_DESCRIPTOR","const val OBJECT_DESCRIPTOR: Int = 7","de.gematik.openhealth.asn1.Asn1Type.OBJECT_DESCRIPTOR"]},{"name":"const val OBJECT_IDENTIFIER: Int = 6","description":"de.gematik.openhealth.asn1.Asn1Type.OBJECT_IDENTIFIER","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-o-b-j-e-c-t_-i-d-e-n-t-i-f-i-e-r.html","searchKeys":["OBJECT_IDENTIFIER","const val OBJECT_IDENTIFIER: Int = 6","de.gematik.openhealth.asn1.Asn1Type.OBJECT_IDENTIFIER"]},{"name":"const val OCTET_STRING: Int = 4","description":"de.gematik.openhealth.asn1.Asn1Type.OCTET_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-o-c-t-e-t_-s-t-r-i-n-g.html","searchKeys":["OCTET_STRING","const val OCTET_STRING: Int = 4","de.gematik.openhealth.asn1.Asn1Type.OCTET_STRING"]},{"name":"const val PRINTABLE_STRING: Int = 19","description":"de.gematik.openhealth.asn1.Asn1Type.PRINTABLE_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-p-r-i-n-t-a-b-l-e_-s-t-r-i-n-g.html","searchKeys":["PRINTABLE_STRING","const val PRINTABLE_STRING: Int = 19","de.gematik.openhealth.asn1.Asn1Type.PRINTABLE_STRING"]},{"name":"const val PRIVATE: Int = 192","description":"de.gematik.openhealth.asn1.Asn1Tag.Companion.PRIVATE","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-companion/-p-r-i-v-a-t-e.html","searchKeys":["PRIVATE","const val PRIVATE: Int = 192","de.gematik.openhealth.asn1.Asn1Tag.Companion.PRIVATE"]},{"name":"const val REAL: Int = 9","description":"de.gematik.openhealth.asn1.Asn1Type.REAL","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-r-e-a-l.html","searchKeys":["REAL","const val REAL: Int = 9","de.gematik.openhealth.asn1.Asn1Type.REAL"]},{"name":"const val RELATIVE_OID: Int = 13","description":"de.gematik.openhealth.asn1.Asn1Type.RELATIVE_OID","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-r-e-l-a-t-i-v-e_-o-i-d.html","searchKeys":["RELATIVE_OID","const val RELATIVE_OID: Int = 13","de.gematik.openhealth.asn1.Asn1Type.RELATIVE_OID"]},{"name":"const val SEQUENCE: Int = 16","description":"de.gematik.openhealth.asn1.Asn1Type.SEQUENCE","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-s-e-q-u-e-n-c-e.html","searchKeys":["SEQUENCE","const val SEQUENCE: Int = 16","de.gematik.openhealth.asn1.Asn1Type.SEQUENCE"]},{"name":"const val SET: Int = 17","description":"de.gematik.openhealth.asn1.Asn1Type.SET","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-s-e-t.html","searchKeys":["SET","const val SET: Int = 17","de.gematik.openhealth.asn1.Asn1Type.SET"]},{"name":"const val TELETEX_STRING: Int = 20","description":"de.gematik.openhealth.asn1.Asn1Type.TELETEX_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-t-e-l-e-t-e-x_-s-t-r-i-n-g.html","searchKeys":["TELETEX_STRING","const val TELETEX_STRING: Int = 20","de.gematik.openhealth.asn1.Asn1Type.TELETEX_STRING"]},{"name":"const val TIME: Int = 14","description":"de.gematik.openhealth.asn1.Asn1Type.TIME","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-t-i-m-e.html","searchKeys":["TIME","const val TIME: Int = 14","de.gematik.openhealth.asn1.Asn1Type.TIME"]},{"name":"const val TIME_OF_DAY: Int = 32","description":"de.gematik.openhealth.asn1.Asn1Type.TIME_OF_DAY","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-t-i-m-e_-o-f_-d-a-y.html","searchKeys":["TIME_OF_DAY","const val TIME_OF_DAY: Int = 32","de.gematik.openhealth.asn1.Asn1Type.TIME_OF_DAY"]},{"name":"const val UNIVERSAL_STRING: Int = 28","description":"de.gematik.openhealth.asn1.Asn1Type.UNIVERSAL_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-u-n-i-v-e-r-s-a-l_-s-t-r-i-n-g.html","searchKeys":["UNIVERSAL_STRING","const val UNIVERSAL_STRING: Int = 28","de.gematik.openhealth.asn1.Asn1Type.UNIVERSAL_STRING"]},{"name":"const val UTC_TIME: Int = 23","description":"de.gematik.openhealth.asn1.Asn1Type.UTC_TIME","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-u-t-c_-t-i-m-e.html","searchKeys":["UTC_TIME","const val UTC_TIME: Int = 23","de.gematik.openhealth.asn1.Asn1Type.UTC_TIME"]},{"name":"const val UTF8_STRING: Int = 12","description":"de.gematik.openhealth.asn1.Asn1Type.UTF8_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-u-t-f8_-s-t-r-i-n-g.html","searchKeys":["UTF8_STRING","const val UTF8_STRING: Int = 12","de.gematik.openhealth.asn1.Asn1Type.UTF8_STRING"]},{"name":"const val VIDEOTEX_STRING: Int = 21","description":"de.gematik.openhealth.asn1.Asn1Type.VIDEOTEX_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-v-i-d-e-o-t-e-x_-s-t-r-i-n-g.html","searchKeys":["VIDEOTEX_STRING","const val VIDEOTEX_STRING: Int = 21","de.gematik.openhealth.asn1.Asn1Type.VIDEOTEX_STRING"]},{"name":"const val VISIBLE_STRING: Int = 26","description":"de.gematik.openhealth.asn1.Asn1Type.VISIBLE_STRING","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/-v-i-s-i-b-l-e_-s-t-r-i-n-g.html","searchKeys":["VISIBLE_STRING","const val VISIBLE_STRING: Int = 26","de.gematik.openhealth.asn1.Asn1Type.VISIBLE_STRING"]},{"name":"constructor()","description":"de.gematik.openhealth.asn1.Asn1Encoder.Asn1Encoder","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-asn1-encoder.html","searchKeys":["Asn1Encoder","constructor()","de.gematik.openhealth.asn1.Asn1Encoder.Asn1Encoder"]},{"name":"constructor()","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.WriterScope","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/-writer-scope.html","searchKeys":["WriterScope","constructor()","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.WriterScope"]},{"name":"constructor(data: ByteArray)","description":"de.gematik.openhealth.asn1.Asn1Decoder.Asn1Decoder","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-asn1-decoder.html","searchKeys":["Asn1Decoder","constructor(data: ByteArray)","de.gematik.openhealth.asn1.Asn1Decoder.Asn1Decoder"]},{"name":"constructor(hours: Int, minutes: Int)","description":"de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.GeneralizedOffset","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-generalized-offset/-generalized-offset.html","searchKeys":["GeneralizedOffset","constructor(hours: Int, minutes: Int)","de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.GeneralizedOffset"]},{"name":"constructor(hours: Int, minutes: Int)","description":"de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.UtcOffset","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-utc-offset/-utc-offset.html","searchKeys":["UtcOffset","constructor(hours: Int, minutes: Int)","de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.UtcOffset"]},{"name":"constructor(message: String)","description":"de.gematik.openhealth.asn1.Asn1DecoderException.Asn1DecoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder-exception/-asn1-decoder-exception.html","searchKeys":["Asn1DecoderException","constructor(message: String)","de.gematik.openhealth.asn1.Asn1DecoderException.Asn1DecoderException"]},{"name":"constructor(message: String)","description":"de.gematik.openhealth.asn1.Asn1EncoderException.Asn1EncoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder-exception/-asn1-encoder-exception.html","searchKeys":["Asn1EncoderException","constructor(message: String)","de.gematik.openhealth.asn1.Asn1EncoderException.Asn1EncoderException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"de.gematik.openhealth.asn1.Asn1DecoderException.Asn1DecoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder-exception/-asn1-decoder-exception.html","searchKeys":["Asn1DecoderException","constructor(message: String, cause: Throwable?)","de.gematik.openhealth.asn1.Asn1DecoderException.Asn1DecoderException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"de.gematik.openhealth.asn1.Asn1EncoderException.Asn1EncoderException","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder-exception/-asn1-encoder-exception.html","searchKeys":["Asn1EncoderException","constructor(message: String, cause: Throwable?)","de.gematik.openhealth.asn1.Asn1EncoderException.Asn1EncoderException"]},{"name":"constructor(startOffset: Int, endOffset: Int)","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.ParserScope","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/-parser-scope.html","searchKeys":["ParserScope","constructor(startOffset: Int, endOffset: Int)","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.ParserScope"]},{"name":"constructor(tagClass: Int, tagNumber: Int)","description":"de.gematik.openhealth.asn1.Asn1Tag.Asn1Tag","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-asn1-tag.html","searchKeys":["Asn1Tag","constructor(tagClass: Int, tagNumber: Int)","de.gematik.openhealth.asn1.Asn1Tag.Asn1Tag"]},{"name":"constructor(year: Int, month: Int, day: Int, hour: Int, minute: Int, second: Int?, offset: Asn1Offset.UtcOffset?)","description":"de.gematik.openhealth.asn1.Asn1UtcTime.Asn1UtcTime","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/-asn1-utc-time.html","searchKeys":["Asn1UtcTime","constructor(year: Int, month: Int, day: Int, hour: Int, minute: Int, second: Int?, offset: Asn1Offset.UtcOffset?)","de.gematik.openhealth.asn1.Asn1UtcTime.Asn1UtcTime"]},{"name":"constructor(year: Int, month: Int, day: Int, hour: Int, minute: Int?, second: Int?, fractionOfSecond: Int?, offset: Asn1Offset.GeneralizedOffset?)","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.Asn1GeneralizedTime","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/-asn1-generalized-time.html","searchKeys":["Asn1GeneralizedTime","constructor(year: Int, month: Int, day: Int, hour: Int, minute: Int?, second: Int?, fractionOfSecond: Int?, offset: Asn1Offset.GeneralizedOffset?)","de.gematik.openhealth.asn1.Asn1GeneralizedTime.Asn1GeneralizedTime"]},{"name":"data class Asn1GeneralizedTime(val year: Int, val month: Int, val day: Int, val hour: Int, val minute: Int?, val second: Int?, val fractionOfSecond: Int?, val offset: Asn1Offset.GeneralizedOffset?)","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/index.html","searchKeys":["Asn1GeneralizedTime","data class Asn1GeneralizedTime(val year: Int, val month: Int, val day: Int, val hour: Int, val minute: Int?, val second: Int?, val fractionOfSecond: Int?, val offset: Asn1Offset.GeneralizedOffset?)","de.gematik.openhealth.asn1.Asn1GeneralizedTime"]},{"name":"data class Asn1Tag(val tagClass: Int, val tagNumber: Int)","description":"de.gematik.openhealth.asn1.Asn1Tag","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/index.html","searchKeys":["Asn1Tag","data class Asn1Tag(val tagClass: Int, val tagNumber: Int)","de.gematik.openhealth.asn1.Asn1Tag"]},{"name":"data class Asn1UtcTime(val year: Int, val month: Int, val day: Int, val hour: Int, val minute: Int, val second: Int?, val offset: Asn1Offset.UtcOffset?)","description":"de.gematik.openhealth.asn1.Asn1UtcTime","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/index.html","searchKeys":["Asn1UtcTime","data class Asn1UtcTime(val year: Int, val month: Int, val day: Int, val hour: Int, val minute: Int, val second: Int?, val offset: Asn1Offset.UtcOffset?)","de.gematik.openhealth.asn1.Asn1UtcTime"]},{"name":"data class GeneralizedOffset(val hours: Int, val minutes: Int) : Asn1Offset","description":"de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-generalized-offset/index.html","searchKeys":["GeneralizedOffset","data class GeneralizedOffset(val hours: Int, val minutes: Int) : Asn1Offset","de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset"]},{"name":"data class UtcOffset(val hours: Int, val minutes: Int) : Asn1Offset","description":"de.gematik.openhealth.asn1.Asn1Offset.UtcOffset","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-utc-offset/index.html","searchKeys":["UtcOffset","data class UtcOffset(val hours: Int, val minutes: Int) : Asn1Offset","de.gematik.openhealth.asn1.Asn1Offset.UtcOffset"]},{"name":"fun <T> advance(vararg block: Asn1Decoder.ParserScope.() -> T): T","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.advance","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/advance.html","searchKeys":["advance","fun <T> advance(vararg block: Asn1Decoder.ParserScope.() -> T): T","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.advance"]},{"name":"fun <T> advanceWithTag(tagNumber: Int, tagClass: Int = 0, block: Asn1Decoder.ParserScope.() -> T): T","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.advanceWithTag","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/advance-with-tag.html","searchKeys":["advanceWithTag","fun <T> advanceWithTag(tagNumber: Int, tagClass: Int = 0, block: Asn1Decoder.ParserScope.() -> T): T","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.advanceWithTag"]},{"name":"fun <T> optional(block: Asn1Decoder.ParserScope.() -> T): T?","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.optional","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/optional.html","searchKeys":["optional","fun <T> optional(block: Asn1Decoder.ParserScope.() -> T): T?","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.optional"]},{"name":"fun <T> read(block: Asn1Decoder.ParserScope.() -> T): T","description":"de.gematik.openhealth.asn1.Asn1Decoder.read","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/read.html","searchKeys":["read","fun <T> read(block: Asn1Decoder.ParserScope.() -> T): T","de.gematik.openhealth.asn1.Asn1Decoder.read"]},{"name":"fun Asn1Decoder.ParserScope.readBitString(): ByteArray","description":"de.gematik.openhealth.asn1.readBitString","location":"asn1/de.gematik.openhealth.asn1/read-bit-string.html","searchKeys":["readBitString","fun Asn1Decoder.ParserScope.readBitString(): ByteArray","de.gematik.openhealth.asn1.readBitString"]},{"name":"fun Asn1Decoder.ParserScope.readBoolean(): Boolean","description":"de.gematik.openhealth.asn1.readBoolean","location":"asn1/de.gematik.openhealth.asn1/read-boolean.html","searchKeys":["readBoolean","fun Asn1Decoder.ParserScope.readBoolean(): Boolean","de.gematik.openhealth.asn1.readBoolean"]},{"name":"fun Asn1Decoder.ParserScope.readGeneralizedTime(): Asn1GeneralizedTime","description":"de.gematik.openhealth.asn1.readGeneralizedTime","location":"asn1/de.gematik.openhealth.asn1/read-generalized-time.html","searchKeys":["readGeneralizedTime","fun Asn1Decoder.ParserScope.readGeneralizedTime(): Asn1GeneralizedTime","de.gematik.openhealth.asn1.readGeneralizedTime"]},{"name":"fun Asn1Decoder.ParserScope.readInt(): Int","description":"de.gematik.openhealth.asn1.readInt","location":"asn1/de.gematik.openhealth.asn1/read-int.html","searchKeys":["readInt","fun Asn1Decoder.ParserScope.readInt(): Int","de.gematik.openhealth.asn1.readInt"]},{"name":"fun Asn1Decoder.ParserScope.readObjectIdentifier(): String","description":"de.gematik.openhealth.asn1.readObjectIdentifier","location":"asn1/de.gematik.openhealth.asn1/read-object-identifier.html","searchKeys":["readObjectIdentifier","fun Asn1Decoder.ParserScope.readObjectIdentifier(): String","de.gematik.openhealth.asn1.readObjectIdentifier"]},{"name":"fun Asn1Decoder.ParserScope.readOctetString(): ByteArray","description":"de.gematik.openhealth.asn1.readOctetString","location":"asn1/de.gematik.openhealth.asn1/read-octet-string.html","searchKeys":["readOctetString","fun Asn1Decoder.ParserScope.readOctetString(): ByteArray","de.gematik.openhealth.asn1.readOctetString"]},{"name":"fun Asn1Decoder.ParserScope.readUtcTime(): Asn1UtcTime","description":"de.gematik.openhealth.asn1.readUtcTime","location":"asn1/de.gematik.openhealth.asn1/read-utc-time.html","searchKeys":["readUtcTime","fun Asn1Decoder.ParserScope.readUtcTime(): Asn1UtcTime","de.gematik.openhealth.asn1.readUtcTime"]},{"name":"fun Asn1Decoder.ParserScope.readUtf8String(): String","description":"de.gematik.openhealth.asn1.readUtf8String","location":"asn1/de.gematik.openhealth.asn1/read-utf8-string.html","searchKeys":["readUtf8String","fun Asn1Decoder.ParserScope.readUtf8String(): String","de.gematik.openhealth.asn1.readUtf8String"]},{"name":"fun Asn1Decoder.ParserScope.readVisibleString(): String","description":"de.gematik.openhealth.asn1.readVisibleString","location":"asn1/de.gematik.openhealth.asn1/read-visible-string.html","searchKeys":["readVisibleString","fun Asn1Decoder.ParserScope.readVisibleString(): String","de.gematik.openhealth.asn1.readVisibleString"]},{"name":"fun Asn1Encoder.WriterScope.writeBitString(value: ByteArray, unusedBits: Int = 0)","description":"de.gematik.openhealth.asn1.writeBitString","location":"asn1/de.gematik.openhealth.asn1/write-bit-string.html","searchKeys":["writeBitString","fun Asn1Encoder.WriterScope.writeBitString(value: ByteArray, unusedBits: Int = 0)","de.gematik.openhealth.asn1.writeBitString"]},{"name":"fun Asn1Encoder.WriterScope.writeBoolean(value: Boolean)","description":"de.gematik.openhealth.asn1.writeBoolean","location":"asn1/de.gematik.openhealth.asn1/write-boolean.html","searchKeys":["writeBoolean","fun Asn1Encoder.WriterScope.writeBoolean(value: Boolean)","de.gematik.openhealth.asn1.writeBoolean"]},{"name":"fun Asn1Encoder.WriterScope.writeGeneralizedTime(value: Asn1GeneralizedTime)","description":"de.gematik.openhealth.asn1.writeGeneralizedTime","location":"asn1/de.gematik.openhealth.asn1/write-generalized-time.html","searchKeys":["writeGeneralizedTime","fun Asn1Encoder.WriterScope.writeGeneralizedTime(value: Asn1GeneralizedTime)","de.gematik.openhealth.asn1.writeGeneralizedTime"]},{"name":"fun Asn1Encoder.WriterScope.writeInt(value: Int)","description":"de.gematik.openhealth.asn1.writeInt","location":"asn1/de.gematik.openhealth.asn1/write-int.html","searchKeys":["writeInt","fun Asn1Encoder.WriterScope.writeInt(value: Int)","de.gematik.openhealth.asn1.writeInt"]},{"name":"fun Asn1Encoder.WriterScope.writeObjectIdentifier(oid: String)","description":"de.gematik.openhealth.asn1.writeObjectIdentifier","location":"asn1/de.gematik.openhealth.asn1/write-object-identifier.html","searchKeys":["writeObjectIdentifier","fun Asn1Encoder.WriterScope.writeObjectIdentifier(oid: String)","de.gematik.openhealth.asn1.writeObjectIdentifier"]},{"name":"fun Asn1Encoder.WriterScope.writeOctetString(value: ByteArray)","description":"de.gematik.openhealth.asn1.writeOctetString","location":"asn1/de.gematik.openhealth.asn1/write-octet-string.html","searchKeys":["writeOctetString","fun Asn1Encoder.WriterScope.writeOctetString(value: ByteArray)","de.gematik.openhealth.asn1.writeOctetString"]},{"name":"fun Asn1Encoder.WriterScope.writeTag(tagNumber: Int, tagClass: Int = 0)","description":"de.gematik.openhealth.asn1.writeTag","location":"asn1/de.gematik.openhealth.asn1/write-tag.html","searchKeys":["writeTag","fun Asn1Encoder.WriterScope.writeTag(tagNumber: Int, tagClass: Int = 0)","de.gematik.openhealth.asn1.writeTag"]},{"name":"fun Asn1Encoder.WriterScope.writeTaggedObject(tagNumber: Int, tagClass: Int = 0, block: Asn1Encoder.WriterScope.() -> Unit)","description":"de.gematik.openhealth.asn1.writeTaggedObject","location":"asn1/de.gematik.openhealth.asn1/write-tagged-object.html","searchKeys":["writeTaggedObject","fun Asn1Encoder.WriterScope.writeTaggedObject(tagNumber: Int, tagClass: Int = 0, block: Asn1Encoder.WriterScope.() -> Unit)","de.gematik.openhealth.asn1.writeTaggedObject"]},{"name":"fun Asn1Encoder.WriterScope.writeUtcTime(value: Asn1UtcTime)","description":"de.gematik.openhealth.asn1.writeUtcTime","location":"asn1/de.gematik.openhealth.asn1/write-utc-time.html","searchKeys":["writeUtcTime","fun Asn1Encoder.WriterScope.writeUtcTime(value: Asn1UtcTime)","de.gematik.openhealth.asn1.writeUtcTime"]},{"name":"fun Asn1Encoder.WriterScope.writeUtf8String(value: String)","description":"de.gematik.openhealth.asn1.writeUtf8String","location":"asn1/de.gematik.openhealth.asn1/write-utf8-string.html","searchKeys":["writeUtf8String","fun Asn1Encoder.WriterScope.writeUtf8String(value: String)","de.gematik.openhealth.asn1.writeUtf8String"]},{"name":"fun readByte(): Byte","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readByte","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/read-byte.html","searchKeys":["readByte","fun readByte(): Byte","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readByte"]},{"name":"fun readBytes(length: Int): ByteArray","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readBytes","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/read-bytes.html","searchKeys":["readBytes","fun readBytes(length: Int): ByteArray","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readBytes"]},{"name":"fun readInt(length: Int, signed: Boolean = true): Int","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readInt","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/read-int.html","searchKeys":["readInt","fun readInt(length: Int, signed: Boolean = true): Int","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readInt"]},{"name":"fun readLength(): Int","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readLength","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/read-length.html","searchKeys":["readLength","fun readLength(): Int","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readLength"]},{"name":"fun readTag(): Asn1Tag","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readTag","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/read-tag.html","searchKeys":["readTag","fun readTag(): Asn1Tag","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.readTag"]},{"name":"fun skip(length: Int)","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.skip","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/skip.html","searchKeys":["skip","fun skip(length: Int)","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.skip"]},{"name":"fun skipToEnd()","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.skipToEnd","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/skip-to-end.html","searchKeys":["skipToEnd","fun skipToEnd()","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.skipToEnd"]},{"name":"fun write(block: Asn1Encoder.WriterScope.() -> Unit): ByteArray","description":"de.gematik.openhealth.asn1.Asn1Encoder.write","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/write.html","searchKeys":["write","fun write(block: Asn1Encoder.WriterScope.() -> Unit): ByteArray","de.gematik.openhealth.asn1.Asn1Encoder.write"]},{"name":"fun write(byte: Byte)","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/write.html","searchKeys":["write","fun write(byte: Byte)","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write"]},{"name":"fun write(bytes: ByteArray)","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/write.html","searchKeys":["write","fun write(bytes: ByteArray)","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write"]},{"name":"fun write(integer: Int)","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/write.html","searchKeys":["write","fun write(integer: Int)","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write"]},{"name":"fun write(other: Asn1Encoder.WriterScope)","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/write.html","searchKeys":["write","fun write(other: Asn1Encoder.WriterScope)","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.write"]},{"name":"fun writeLength(length: Int)","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.writeLength","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/write-length.html","searchKeys":["writeLength","fun writeLength(length: Int)","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.writeLength"]},{"name":"inline fun check(value: Boolean, message: () -> String)","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.check","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/check.html","searchKeys":["check","inline fun check(value: Boolean, message: () -> String)","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.check"]},{"name":"inline fun fail(cause: Throwable, message: () -> String): Nothing","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.fail","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/fail.html","searchKeys":["fail","inline fun fail(cause: Throwable, message: () -> String): Nothing","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.fail"]},{"name":"inline fun fail(message: () -> String): Nothing","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.fail","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/fail.html","searchKeys":["fail","inline fun fail(message: () -> String): Nothing","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.fail"]},{"name":"inline fun fail(message: () -> String): Nothing","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.fail","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/fail.html","searchKeys":["fail","inline fun fail(message: () -> String): Nothing","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.fail"]},{"name":"inner class ParserScope(startOffset: Int, endOffset: Int)","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/index.html","searchKeys":["ParserScope","inner class ParserScope(startOffset: Int, endOffset: Int)","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope"]},{"name":"object Asn1Type","description":"de.gematik.openhealth.asn1.Asn1Type","location":"asn1/de.gematik.openhealth.asn1/-asn1-type/index.html","searchKeys":["Asn1Type","object Asn1Type","de.gematik.openhealth.asn1.Asn1Type"]},{"name":"object Companion","description":"de.gematik.openhealth.asn1.Asn1Tag.Companion","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.asn1.Asn1Tag.Companion"]},{"name":"open override fun toString(): String","description":"de.gematik.openhealth.asn1.Asn1Tag.toString","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/to-string.html","searchKeys":["toString","open override fun toString(): String","de.gematik.openhealth.asn1.Asn1Tag.toString"]},{"name":"open override val cause: Throwable?","description":"de.gematik.openhealth.asn1.Asn1DecoderException.cause","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder-exception/cause.html","searchKeys":["cause","open override val cause: Throwable?","de.gematik.openhealth.asn1.Asn1DecoderException.cause"]},{"name":"open override val cause: Throwable?","description":"de.gematik.openhealth.asn1.Asn1EncoderException.cause","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder-exception/cause.html","searchKeys":["cause","open override val cause: Throwable?","de.gematik.openhealth.asn1.Asn1EncoderException.cause"]},{"name":"open override val message: String","description":"de.gematik.openhealth.asn1.Asn1DecoderException.message","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder-exception/message.html","searchKeys":["message","open override val message: String","de.gematik.openhealth.asn1.Asn1DecoderException.message"]},{"name":"open override val message: String","description":"de.gematik.openhealth.asn1.Asn1EncoderException.message","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder-exception/message.html","searchKeys":["message","open override val message: String","de.gematik.openhealth.asn1.Asn1EncoderException.message"]},{"name":"sealed class Asn1Offset","description":"de.gematik.openhealth.asn1.Asn1Offset","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/index.html","searchKeys":["Asn1Offset","sealed class Asn1Offset","de.gematik.openhealth.asn1.Asn1Offset"]},{"name":"val day: Int","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.day","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/day.html","searchKeys":["day","val day: Int","de.gematik.openhealth.asn1.Asn1GeneralizedTime.day"]},{"name":"val day: Int","description":"de.gematik.openhealth.asn1.Asn1UtcTime.day","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/day.html","searchKeys":["day","val day: Int","de.gematik.openhealth.asn1.Asn1UtcTime.day"]},{"name":"val fractionOfSecond: Int?","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.fractionOfSecond","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/fraction-of-second.html","searchKeys":["fractionOfSecond","val fractionOfSecond: Int?","de.gematik.openhealth.asn1.Asn1GeneralizedTime.fractionOfSecond"]},{"name":"val hour: Int","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.hour","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/hour.html","searchKeys":["hour","val hour: Int","de.gematik.openhealth.asn1.Asn1GeneralizedTime.hour"]},{"name":"val hour: Int","description":"de.gematik.openhealth.asn1.Asn1UtcTime.hour","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/hour.html","searchKeys":["hour","val hour: Int","de.gematik.openhealth.asn1.Asn1UtcTime.hour"]},{"name":"val hours: Int","description":"de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.hours","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-generalized-offset/hours.html","searchKeys":["hours","val hours: Int","de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.hours"]},{"name":"val hours: Int","description":"de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.hours","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-utc-offset/hours.html","searchKeys":["hours","val hours: Int","de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.hours"]},{"name":"val minute: Int","description":"de.gematik.openhealth.asn1.Asn1UtcTime.minute","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/minute.html","searchKeys":["minute","val minute: Int","de.gematik.openhealth.asn1.Asn1UtcTime.minute"]},{"name":"val minute: Int?","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.minute","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/minute.html","searchKeys":["minute","val minute: Int?","de.gematik.openhealth.asn1.Asn1GeneralizedTime.minute"]},{"name":"val minutes: Int","description":"de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.minutes","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-generalized-offset/minutes.html","searchKeys":["minutes","val minutes: Int","de.gematik.openhealth.asn1.Asn1Offset.GeneralizedOffset.minutes"]},{"name":"val minutes: Int","description":"de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.minutes","location":"asn1/de.gematik.openhealth.asn1/-asn1-offset/-utc-offset/minutes.html","searchKeys":["minutes","val minutes: Int","de.gematik.openhealth.asn1.Asn1Offset.UtcOffset.minutes"]},{"name":"val month: Int","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.month","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/month.html","searchKeys":["month","val month: Int","de.gematik.openhealth.asn1.Asn1GeneralizedTime.month"]},{"name":"val month: Int","description":"de.gematik.openhealth.asn1.Asn1UtcTime.month","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/month.html","searchKeys":["month","val month: Int","de.gematik.openhealth.asn1.Asn1UtcTime.month"]},{"name":"val offset: Asn1Offset.GeneralizedOffset?","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.offset","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/offset.html","searchKeys":["offset","val offset: Asn1Offset.GeneralizedOffset?","de.gematik.openhealth.asn1.Asn1GeneralizedTime.offset"]},{"name":"val offset: Asn1Offset.UtcOffset?","description":"de.gematik.openhealth.asn1.Asn1UtcTime.offset","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/offset.html","searchKeys":["offset","val offset: Asn1Offset.UtcOffset?","de.gematik.openhealth.asn1.Asn1UtcTime.offset"]},{"name":"val remainingLength: Int","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.remainingLength","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/remaining-length.html","searchKeys":["remainingLength","val remainingLength: Int","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.remainingLength"]},{"name":"val second: Int?","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.second","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/second.html","searchKeys":["second","val second: Int?","de.gematik.openhealth.asn1.Asn1GeneralizedTime.second"]},{"name":"val second: Int?","description":"de.gematik.openhealth.asn1.Asn1UtcTime.second","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/second.html","searchKeys":["second","val second: Int?","de.gematik.openhealth.asn1.Asn1UtcTime.second"]},{"name":"val tagClass: Int","description":"de.gematik.openhealth.asn1.Asn1Tag.tagClass","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/tag-class.html","searchKeys":["tagClass","val tagClass: Int","de.gematik.openhealth.asn1.Asn1Tag.tagClass"]},{"name":"val tagNumber: Int","description":"de.gematik.openhealth.asn1.Asn1Tag.tagNumber","location":"asn1/de.gematik.openhealth.asn1/-asn1-tag/tag-number.html","searchKeys":["tagNumber","val tagNumber: Int","de.gematik.openhealth.asn1.Asn1Tag.tagNumber"]},{"name":"val year: Int","description":"de.gematik.openhealth.asn1.Asn1GeneralizedTime.year","location":"asn1/de.gematik.openhealth.asn1/-asn1-generalized-time/year.html","searchKeys":["year","val year: Int","de.gematik.openhealth.asn1.Asn1GeneralizedTime.year"]},{"name":"val year: Int","description":"de.gematik.openhealth.asn1.Asn1UtcTime.year","location":"asn1/de.gematik.openhealth.asn1/-asn1-utc-time/year.html","searchKeys":["year","val year: Int","de.gematik.openhealth.asn1.Asn1UtcTime.year"]},{"name":"var buffer: ByteArray","description":"de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.buffer","location":"asn1/de.gematik.openhealth.asn1/-asn1-encoder/-writer-scope/buffer.html","searchKeys":["buffer","var buffer: ByteArray","de.gematik.openhealth.asn1.Asn1Encoder.WriterScope.buffer"]},{"name":"var endOffset: Int","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.endOffset","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/end-offset.html","searchKeys":["endOffset","var endOffset: Int","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.endOffset"]},{"name":"var offset: Int","description":"de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.offset","location":"asn1/de.gematik.openhealth.asn1/-asn1-decoder/-parser-scope/offset.html","searchKeys":["offset","var offset: Int","de.gematik.openhealth.asn1.Asn1Decoder.ParserScope.offset"]},{"name":"AUTHENTICATION_FAILURE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.AUTHENTICATION_FAILURE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-f-a-i-l-u-r-e/index.html","searchKeys":["AUTHENTICATION_FAILURE","AUTHENTICATION_FAILURE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.AUTHENTICATION_FAILURE"]},{"name":"CHANNEL_CLOSED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.CHANNEL_CLOSED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-c-h-a-n-n-e-l_-c-l-o-s-e-d/index.html","searchKeys":["CHANNEL_CLOSED","CHANNEL_CLOSED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.CHANNEL_CLOSED"]},{"name":"COMMAND_BLOCKED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.COMMAND_BLOCKED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-c-o-m-m-a-n-d_-b-l-o-c-k-e-d/index.html","searchKeys":["COMMAND_BLOCKED","COMMAND_BLOCKED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.COMMAND_BLOCKED"]},{"name":"CORRUPT_DATA_WARNING","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.CORRUPT_DATA_WARNING","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-c-o-r-r-u-p-t_-d-a-t-a_-w-a-r-n-i-n-g/index.html","searchKeys":["CORRUPT_DATA_WARNING","CORRUPT_DATA_WARNING","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.CORRUPT_DATA_WARNING"]},{"name":"ChangeReferenceData","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.ChangeReferenceData","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/-change-reference-data/index.html","searchKeys":["ChangeReferenceData","ChangeReferenceData","de.gematik.openhealth.smartcard.command.UnlockMethod.ChangeReferenceData"]},{"name":"DATA_TOO_BIG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DATA_TOO_BIG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-d-a-t-a_-t-o-o_-b-i-g/index.html","searchKeys":["DATA_TOO_BIG","DATA_TOO_BIG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DATA_TOO_BIG"]},{"name":"DATA_TRUNCATED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DATA_TRUNCATED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-d-a-t-a_-t-r-u-n-c-a-t-e-d/index.html","searchKeys":["DATA_TRUNCATED","DATA_TRUNCATED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DATA_TRUNCATED"]},{"name":"DF_NAME_EXISTS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DF_NAME_EXISTS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-d-f_-n-a-m-e_-e-x-i-s-t-s/index.html","searchKeys":["DF_NAME_EXISTS","DF_NAME_EXISTS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DF_NAME_EXISTS"]},{"name":"DUPLICATED_OBJECTS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DUPLICATED_OBJECTS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-d-u-p-l-i-c-a-t-e-d_-o-b-j-e-c-t-s/index.html","searchKeys":["DUPLICATED_OBJECTS","DUPLICATED_OBJECTS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.DUPLICATED_OBJECTS"]},{"name":"ENC","description":"de.gematik.openhealth.smartcard.card.Mode.ENC","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/-e-n-c/index.html","searchKeys":["ENC","ENC","de.gematik.openhealth.smartcard.card.Mode.ENC"]},{"name":"ENCIPHER_ERROR","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.ENCIPHER_ERROR","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-e-n-c-i-p-h-e-r_-e-r-r-o-r/index.html","searchKeys":["ENCIPHER_ERROR","ENCIPHER_ERROR","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.ENCIPHER_ERROR"]},{"name":"END_OF_FILE_WARNING","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.END_OF_FILE_WARNING","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-e-n-d_-o-f_-f-i-l-e_-w-a-r-n-i-n-g/index.html","searchKeys":["END_OF_FILE_WARNING","END_OF_FILE_WARNING","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.END_OF_FILE_WARNING"]},{"name":"END_OF_RECORD_WARNING","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.END_OF_RECORD_WARNING","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-e-n-d_-o-f_-r-e-c-o-r-d_-w-a-r-n-i-n-g/index.html","searchKeys":["END_OF_RECORD_WARNING","END_OF_RECORD_WARNING","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.END_OF_RECORD_WARNING"]},{"name":"FILE_DEACTIVATED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_DEACTIVATED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-f-i-l-e_-d-e-a-c-t-i-v-a-t-e-d/index.html","searchKeys":["FILE_DEACTIVATED","FILE_DEACTIVATED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_DEACTIVATED"]},{"name":"FILE_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-f-i-l-e_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["FILE_NOT_FOUND","FILE_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_NOT_FOUND"]},{"name":"FILE_TERMINATED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_TERMINATED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-f-i-l-e_-t-e-r-m-i-n-a-t-e-d/index.html","searchKeys":["FILE_TERMINATED","FILE_TERMINATED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FILE_TERMINATED"]},{"name":"FULL_RECORD_LIST","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FULL_RECORD_LIST","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-f-u-l-l_-r-e-c-o-r-d_-l-i-s-t/index.html","searchKeys":["FULL_RECORD_LIST","FULL_RECORD_LIST","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.FULL_RECORD_LIST"]},{"name":"INCONSISTENT_KEY_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INCONSISTENT_KEY_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-i-n-c-o-n-s-i-s-t-e-n-t_-k-e-y_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["INCONSISTENT_KEY_REFERENCE","INCONSISTENT_KEY_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INCONSISTENT_KEY_REFERENCE"]},{"name":"INCORRECT_SM_DO","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INCORRECT_SM_DO","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-i-n-c-o-r-r-e-c-t_-s-m_-d-o/index.html","searchKeys":["INCORRECT_SM_DO","INCORRECT_SM_DO","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INCORRECT_SM_DO"]},{"name":"INSTRUCTION_NOT_SUPPORTED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INSTRUCTION_NOT_SUPPORTED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-i-n-s-t-r-u-c-t-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/index.html","searchKeys":["INSTRUCTION_NOT_SUPPORTED","INSTRUCTION_NOT_SUPPORTED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.INSTRUCTION_NOT_SUPPORTED"]},{"name":"KEY_ALREADY_PRESENT","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_ALREADY_PRESENT","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-k-e-y_-a-l-r-e-a-d-y_-p-r-e-s-e-n-t/index.html","searchKeys":["KEY_ALREADY_PRESENT","KEY_ALREADY_PRESENT","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_ALREADY_PRESENT"]},{"name":"KEY_EXPIRED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_EXPIRED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-k-e-y_-e-x-p-i-r-e-d/index.html","searchKeys":["KEY_EXPIRED","KEY_EXPIRED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_EXPIRED"]},{"name":"KEY_INVALID","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_INVALID","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-k-e-y_-i-n-v-a-l-i-d/index.html","searchKeys":["KEY_INVALID","KEY_INVALID","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_INVALID"]},{"name":"KEY_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-k-e-y_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["KEY_NOT_FOUND","KEY_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_NOT_FOUND"]},{"name":"KEY_OR_PRK_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_OR_PRK_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-k-e-y_-o-r_-p-r-k_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["KEY_OR_PRK_NOT_FOUND","KEY_OR_PRK_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.KEY_OR_PRK_NOT_FOUND"]},{"name":"MAC","description":"de.gematik.openhealth.smartcard.card.Mode.MAC","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/-m-a-c/index.html","searchKeys":["MAC","MAC","de.gematik.openhealth.smartcard.card.Mode.MAC"]},{"name":"MEMORY_FAILURE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.MEMORY_FAILURE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-m-e-m-o-r-y_-f-a-i-l-u-r-e/index.html","searchKeys":["MEMORY_FAILURE","MEMORY_FAILURE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.MEMORY_FAILURE"]},{"name":"MESSAGE_TOO_LONG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.MESSAGE_TOO_LONG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-m-e-s-s-a-g-e_-t-o-o_-l-o-n-g/index.html","searchKeys":["MESSAGE_TOO_LONG","MESSAGE_TOO_LONG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.MESSAGE_TOO_LONG"]},{"name":"NEW_FILE_SIZE_WRONG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NEW_FILE_SIZE_WRONG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-e-w_-f-i-l-e_-s-i-z-e_-w-r-o-n-g/index.html","searchKeys":["NEW_FILE_SIZE_WRONG","NEW_FILE_SIZE_WRONG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NEW_FILE_SIZE_WRONG"]},{"name":"NO_AUTHENTICATION","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_AUTHENTICATION","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-a-u-t-h-e-n-t-i-c-a-t-i-o-n/index.html","searchKeys":["NO_AUTHENTICATION","NO_AUTHENTICATION","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_AUTHENTICATION"]},{"name":"NO_CURRENT_EF","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_CURRENT_EF","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-c-u-r-r-e-n-t_-e-f/index.html","searchKeys":["NO_CURRENT_EF","NO_CURRENT_EF","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_CURRENT_EF"]},{"name":"NO_KEY_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_KEY_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-k-e-y_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["NO_KEY_REFERENCE","NO_KEY_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_KEY_REFERENCE"]},{"name":"NO_MORE_CHANNELS_AVAILABLE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_MORE_CHANNELS_AVAILABLE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-m-o-r-e_-c-h-a-n-n-e-l-s_-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["NO_MORE_CHANNELS_AVAILABLE","NO_MORE_CHANNELS_AVAILABLE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_MORE_CHANNELS_AVAILABLE"]},{"name":"NO_PRK_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_PRK_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-p-r-k_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["NO_PRK_REFERENCE","NO_PRK_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_PRK_REFERENCE"]},{"name":"NO_PUK_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_PUK_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-p-u-k_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["NO_PUK_REFERENCE","NO_PUK_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_PUK_REFERENCE"]},{"name":"NO_RANDOM","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_RANDOM","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-r-a-n-d-o-m/index.html","searchKeys":["NO_RANDOM","NO_RANDOM","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_RANDOM"]},{"name":"NO_RECORD_LIFE_CYCLE_STATUS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_RECORD_LIFE_CYCLE_STATUS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-o_-r-e-c-o-r-d_-l-i-f-e_-c-y-c-l-e_-s-t-a-t-u-s/index.html","searchKeys":["NO_RECORD_LIFE_CYCLE_STATUS","NO_RECORD_LIFE_CYCLE_STATUS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NO_RECORD_LIFE_CYCLE_STATUS"]},{"name":"NUMBER_PRECONDITION_WRONG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NUMBER_PRECONDITION_WRONG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-u-m-b-e-r_-p-r-e-c-o-n-d-i-t-i-o-n_-w-r-o-n-g/index.html","searchKeys":["NUMBER_PRECONDITION_WRONG","NUMBER_PRECONDITION_WRONG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NUMBER_PRECONDITION_WRONG"]},{"name":"NUMBER_SCENARIO_WRONG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NUMBER_SCENARIO_WRONG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-n-u-m-b-e-r_-s-c-e-n-a-r-i-o_-w-r-o-n-g/index.html","searchKeys":["NUMBER_SCENARIO_WRONG","NUMBER_SCENARIO_WRONG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.NUMBER_SCENARIO_WRONG"]},{"name":"None","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.None","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/-none/index.html","searchKeys":["None","None","de.gematik.openhealth.smartcard.command.UnlockMethod.None"]},{"name":"OBJECT_TERMINATED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OBJECT_TERMINATED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-o-b-j-e-c-t_-t-e-r-m-i-n-a-t-e-d/index.html","searchKeys":["OBJECT_TERMINATED","OBJECT_TERMINATED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OBJECT_TERMINATED"]},{"name":"OFFSET_TOO_BIG","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OFFSET_TOO_BIG","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-o-f-f-s-e-t_-t-o-o_-b-i-g/index.html","searchKeys":["OFFSET_TOO_BIG","OFFSET_TOO_BIG","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OFFSET_TOO_BIG"]},{"name":"OUT_OF_MEMORY","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OUT_OF_MEMORY","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-o-u-t_-o-f_-m-e-m-o-r-y/index.html","searchKeys":["OUT_OF_MEMORY","OUT_OF_MEMORY","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.OUT_OF_MEMORY"]},{"name":"PARAMETER_MISMATCH","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PARAMETER_MISMATCH","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-a-r-a-m-e-t-e-r_-m-i-s-m-a-t-c-h/index.html","searchKeys":["PARAMETER_MISMATCH","PARAMETER_MISMATCH","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PARAMETER_MISMATCH"]},{"name":"PASSWORD","description":"de.gematik.openhealth.smartcard.card.Mode.PASSWORD","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/-p-a-s-s-w-o-r-d/index.html","searchKeys":["PASSWORD","PASSWORD","de.gematik.openhealth.smartcard.card.Mode.PASSWORD"]},{"name":"PASSWORD_BLOCKED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_BLOCKED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-a-s-s-w-o-r-d_-b-l-o-c-k-e-d/index.html","searchKeys":["PASSWORD_BLOCKED","PASSWORD_BLOCKED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_BLOCKED"]},{"name":"PASSWORD_DISABLED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_DISABLED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-a-s-s-w-o-r-d_-d-i-s-a-b-l-e-d/index.html","searchKeys":["PASSWORD_DISABLED","PASSWORD_DISABLED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_DISABLED"]},{"name":"PASSWORD_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-a-s-s-w-o-r-d_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["PASSWORD_NOT_FOUND","PASSWORD_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_NOT_FOUND"]},{"name":"PASSWORD_NOT_USABLE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_NOT_USABLE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-a-s-s-w-o-r-d_-n-o-t_-u-s-a-b-l-e/index.html","searchKeys":["PASSWORD_NOT_USABLE","PASSWORD_NOT_USABLE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PASSWORD_NOT_USABLE"]},{"name":"PRK_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PRK_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-r-k_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["PRK_NOT_FOUND","PRK_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PRK_NOT_FOUND"]},{"name":"PUK_BLOCKED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PUK_BLOCKED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-u-k_-b-l-o-c-k-e-d/index.html","searchKeys":["PUK_BLOCKED","PUK_BLOCKED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PUK_BLOCKED"]},{"name":"PUK_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PUK_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-p-u-k_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["PUK_NOT_FOUND","PUK_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.PUK_NOT_FOUND"]},{"name":"RECORD_DEACTIVATED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RECORD_DEACTIVATED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-c-o-r-d_-d-e-a-c-t-i-v-a-t-e-d/index.html","searchKeys":["RECORD_DEACTIVATED","RECORD_DEACTIVATED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RECORD_DEACTIVATED"]},{"name":"RECORD_NOT_FOUND","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RECORD_NOT_FOUND","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-c-o-r-d_-n-o-t_-f-o-u-n-d/index.html","searchKeys":["RECORD_NOT_FOUND","RECORD_NOT_FOUND","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RECORD_NOT_FOUND"]},{"name":"RETRY_COUNTER_COUNT_00","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_00","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_00/index.html","searchKeys":["RETRY_COUNTER_COUNT_00","RETRY_COUNTER_COUNT_00","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_00"]},{"name":"RETRY_COUNTER_COUNT_01","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_01","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_01/index.html","searchKeys":["RETRY_COUNTER_COUNT_01","RETRY_COUNTER_COUNT_01","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_01"]},{"name":"RETRY_COUNTER_COUNT_02","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_02","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_02/index.html","searchKeys":["RETRY_COUNTER_COUNT_02","RETRY_COUNTER_COUNT_02","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_02"]},{"name":"RETRY_COUNTER_COUNT_03","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_03","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_03/index.html","searchKeys":["RETRY_COUNTER_COUNT_03","RETRY_COUNTER_COUNT_03","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_03"]},{"name":"RETRY_COUNTER_COUNT_04","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_04","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_04/index.html","searchKeys":["RETRY_COUNTER_COUNT_04","RETRY_COUNTER_COUNT_04","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_04"]},{"name":"RETRY_COUNTER_COUNT_05","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_05","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_05/index.html","searchKeys":["RETRY_COUNTER_COUNT_05","RETRY_COUNTER_COUNT_05","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_05"]},{"name":"RETRY_COUNTER_COUNT_06","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_06","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_06/index.html","searchKeys":["RETRY_COUNTER_COUNT_06","RETRY_COUNTER_COUNT_06","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_06"]},{"name":"RETRY_COUNTER_COUNT_07","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_07","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_07/index.html","searchKeys":["RETRY_COUNTER_COUNT_07","RETRY_COUNTER_COUNT_07","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_07"]},{"name":"RETRY_COUNTER_COUNT_08","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_08","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_08/index.html","searchKeys":["RETRY_COUNTER_COUNT_08","RETRY_COUNTER_COUNT_08","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_08"]},{"name":"RETRY_COUNTER_COUNT_09","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_09","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_09/index.html","searchKeys":["RETRY_COUNTER_COUNT_09","RETRY_COUNTER_COUNT_09","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_09"]},{"name":"RETRY_COUNTER_COUNT_10","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_10","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_10/index.html","searchKeys":["RETRY_COUNTER_COUNT_10","RETRY_COUNTER_COUNT_10","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_10"]},{"name":"RETRY_COUNTER_COUNT_11","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_11","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_11/index.html","searchKeys":["RETRY_COUNTER_COUNT_11","RETRY_COUNTER_COUNT_11","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_11"]},{"name":"RETRY_COUNTER_COUNT_12","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_12","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_12/index.html","searchKeys":["RETRY_COUNTER_COUNT_12","RETRY_COUNTER_COUNT_12","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_12"]},{"name":"RETRY_COUNTER_COUNT_13","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_13","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_13/index.html","searchKeys":["RETRY_COUNTER_COUNT_13","RETRY_COUNTER_COUNT_13","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_13"]},{"name":"RETRY_COUNTER_COUNT_14","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_14","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_14/index.html","searchKeys":["RETRY_COUNTER_COUNT_14","RETRY_COUNTER_COUNT_14","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_14"]},{"name":"RETRY_COUNTER_COUNT_15","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_15","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-r-e-t-r-y_-c-o-u-n-t-e-r_-c-o-u-n-t_15/index.html","searchKeys":["RETRY_COUNTER_COUNT_15","RETRY_COUNTER_COUNT_15","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.RETRY_COUNTER_COUNT_15"]},{"name":"ResetRetryCounter","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.ResetRetryCounter","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/-reset-retry-counter/index.html","searchKeys":["ResetRetryCounter","ResetRetryCounter","de.gematik.openhealth.smartcard.command.UnlockMethod.ResetRetryCounter"]},{"name":"ResetRetryCounterWithNewSecret","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.ResetRetryCounterWithNewSecret","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/-reset-retry-counter-with-new-secret/index.html","searchKeys":["ResetRetryCounterWithNewSecret","ResetRetryCounterWithNewSecret","de.gematik.openhealth.smartcard.command.UnlockMethod.ResetRetryCounterWithNewSecret"]},{"name":"SECURITY_STATUS_NOT_SATISFIED","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.SECURITY_STATUS_NOT_SATISFIED","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-s-e-c-u-r-i-t-y_-s-t-a-t-u-s_-n-o-t_-s-a-t-i-s-f-i-e-d/index.html","searchKeys":["SECURITY_STATUS_NOT_SATISFIED","SECURITY_STATUS_NOT_SATISFIED","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.SECURITY_STATUS_NOT_SATISFIED"]},{"name":"SIGN_VERIFY_ECDSA","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm.SIGN_VERIFY_ECDSA","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/-s-i-g-n_-v-e-r-i-f-y_-e-c-d-s-a/index.html","searchKeys":["SIGN_VERIFY_ECDSA","SIGN_VERIFY_ECDSA","de.gematik.openhealth.smartcard.card.PsoAlgorithm.SIGN_VERIFY_ECDSA"]},{"name":"SUCCESS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.SUCCESS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.SUCCESS"]},{"name":"TRANSPORT_STATUS_EMPTY_PIN","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.TRANSPORT_STATUS_EMPTY_PIN","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-t-r-a-n-s-p-o-r-t_-s-t-a-t-u-s_-e-m-p-t-y_-p-i-n/index.html","searchKeys":["TRANSPORT_STATUS_EMPTY_PIN","TRANSPORT_STATUS_EMPTY_PIN","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.TRANSPORT_STATUS_EMPTY_PIN"]},{"name":"TRANSPORT_STATUS_TRANSPORT_PIN","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.TRANSPORT_STATUS_TRANSPORT_PIN","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-t-r-a-n-s-p-o-r-t_-s-t-a-t-u-s_-t-r-a-n-s-p-o-r-t_-p-i-n/index.html","searchKeys":["TRANSPORT_STATUS_TRANSPORT_PIN","TRANSPORT_STATUS_TRANSPORT_PIN","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.TRANSPORT_STATUS_TRANSPORT_PIN"]},{"name":"UNKNOWN_EXCEPTION","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNKNOWN_EXCEPTION","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-n-k-n-o-w-n_-e-x-c-e-p-t-i-o-n/index.html","searchKeys":["UNKNOWN_EXCEPTION","UNKNOWN_EXCEPTION","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNKNOWN_EXCEPTION"]},{"name":"UNKNOWN_STATUS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNKNOWN_STATUS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-n-k-n-o-w-n_-s-t-a-t-u-s/index.html","searchKeys":["UNKNOWN_STATUS","UNKNOWN_STATUS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNKNOWN_STATUS"]},{"name":"UNSUCCESSFUL_SEARCH","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNSUCCESSFUL_SEARCH","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-n-s-u-c-c-e-s-s-f-u-l_-s-e-a-r-c-h/index.html","searchKeys":["UNSUCCESSFUL_SEARCH","UNSUCCESSFUL_SEARCH","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNSUCCESSFUL_SEARCH"]},{"name":"UNSUPPORTED_FUNCTION","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNSUPPORTED_FUNCTION","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-n-s-u-p-p-o-r-t-e-d_-f-u-n-c-t-i-o-n/index.html","searchKeys":["UNSUPPORTED_FUNCTION","UNSUPPORTED_FUNCTION","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UNSUPPORTED_FUNCTION"]},{"name":"UPDATE_RETRY_WARNING_COUNT_00","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_00","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_00/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_00","UPDATE_RETRY_WARNING_COUNT_00","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_00"]},{"name":"UPDATE_RETRY_WARNING_COUNT_01","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_01","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_01/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_01","UPDATE_RETRY_WARNING_COUNT_01","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_01"]},{"name":"UPDATE_RETRY_WARNING_COUNT_02","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_02","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_02/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_02","UPDATE_RETRY_WARNING_COUNT_02","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_02"]},{"name":"UPDATE_RETRY_WARNING_COUNT_03","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_03","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_03/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_03","UPDATE_RETRY_WARNING_COUNT_03","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_03"]},{"name":"UPDATE_RETRY_WARNING_COUNT_04","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_04","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_04/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_04","UPDATE_RETRY_WARNING_COUNT_04","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_04"]},{"name":"UPDATE_RETRY_WARNING_COUNT_05","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_05","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_05/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_05","UPDATE_RETRY_WARNING_COUNT_05","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_05"]},{"name":"UPDATE_RETRY_WARNING_COUNT_06","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_06","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_06/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_06","UPDATE_RETRY_WARNING_COUNT_06","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_06"]},{"name":"UPDATE_RETRY_WARNING_COUNT_07","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_07","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_07/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_07","UPDATE_RETRY_WARNING_COUNT_07","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_07"]},{"name":"UPDATE_RETRY_WARNING_COUNT_08","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_08","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_08/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_08","UPDATE_RETRY_WARNING_COUNT_08","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_08"]},{"name":"UPDATE_RETRY_WARNING_COUNT_09","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_09","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_09/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_09","UPDATE_RETRY_WARNING_COUNT_09","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_09"]},{"name":"UPDATE_RETRY_WARNING_COUNT_10","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_10","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_10/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_10","UPDATE_RETRY_WARNING_COUNT_10","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_10"]},{"name":"UPDATE_RETRY_WARNING_COUNT_11","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_11","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_11/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_11","UPDATE_RETRY_WARNING_COUNT_11","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_11"]},{"name":"UPDATE_RETRY_WARNING_COUNT_12","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_12","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_12/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_12","UPDATE_RETRY_WARNING_COUNT_12","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_12"]},{"name":"UPDATE_RETRY_WARNING_COUNT_13","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_13","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_13/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_13","UPDATE_RETRY_WARNING_COUNT_13","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_13"]},{"name":"UPDATE_RETRY_WARNING_COUNT_14","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_14","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_14/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_14","UPDATE_RETRY_WARNING_COUNT_14","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_14"]},{"name":"UPDATE_RETRY_WARNING_COUNT_15","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_15","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-u-p-d-a-t-e_-r-e-t-r-y_-w-a-r-n-i-n-g_-c-o-u-n-t_15/index.html","searchKeys":["UPDATE_RETRY_WARNING_COUNT_15","UPDATE_RETRY_WARNING_COUNT_15","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.UPDATE_RETRY_WARNING_COUNT_15"]},{"name":"VERIFICATION_ERROR","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.VERIFICATION_ERROR","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-v-e-r-i-f-i-c-a-t-i-o-n_-e-r-r-o-r/index.html","searchKeys":["VERIFICATION_ERROR","VERIFICATION_ERROR","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.VERIFICATION_ERROR"]},{"name":"VOLATILE_KEY_WITHOUT_LCS","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.VOLATILE_KEY_WITHOUT_LCS","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-v-o-l-a-t-i-l-e_-k-e-y_-w-i-t-h-o-u-t_-l-c-s/index.html","searchKeys":["VOLATILE_KEY_WITHOUT_LCS","VOLATILE_KEY_WITHOUT_LCS","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.VOLATILE_KEY_WITHOUT_LCS"]},{"name":"WRONG_CIPHER_TEXT","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_CIPHER_TEXT","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-c-i-p-h-e-r_-t-e-x-t/index.html","searchKeys":["WRONG_CIPHER_TEXT","WRONG_CIPHER_TEXT","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_CIPHER_TEXT"]},{"name":"WRONG_FILE_TYPE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_FILE_TYPE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-f-i-l-e_-t-y-p-e/index.html","searchKeys":["WRONG_FILE_TYPE","WRONG_FILE_TYPE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_FILE_TYPE"]},{"name":"WRONG_KEY_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_KEY_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-k-e-y_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["WRONG_KEY_REFERENCE","WRONG_KEY_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_KEY_REFERENCE"]},{"name":"WRONG_PASSWORD_LENGTH","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_PASSWORD_LENGTH","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-p-a-s-s-w-o-r-d_-l-e-n-g-t-h/index.html","searchKeys":["WRONG_PASSWORD_LENGTH","WRONG_PASSWORD_LENGTH","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_PASSWORD_LENGTH"]},{"name":"WRONG_RANDOM_LENGTH","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RANDOM_LENGTH","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-r-a-n-d-o-m_-l-e-n-g-t-h/index.html","searchKeys":["WRONG_RANDOM_LENGTH","WRONG_RANDOM_LENGTH","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RANDOM_LENGTH"]},{"name":"WRONG_RANDOM_OR_NO_KEY_REFERENCE","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RANDOM_OR_NO_KEY_REFERENCE","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-r-a-n-d-o-m_-o-r_-n-o_-k-e-y_-r-e-f-e-r-e-n-c-e/index.html","searchKeys":["WRONG_RANDOM_OR_NO_KEY_REFERENCE","WRONG_RANDOM_OR_NO_KEY_REFERENCE","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RANDOM_OR_NO_KEY_REFERENCE"]},{"name":"WRONG_RECORD_LENGTH","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RECORD_LENGTH","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-r-e-c-o-r-d_-l-e-n-g-t-h/index.html","searchKeys":["WRONG_RECORD_LENGTH","WRONG_RECORD_LENGTH","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_RECORD_LENGTH"]},{"name":"WRONG_SECRET_WARNING_COUNT_00","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_00","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_00/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_00","WRONG_SECRET_WARNING_COUNT_00","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_00"]},{"name":"WRONG_SECRET_WARNING_COUNT_01","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_01","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_01/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_01","WRONG_SECRET_WARNING_COUNT_01","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_01"]},{"name":"WRONG_SECRET_WARNING_COUNT_02","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_02","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_02/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_02","WRONG_SECRET_WARNING_COUNT_02","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_02"]},{"name":"WRONG_SECRET_WARNING_COUNT_03","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_03","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_03/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_03","WRONG_SECRET_WARNING_COUNT_03","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_03"]},{"name":"WRONG_SECRET_WARNING_COUNT_04","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_04","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_04/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_04","WRONG_SECRET_WARNING_COUNT_04","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_04"]},{"name":"WRONG_SECRET_WARNING_COUNT_05","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_05","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_05/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_05","WRONG_SECRET_WARNING_COUNT_05","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_05"]},{"name":"WRONG_SECRET_WARNING_COUNT_06","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_06","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_06/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_06","WRONG_SECRET_WARNING_COUNT_06","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_06"]},{"name":"WRONG_SECRET_WARNING_COUNT_07","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_07","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_07/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_07","WRONG_SECRET_WARNING_COUNT_07","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_07"]},{"name":"WRONG_SECRET_WARNING_COUNT_08","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_08","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_08/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_08","WRONG_SECRET_WARNING_COUNT_08","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_08"]},{"name":"WRONG_SECRET_WARNING_COUNT_09","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_09","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_09/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_09","WRONG_SECRET_WARNING_COUNT_09","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_09"]},{"name":"WRONG_SECRET_WARNING_COUNT_10","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_10","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_10/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_10","WRONG_SECRET_WARNING_COUNT_10","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_10"]},{"name":"WRONG_SECRET_WARNING_COUNT_11","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_11","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_11/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_11","WRONG_SECRET_WARNING_COUNT_11","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_11"]},{"name":"WRONG_SECRET_WARNING_COUNT_12","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_12","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_12/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_12","WRONG_SECRET_WARNING_COUNT_12","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_12"]},{"name":"WRONG_SECRET_WARNING_COUNT_13","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_13","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_13/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_13","WRONG_SECRET_WARNING_COUNT_13","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_13"]},{"name":"WRONG_SECRET_WARNING_COUNT_14","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_14","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_14/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_14","WRONG_SECRET_WARNING_COUNT_14","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_14"]},{"name":"WRONG_SECRET_WARNING_COUNT_15","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_15","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-s-e-c-r-e-t_-w-a-r-n-i-n-g_-c-o-u-n-t_15/index.html","searchKeys":["WRONG_SECRET_WARNING_COUNT_15","WRONG_SECRET_WARNING_COUNT_15","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_SECRET_WARNING_COUNT_15"]},{"name":"WRONG_TOKEN","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_TOKEN","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/-w-r-o-n-g_-t-o-k-e-n/index.html","searchKeys":["WRONG_TOKEN","WRONG_TOKEN","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.WRONG_TOKEN"]},{"name":"abstract fun calculateKeyReference(dfSpecific: Boolean): Int","description":"de.gematik.openhealth.smartcard.card.ICardKeyReference.calculateKeyReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-i-card-key-reference/calculate-key-reference.html","searchKeys":["calculateKeyReference","abstract fun calculateKeyReference(dfSpecific: Boolean): Int","de.gematik.openhealth.smartcard.card.ICardKeyReference.calculateKeyReference"]},{"name":"abstract fun transmit(commandApdu: CardCommandApdu, response: (responseApdu: CardResponseApdu) -> Unit)","description":"de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.transmit","location":"smartcard/de.gematik.openhealth.smartcard.card/-smart-card-communication-scope/transmit.html","searchKeys":["transmit","abstract fun transmit(commandApdu: CardCommandApdu, response: (responseApdu: CardResponseApdu) -> Unit)","de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.transmit"]},{"name":"abstract val paceKey: PaceKey","description":"de.gematik.openhealth.smartcard.card.TrustedChannelScope.paceKey","location":"smartcard/de.gematik.openhealth.smartcard.card/-trusted-channel-scope/pace-key.html","searchKeys":["paceKey","abstract val paceKey: PaceKey","de.gematik.openhealth.smartcard.card.TrustedChannelScope.paceKey"]},{"name":"abstract val supportsExtendedLength: Boolean","description":"de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.supportsExtendedLength","location":"smartcard/de.gematik.openhealth.smartcard.card/-smart-card-communication-scope/supports-extended-length.html","searchKeys":["supportsExtendedLength","abstract val supportsExtendedLength: Boolean","de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.supportsExtendedLength"]},{"name":"class ApplicationIdentifier(aid: ByteArray)","description":"de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-application-identifier/index.html","searchKeys":["ApplicationIdentifier","class ApplicationIdentifier(aid: ByteArray)","de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier"]},{"name":"class CardBlocked(val response: HealthCardResponse) : HealthCardVerifyPinResult","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.CardBlocked","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-card-blocked/index.html","searchKeys":["CardBlocked","class CardBlocked(val response: HealthCardResponse) : HealthCardVerifyPinResult","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.CardBlocked"]},{"name":"class CardCommandApdu","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/index.html","searchKeys":["CardCommandApdu","class CardCommandApdu","de.gematik.openhealth.smartcard.command.CardCommandApdu"]},{"name":"class CardKey(keyId: Int) : ICardKeyReference","description":"de.gematik.openhealth.smartcard.card.CardKey","location":"smartcard/de.gematik.openhealth.smartcard.card/-card-key/index.html","searchKeys":["CardKey","class CardKey(keyId: Int) : ICardKeyReference","de.gematik.openhealth.smartcard.card.CardKey"]},{"name":"class CardResponseApdu(apdu: ByteArray)","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/index.html","searchKeys":["CardResponseApdu","class CardResponseApdu(apdu: ByteArray)","de.gematik.openhealth.smartcard.command.CardResponseApdu"]},{"name":"class DataObject(val data: ByteArray, val tag: Asn1Tag)","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/index.html","searchKeys":["DataObject","class DataObject(val data: ByteArray, val tag: Asn1Tag)","de.gematik.openhealth.smartcard.tagobjects.DataObject"]},{"name":"class EncryptedPinFormat2(pin: String)","description":"de.gematik.openhealth.smartcard.card.EncryptedPinFormat2","location":"smartcard/de.gematik.openhealth.smartcard.card/-encrypted-pin-format2/index.html","searchKeys":["EncryptedPinFormat2","class EncryptedPinFormat2(pin: String)","de.gematik.openhealth.smartcard.card.EncryptedPinFormat2"]},{"name":"class FileIdentifier","description":"de.gematik.openhealth.smartcard.identifier.FileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-file-identifier/index.html","searchKeys":["FileIdentifier","class FileIdentifier","de.gematik.openhealth.smartcard.identifier.FileIdentifier"]},{"name":"class HealthCardCommand(val expectedStatus: Map<Int, HealthCardResponseStatus>, val cla: Int, val ins: Int, val p1: Int = 0, val p2: Int = 0, val data: ByteArray? = null, val ne: Int? = null)","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/index.html","searchKeys":["HealthCardCommand","class HealthCardCommand(val expectedStatus: Map<Int, HealthCardResponseStatus>, val cla: Int, val ins: Int, val p1: Int = 0, val p2: Int = 0, val data: ByteArray? = null, val ne: Int? = null)","de.gematik.openhealth.smartcard.command.HealthCardCommand"]},{"name":"class HealthCardResponse(val status: HealthCardResponseStatus, val apdu: CardResponseApdu)","description":"de.gematik.openhealth.smartcard.command.HealthCardResponse","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response/index.html","searchKeys":["HealthCardResponse","class HealthCardResponse(val status: HealthCardResponseStatus, val apdu: CardResponseApdu)","de.gematik.openhealth.smartcard.command.HealthCardResponse"]},{"name":"class HealthCardVersion2(val fillingInstructionsVersion: ByteArray, val objectSystemVersion: ByteArray, val productIdentificationObjectSystemVersion: ByteArray, val fillingInstructionsEfGdoVersion: ByteArray, val fillingInstructionsEfAtrVersion: ByteArray, val fillingInstructionsEfKeyInfoVersion: ByteArray, val fillingInstructionsEfEnvironmentSettingsVersion: ByteArray, val fillingInstructionsEfLoggingVersion: ByteArray)","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/index.html","searchKeys":["HealthCardVersion2","class HealthCardVersion2(val fillingInstructionsVersion: ByteArray, val objectSystemVersion: ByteArray, val productIdentificationObjectSystemVersion: ByteArray, val fillingInstructionsEfGdoVersion: ByteArray, val fillingInstructionsEfAtrVersion: ByteArray, val fillingInstructionsEfKeyInfoVersion: ByteArray, val fillingInstructionsEfEnvironmentSettingsVersion: ByteArray, val fillingInstructionsEfLoggingVersion: ByteArray)","de.gematik.openhealth.smartcard.card.HealthCardVersion2"]},{"name":"class LengthObject(le: Int)","description":"de.gematik.openhealth.smartcard.tagobjects.LengthObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-length-object/index.html","searchKeys":["LengthObject","class LengthObject(le: Int)","de.gematik.openhealth.smartcard.tagobjects.LengthObject"]},{"name":"class MacObject(header: ByteArray? = null, commandOutput: ByteArray, kMac: SecretKey, ssc: ByteArray)","description":"de.gematik.openhealth.smartcard.tagobjects.MacObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-mac-object/index.html","searchKeys":["MacObject","class MacObject(header: ByteArray? = null, commandOutput: ByteArray, kMac: SecretKey, ssc: ByteArray)","de.gematik.openhealth.smartcard.tagobjects.MacObject"]},{"name":"class PaceInfo(val protocolId: String, val curve: EcCurve)","description":"de.gematik.openhealth.smartcard.exchange.PaceInfo","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-pace-info/index.html","searchKeys":["PaceInfo","class PaceInfo(val protocolId: String, val curve: EcCurve)","de.gematik.openhealth.smartcard.exchange.PaceInfo"]},{"name":"class PaceKey(val enc: SecretKey, val mac: SecretKey)","description":"de.gematik.openhealth.smartcard.card.PaceKey","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/index.html","searchKeys":["PaceKey","class PaceKey(val enc: SecretKey, val mac: SecretKey)","de.gematik.openhealth.smartcard.card.PaceKey"]},{"name":"class PasswordReference(val pwdId: Int) : ICardKeyReference","description":"de.gematik.openhealth.smartcard.card.PasswordReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-password-reference/index.html","searchKeys":["PasswordReference","class PasswordReference(val pwdId: Int) : ICardKeyReference","de.gematik.openhealth.smartcard.card.PasswordReference"]},{"name":"class ResponseException(val healthCardResponseStatus: HealthCardResponseStatus) : Exception","description":"de.gematik.openhealth.smartcard.command.ResponseException","location":"smartcard/de.gematik.openhealth.smartcard.command/-response-exception/index.html","searchKeys":["ResponseException","class ResponseException(val healthCardResponseStatus: HealthCardResponseStatus) : Exception","de.gematik.openhealth.smartcard.command.ResponseException"]},{"name":"class ShortFileIdentifier(val sfId: Int)","description":"de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-short-file-identifier/index.html","searchKeys":["ShortFileIdentifier","class ShortFileIdentifier(val sfId: Int)","de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier"]},{"name":"class StatusObject(statusBytes: ByteArray)","description":"de.gematik.openhealth.smartcard.tagobjects.StatusObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-status-object/index.html","searchKeys":["StatusObject","class StatusObject(statusBytes: ByteArray)","de.gematik.openhealth.smartcard.tagobjects.StatusObject"]},{"name":"class Success(val response: HealthCardResponse) : HealthCardVerifyPinResult","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.Success","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-success/index.html","searchKeys":["Success","class Success(val response: HealthCardResponse) : HealthCardVerifyPinResult","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.Success"]},{"name":"class WrongSecretWarning(val response: HealthCardResponse, val retriesLeft: Int) : HealthCardVerifyPinResult","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-wrong-secret-warning/index.html","searchKeys":["WrongSecretWarning","class WrongSecretWarning(val response: HealthCardResponse, val retriesLeft: Int) : HealthCardVerifyPinResult","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning"]},{"name":"const val AID: String","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.AID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-a-i-d.html","searchKeys":["AID","const val AID: String","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.AID"]},{"name":"const val AID: String","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.AID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-a-i-d.html","searchKeys":["AID","const val AID: String","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.AID"]},{"name":"const val DF_SPECIFIC_PWD_MARKER: Int = 128","description":"de.gematik.openhealth.smartcard.card.ICardKeyReference.Companion.DF_SPECIFIC_PWD_MARKER","location":"smartcard/de.gematik.openhealth.smartcard.card/-i-card-key-reference/-companion/-d-f_-s-p-e-c-i-f-i-c_-p-w-d_-m-a-r-k-e-r.html","searchKeys":["DF_SPECIFIC_PWD_MARKER","const val DF_SPECIFIC_PWD_MARKER: Int = 128","de.gematik.openhealth.smartcard.card.ICardKeyReference.Companion.DF_SPECIFIC_PWD_MARKER"]},{"name":"const val EXPECTED_LENGTH_WILDCARD_EXTENDED: Int = 65536","description":"de.gematik.openhealth.smartcard.command.EXPECTED_LENGTH_WILDCARD_EXTENDED","location":"smartcard/de.gematik.openhealth.smartcard.command/-e-x-p-e-c-t-e-d_-l-e-n-g-t-h_-w-i-l-d-c-a-r-d_-e-x-t-e-n-d-e-d.html","searchKeys":["EXPECTED_LENGTH_WILDCARD_EXTENDED","const val EXPECTED_LENGTH_WILDCARD_EXTENDED: Int = 65536","de.gematik.openhealth.smartcard.command.EXPECTED_LENGTH_WILDCARD_EXTENDED"]},{"name":"const val EXPECTED_LENGTH_WILDCARD_SHORT: Int = 256","description":"de.gematik.openhealth.smartcard.command.EXPECTED_LENGTH_WILDCARD_SHORT","location":"smartcard/de.gematik.openhealth.smartcard.command/-e-x-p-e-c-t-e-d_-l-e-n-g-t-h_-w-i-l-d-c-a-r-d_-s-h-o-r-t.html","searchKeys":["EXPECTED_LENGTH_WILDCARD_SHORT","const val EXPECTED_LENGTH_WILDCARD_SHORT: Int = 256","de.gematik.openhealth.smartcard.command.EXPECTED_LENGTH_WILDCARD_SHORT"]},{"name":"const val EXPECT_ALL_WILDCARD: Int","description":"de.gematik.openhealth.smartcard.command.EXPECT_ALL_WILDCARD","location":"smartcard/de.gematik.openhealth.smartcard.command/-e-x-p-e-c-t_-a-l-l_-w-i-l-d-c-a-r-d.html","searchKeys":["EXPECT_ALL_WILDCARD","const val EXPECT_ALL_WILDCARD: Int","de.gematik.openhealth.smartcard.command.EXPECT_ALL_WILDCARD"]},{"name":"const val FID: Int = 12049","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-version2/-f-i-d.html","searchKeys":["FID","const val FID: Int = 12049","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2.FID"]},{"name":"const val FID: Int = 284","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-card-access/-f-i-d.html","searchKeys":["FID","const val FID: Int = 284","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess.FID"]},{"name":"const val FID: Int = 50436","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-ef/-cch-aut-e256/-f-i-d.html","searchKeys":["FID","const val FID: Int = 50436","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256.FID"]},{"name":"const val FID: Int = 53249","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-pd/-f-i-d.html","searchKeys":["FID","const val FID: Int = 53249","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd.FID"]},{"name":"const val FID: Int = 53250","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-vd/-f-i-d.html","searchKeys":["FID","const val FID: Int = 53250","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd.FID"]},{"name":"const val FID: Int = 53260","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD.FID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-status-v-d/-f-i-d.html","searchKeys":["FID","const val FID: Int = 53260","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD.FID"]},{"name":"const val KID: Int = 4","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK.ChAutE256.KID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-pr-k/-ch-aut-e256/-k-i-d.html","searchKeys":["KID","const val KID: Int = 4","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK.ChAutE256.KID"]},{"name":"const val NE_MAX_EXTENDED_LENGTH: Int = 65536","description":"de.gematik.openhealth.smartcard.command.NE_MAX_EXTENDED_LENGTH","location":"smartcard/de.gematik.openhealth.smartcard.command/-n-e_-m-a-x_-e-x-t-e-n-d-e-d_-l-e-n-g-t-h.html","searchKeys":["NE_MAX_EXTENDED_LENGTH","const val NE_MAX_EXTENDED_LENGTH: Int = 65536","de.gematik.openhealth.smartcard.command.NE_MAX_EXTENDED_LENGTH"]},{"name":"const val NE_MAX_SHORT_LENGTH: Int = 256","description":"de.gematik.openhealth.smartcard.command.NE_MAX_SHORT_LENGTH","location":"smartcard/de.gematik.openhealth.smartcard.command/-n-e_-m-a-x_-s-h-o-r-t_-l-e-n-g-t-h.html","searchKeys":["NE_MAX_SHORT_LENGTH","const val NE_MAX_SHORT_LENGTH: Int = 256","de.gematik.openhealth.smartcard.command.NE_MAX_SHORT_LENGTH"]},{"name":"const val PWID: Int = 2","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.MrPinHome.PWID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-mr-pin-home/-p-w-i-d.html","searchKeys":["PWID","const val PWID: Int = 2","de.gematik.openhealth.smartcard.cardobjects.Mf.MrPinHome.PWID"]},{"name":"const val SFID: Int = 1","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-pd/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 1","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd.SFID"]},{"name":"const val SFID: Int = 12","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-status-v-d/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 12","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD.SFID"]},{"name":"const val SFID: Int = 17","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-version2/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 17","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2.SFID"]},{"name":"const val SFID: Int = 2","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-vd/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 2","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd.SFID"]},{"name":"const val SFID: Int = 28","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-card-access/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 28","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess.SFID"]},{"name":"const val SFID: Int = 4","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256.SFID","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-ef/-cch-aut-e256/-s-f-i-d.html","searchKeys":["SFID","const val SFID: Int = 4","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256.SFID"]},{"name":"constructor(aid: ByteArray)","description":"de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.ApplicationIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-application-identifier/-application-identifier.html","searchKeys":["ApplicationIdentifier","constructor(aid: ByteArray)","de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.ApplicationIdentifier"]},{"name":"constructor(apdu: ByteArray)","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.CardResponseApdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/-card-response-apdu.html","searchKeys":["CardResponseApdu","constructor(apdu: ByteArray)","de.gematik.openhealth.smartcard.command.CardResponseApdu.CardResponseApdu"]},{"name":"constructor(data: ByteArray, tag: Asn1Tag)","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.DataObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/-data-object.html","searchKeys":["DataObject","constructor(data: ByteArray, tag: Asn1Tag)","de.gematik.openhealth.smartcard.tagobjects.DataObject.DataObject"]},{"name":"constructor(enc: SecretKey, mac: SecretKey)","description":"de.gematik.openhealth.smartcard.card.PaceKey.PaceKey","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/-pace-key.html","searchKeys":["PaceKey","constructor(enc: SecretKey, mac: SecretKey)","de.gematik.openhealth.smartcard.card.PaceKey.PaceKey"]},{"name":"constructor(expectedStatus: Map<Int, HealthCardResponseStatus>, cla: Int, ins: Int, p1: Int = 0, p2: Int = 0, data: ByteArray? = null, ne: Int? = null)","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.HealthCardCommand","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/-health-card-command.html","searchKeys":["HealthCardCommand","constructor(expectedStatus: Map<Int, HealthCardResponseStatus>, cla: Int, ins: Int, p1: Int = 0, p2: Int = 0, data: ByteArray? = null, ne: Int? = null)","de.gematik.openhealth.smartcard.command.HealthCardCommand.HealthCardCommand"]},{"name":"constructor(fid: ByteArray)","description":"de.gematik.openhealth.smartcard.identifier.FileIdentifier.FileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-file-identifier/-file-identifier.html","searchKeys":["FileIdentifier","constructor(fid: ByteArray)","de.gematik.openhealth.smartcard.identifier.FileIdentifier.FileIdentifier"]},{"name":"constructor(fid: Int)","description":"de.gematik.openhealth.smartcard.identifier.FileIdentifier.FileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-file-identifier/-file-identifier.html","searchKeys":["FileIdentifier","constructor(fid: Int)","de.gematik.openhealth.smartcard.identifier.FileIdentifier.FileIdentifier"]},{"name":"constructor(fillingInstructionsVersion: ByteArray, objectSystemVersion: ByteArray, productIdentificationObjectSystemVersion: ByteArray, fillingInstructionsEfGdoVersion: ByteArray, fillingInstructionsEfAtrVersion: ByteArray, fillingInstructionsEfKeyInfoVersion: ByteArray, fillingInstructionsEfEnvironmentSettingsVersion: ByteArray, fillingInstructionsEfLoggingVersion: ByteArray)","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.HealthCardVersion2","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/-health-card-version2.html","searchKeys":["HealthCardVersion2","constructor(fillingInstructionsVersion: ByteArray, objectSystemVersion: ByteArray, productIdentificationObjectSystemVersion: ByteArray, fillingInstructionsEfGdoVersion: ByteArray, fillingInstructionsEfAtrVersion: ByteArray, fillingInstructionsEfKeyInfoVersion: ByteArray, fillingInstructionsEfEnvironmentSettingsVersion: ByteArray, fillingInstructionsEfLoggingVersion: ByteArray)","de.gematik.openhealth.smartcard.card.HealthCardVersion2.HealthCardVersion2"]},{"name":"constructor(header: ByteArray? = null, commandOutput: ByteArray, kMac: SecretKey, ssc: ByteArray)","description":"de.gematik.openhealth.smartcard.tagobjects.MacObject.MacObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-mac-object/-mac-object.html","searchKeys":["MacObject","constructor(header: ByteArray? = null, commandOutput: ByteArray, kMac: SecretKey, ssc: ByteArray)","de.gematik.openhealth.smartcard.tagobjects.MacObject.MacObject"]},{"name":"constructor(healthCardResponseStatus: HealthCardResponseStatus)","description":"de.gematik.openhealth.smartcard.command.ResponseException.ResponseException","location":"smartcard/de.gematik.openhealth.smartcard.command/-response-exception/-response-exception.html","searchKeys":["ResponseException","constructor(healthCardResponseStatus: HealthCardResponseStatus)","de.gematik.openhealth.smartcard.command.ResponseException.ResponseException"]},{"name":"constructor(hexAid: String)","description":"de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.ApplicationIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-application-identifier/-application-identifier.html","searchKeys":["ApplicationIdentifier","constructor(hexAid: String)","de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.ApplicationIdentifier"]},{"name":"constructor(hexSfId: String)","description":"de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.ShortFileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-short-file-identifier/-short-file-identifier.html","searchKeys":["ShortFileIdentifier","constructor(hexSfId: String)","de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.ShortFileIdentifier"]},{"name":"constructor(keyId: Int)","description":"de.gematik.openhealth.smartcard.card.CardKey.CardKey","location":"smartcard/de.gematik.openhealth.smartcard.card/-card-key/-card-key.html","searchKeys":["CardKey","constructor(keyId: Int)","de.gematik.openhealth.smartcard.card.CardKey.CardKey"]},{"name":"constructor(le: Int)","description":"de.gematik.openhealth.smartcard.tagobjects.LengthObject.LengthObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-length-object/-length-object.html","searchKeys":["LengthObject","constructor(le: Int)","de.gematik.openhealth.smartcard.tagobjects.LengthObject.LengthObject"]},{"name":"constructor(pin: String)","description":"de.gematik.openhealth.smartcard.card.EncryptedPinFormat2.EncryptedPinFormat2","location":"smartcard/de.gematik.openhealth.smartcard.card/-encrypted-pin-format2/-encrypted-pin-format2.html","searchKeys":["EncryptedPinFormat2","constructor(pin: String)","de.gematik.openhealth.smartcard.card.EncryptedPinFormat2.EncryptedPinFormat2"]},{"name":"constructor(protocolId: String, curve: EcCurve)","description":"de.gematik.openhealth.smartcard.exchange.PaceInfo.PaceInfo","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-pace-info/-pace-info.html","searchKeys":["PaceInfo","constructor(protocolId: String, curve: EcCurve)","de.gematik.openhealth.smartcard.exchange.PaceInfo.PaceInfo"]},{"name":"constructor(pwdId: Int)","description":"de.gematik.openhealth.smartcard.card.PasswordReference.PasswordReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-password-reference/-password-reference.html","searchKeys":["PasswordReference","constructor(pwdId: Int)","de.gematik.openhealth.smartcard.card.PasswordReference.PasswordReference"]},{"name":"constructor(response: HealthCardResponse)","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.CardBlocked.CardBlocked","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-card-blocked/-card-blocked.html","searchKeys":["CardBlocked","constructor(response: HealthCardResponse)","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.CardBlocked.CardBlocked"]},{"name":"constructor(response: HealthCardResponse)","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.Success.Success","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-success/-success.html","searchKeys":["Success","constructor(response: HealthCardResponse)","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.Success.Success"]},{"name":"constructor(response: HealthCardResponse, retriesLeft: Int)","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning.WrongSecretWarning","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-wrong-secret-warning/-wrong-secret-warning.html","searchKeys":["WrongSecretWarning","constructor(response: HealthCardResponse, retriesLeft: Int)","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning.WrongSecretWarning"]},{"name":"constructor(sfId: Int)","description":"de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.ShortFileIdentifier","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-short-file-identifier/-short-file-identifier.html","searchKeys":["ShortFileIdentifier","constructor(sfId: Int)","de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.ShortFileIdentifier"]},{"name":"constructor(status: HealthCardResponseStatus, apdu: CardResponseApdu)","description":"de.gematik.openhealth.smartcard.command.HealthCardResponse.HealthCardResponse","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response/-health-card-response.html","searchKeys":["HealthCardResponse","constructor(status: HealthCardResponseStatus, apdu: CardResponseApdu)","de.gematik.openhealth.smartcard.command.HealthCardResponse.HealthCardResponse"]},{"name":"constructor(statusBytes: ByteArray)","description":"de.gematik.openhealth.smartcard.tagobjects.StatusObject.StatusObject","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-status-object/-status-object.html","searchKeys":["StatusObject","constructor(statusBytes: ByteArray)","de.gematik.openhealth.smartcard.tagobjects.StatusObject.StatusObject"]},{"name":"enum HealthCardResponseStatus : Enum<HealthCardResponseStatus> ","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/index.html","searchKeys":["HealthCardResponseStatus","enum HealthCardResponseStatus : Enum<HealthCardResponseStatus> ","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus"]},{"name":"enum Mode : Enum<Mode> ","description":"de.gematik.openhealth.smartcard.card.Mode","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/index.html","searchKeys":["Mode","enum Mode : Enum<Mode> ","de.gematik.openhealth.smartcard.card.Mode"]},{"name":"enum PsoAlgorithm : Enum<PsoAlgorithm> ","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/index.html","searchKeys":["PsoAlgorithm","enum PsoAlgorithm : Enum<PsoAlgorithm> ","de.gematik.openhealth.smartcard.card.PsoAlgorithm"]},{"name":"enum UnlockMethod : Enum<UnlockMethod> ","description":"de.gematik.openhealth.smartcard.command.UnlockMethod","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/index.html","searchKeys":["UnlockMethod","enum UnlockMethod : Enum<UnlockMethod> ","de.gematik.openhealth.smartcard.command.UnlockMethod"]},{"name":"fun <R> TrustedChannelScope.transmitBlocking(exchange: suspend TrustedChannelScope.() -> R, dispatcher: CoroutineDispatcher = Dispatchers.IO): R","description":"de.gematik.openhealth.smartcard.transmitBlocking","location":"smartcard/de.gematik.openhealth.smartcard/transmit-blocking.html","searchKeys":["transmitBlocking","fun <R> TrustedChannelScope.transmitBlocking(exchange: suspend TrustedChannelScope.() -> R, dispatcher: CoroutineDispatcher = Dispatchers.IO): R","de.gematik.openhealth.smartcard.transmitBlocking"]},{"name":"fun HealthCardCommand.Companion.changeReferenceData(passwordReference: PasswordReference, dfSpecific: Boolean, oldSecret: EncryptedPinFormat2, newSecret: EncryptedPinFormat2): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.changeReferenceData","location":"smartcard/de.gematik.openhealth.smartcard.command/change-reference-data.html","searchKeys":["changeReferenceData","fun HealthCardCommand.Companion.changeReferenceData(passwordReference: PasswordReference, dfSpecific: Boolean, oldSecret: EncryptedPinFormat2, newSecret: EncryptedPinFormat2): HealthCardCommand","de.gematik.openhealth.smartcard.command.changeReferenceData"]},{"name":"fun HealthCardCommand.Companion.generalAuthenticate(commandChaining: Boolean): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.generalAuthenticate","location":"smartcard/de.gematik.openhealth.smartcard.command/general-authenticate.html","searchKeys":["generalAuthenticate","fun HealthCardCommand.Companion.generalAuthenticate(commandChaining: Boolean): HealthCardCommand","de.gematik.openhealth.smartcard.command.generalAuthenticate"]},{"name":"fun HealthCardCommand.Companion.generalAuthenticate(commandChaining: Boolean, data: ByteArray, tagNo: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.generalAuthenticate","location":"smartcard/de.gematik.openhealth.smartcard.command/general-authenticate.html","searchKeys":["generalAuthenticate","fun HealthCardCommand.Companion.generalAuthenticate(commandChaining: Boolean, data: ByteArray, tagNo: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.generalAuthenticate"]},{"name":"fun HealthCardCommand.Companion.getPinStatus(password: PasswordReference, dfSpecific: Boolean): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.getPinStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/get-pin-status.html","searchKeys":["getPinStatus","fun HealthCardCommand.Companion.getPinStatus(password: PasswordReference, dfSpecific: Boolean): HealthCardCommand","de.gematik.openhealth.smartcard.command.getPinStatus"]},{"name":"fun HealthCardCommand.Companion.getRandomValues(length: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.getRandomValues","location":"smartcard/de.gematik.openhealth.smartcard.command/get-random-values.html","searchKeys":["getRandomValues","fun HealthCardCommand.Companion.getRandomValues(length: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.getRandomValues"]},{"name":"fun HealthCardCommand.Companion.manageSecEnvForSigning(psoAlgorithm: PsoAlgorithm, key: CardKey, dfSpecific: Boolean): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.manageSecEnvForSigning","location":"smartcard/de.gematik.openhealth.smartcard.command/manage-sec-env-for-signing.html","searchKeys":["manageSecEnvForSigning","fun HealthCardCommand.Companion.manageSecEnvForSigning(psoAlgorithm: PsoAlgorithm, key: CardKey, dfSpecific: Boolean): HealthCardCommand","de.gematik.openhealth.smartcard.command.manageSecEnvForSigning"]},{"name":"fun HealthCardCommand.Companion.manageSecEnvWithoutCurves(cardKey: CardKey, dfSpecific: Boolean, oid: ByteArray): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.manageSecEnvWithoutCurves","location":"smartcard/de.gematik.openhealth.smartcard.command/manage-sec-env-without-curves.html","searchKeys":["manageSecEnvWithoutCurves","fun HealthCardCommand.Companion.manageSecEnvWithoutCurves(cardKey: CardKey, dfSpecific: Boolean, oid: ByteArray): HealthCardCommand","de.gematik.openhealth.smartcard.command.manageSecEnvWithoutCurves"]},{"name":"fun HealthCardCommand.Companion.psoComputeDigitalSignature(dataToBeSigned: ByteArray): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.psoComputeDigitalSignature","location":"smartcard/de.gematik.openhealth.smartcard.command/pso-compute-digital-signature.html","searchKeys":["psoComputeDigitalSignature","fun HealthCardCommand.Companion.psoComputeDigitalSignature(dataToBeSigned: ByteArray): HealthCardCommand","de.gematik.openhealth.smartcard.command.psoComputeDigitalSignature"]},{"name":"fun HealthCardCommand.Companion.read(): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.read(offset: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(offset: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.read(offset: Int, ne: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(offset: Int, ne: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier, offset: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier, offset: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier, offset: Int, ne: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.read","location":"smartcard/de.gematik.openhealth.smartcard.command/read.html","searchKeys":["read","fun HealthCardCommand.Companion.read(sfi: ShortFileIdentifier, offset: Int, ne: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.read"]},{"name":"fun HealthCardCommand.Companion.select(aid: ApplicationIdentifier): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.select","location":"smartcard/de.gematik.openhealth.smartcard.command/select.html","searchKeys":["select","fun HealthCardCommand.Companion.select(aid: ApplicationIdentifier): HealthCardCommand","de.gematik.openhealth.smartcard.command.select"]},{"name":"fun HealthCardCommand.Companion.select(aid: ApplicationIdentifier, selectNextElseFirstOccurrence: Boolean, requestFcp: Boolean, fcpLength: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.select","location":"smartcard/de.gematik.openhealth.smartcard.command/select.html","searchKeys":["select","fun HealthCardCommand.Companion.select(aid: ApplicationIdentifier, selectNextElseFirstOccurrence: Boolean, requestFcp: Boolean, fcpLength: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.select"]},{"name":"fun HealthCardCommand.Companion.select(fid: FileIdentifier, selectDfElseEf: Boolean): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.select","location":"smartcard/de.gematik.openhealth.smartcard.command/select.html","searchKeys":["select","fun HealthCardCommand.Companion.select(fid: FileIdentifier, selectDfElseEf: Boolean): HealthCardCommand","de.gematik.openhealth.smartcard.command.select"]},{"name":"fun HealthCardCommand.Companion.select(fid: FileIdentifier, selectDfElseEf: Boolean, requestFcp: Boolean, fcpLength: Int): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.select","location":"smartcard/de.gematik.openhealth.smartcard.command/select.html","searchKeys":["select","fun HealthCardCommand.Companion.select(fid: FileIdentifier, selectDfElseEf: Boolean, requestFcp: Boolean, fcpLength: Int): HealthCardCommand","de.gematik.openhealth.smartcard.command.select"]},{"name":"fun HealthCardCommand.Companion.select(selectParentElseRoot: Boolean, readFirst: Boolean): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.select","location":"smartcard/de.gematik.openhealth.smartcard.command/select.html","searchKeys":["select","fun HealthCardCommand.Companion.select(selectParentElseRoot: Boolean, readFirst: Boolean): HealthCardCommand","de.gematik.openhealth.smartcard.command.select"]},{"name":"fun HealthCardCommand.Companion.unlockEgk(unlockMethod: UnlockMethod, passwordReference: PasswordReference, dfSpecific: Boolean, puk: EncryptedPinFormat2, newSecret: EncryptedPinFormat2?): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.unlockEgk","location":"smartcard/de.gematik.openhealth.smartcard.command/unlock-egk.html","searchKeys":["unlockEgk","fun HealthCardCommand.Companion.unlockEgk(unlockMethod: UnlockMethod, passwordReference: PasswordReference, dfSpecific: Boolean, puk: EncryptedPinFormat2, newSecret: EncryptedPinFormat2?): HealthCardCommand","de.gematik.openhealth.smartcard.command.unlockEgk"]},{"name":"fun HealthCardCommand.Companion.verifyPin(passwordReference: PasswordReference, dfSpecific: Boolean, pin: EncryptedPinFormat2): HealthCardCommand","description":"de.gematik.openhealth.smartcard.command.verifyPin","location":"smartcard/de.gematik.openhealth.smartcard.command/verify-pin.html","searchKeys":["verifyPin","fun HealthCardCommand.Companion.verifyPin(passwordReference: PasswordReference, dfSpecific: Boolean, pin: EncryptedPinFormat2): HealthCardCommand","de.gematik.openhealth.smartcard.command.verifyPin"]},{"name":"fun HealthCardCommand.commandApdu(scopeSupportsExtendedLength: Boolean): CardCommandApdu","description":"de.gematik.openhealth.smartcard.command.commandApdu","location":"smartcard/de.gematik.openhealth.smartcard.command/command-apdu.html","searchKeys":["commandApdu","fun HealthCardCommand.commandApdu(scopeSupportsExtendedLength: Boolean): CardCommandApdu","de.gematik.openhealth.smartcard.command.commandApdu"]},{"name":"fun HealthCardResponse.requireSuccess()","description":"de.gematik.openhealth.smartcard.command.requireSuccess","location":"smartcard/de.gematik.openhealth.smartcard.command/require-success.html","searchKeys":["requireSuccess","fun HealthCardResponse.requireSuccess()","de.gematik.openhealth.smartcard.command.requireSuccess"]},{"name":"fun HealthCardScope.establishTrustedChannelBlocking(cardAccessNumber: String, dispatcher: CoroutineDispatcher = Dispatchers.IO): TrustedChannelScope","description":"de.gematik.openhealth.smartcard.establishTrustedChannelBlocking","location":"smartcard/de.gematik.openhealth.smartcard/establish-trusted-channel-blocking.html","searchKeys":["establishTrustedChannelBlocking","fun HealthCardScope.establishTrustedChannelBlocking(cardAccessNumber: String, dispatcher: CoroutineDispatcher = Dispatchers.IO): TrustedChannelScope","de.gematik.openhealth.smartcard.establishTrustedChannelBlocking"]},{"name":"fun HealthCardVersion2.isHealthCardVersion21(): Boolean","description":"de.gematik.openhealth.smartcard.card.isHealthCardVersion21","location":"smartcard/de.gematik.openhealth.smartcard.card/is-health-card-version21.html","searchKeys":["isHealthCardVersion21","fun HealthCardVersion2.isHealthCardVersion21(): Boolean","de.gematik.openhealth.smartcard.card.isHealthCardVersion21"]},{"name":"fun SmartCardCommunicationScope.healthCardScope(): HealthCardScope","description":"de.gematik.openhealth.smartcard.card.healthCardScope","location":"smartcard/de.gematik.openhealth.smartcard.card/health-card-scope.html","searchKeys":["healthCardScope","fun SmartCardCommunicationScope.healthCardScope(): HealthCardScope","de.gematik.openhealth.smartcard.card.healthCardScope"]},{"name":"fun SmartCardCommunicationScope.transmitBlocking(commandApdu: CardCommandApdu, dispatcher: CoroutineDispatcher = Dispatchers.IO): CardResponseApdu","description":"de.gematik.openhealth.smartcard.transmitBlocking","location":"smartcard/de.gematik.openhealth.smartcard/transmit-blocking.html","searchKeys":["transmitBlocking","fun SmartCardCommunicationScope.transmitBlocking(commandApdu: CardCommandApdu, dispatcher: CoroutineDispatcher = Dispatchers.IO): CardResponseApdu","de.gematik.openhealth.smartcard.transmitBlocking"]},{"name":"fun encrypted(data: ByteArray): DataObject","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.Companion.encrypted","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/-companion/encrypted.html","searchKeys":["encrypted","fun encrypted(data: ByteArray): DataObject","de.gematik.openhealth.smartcard.tagobjects.DataObject.Companion.encrypted"]},{"name":"fun getAES128Key(sharedSecretK: ByteArray, mode: Mode): ByteArray","description":"de.gematik.openhealth.smartcard.card.getAES128Key","location":"smartcard/de.gematik.openhealth.smartcard.card/get-a-e-s128-key.html","searchKeys":["getAES128Key","fun getAES128Key(sharedSecretK: ByteArray, mode: Mode): ByteArray","de.gematik.openhealth.smartcard.card.getAES128Key"]},{"name":"fun getFid(): ByteArray","description":"de.gematik.openhealth.smartcard.identifier.FileIdentifier.getFid","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-file-identifier/get-fid.html","searchKeys":["getFid","fun getFid(): ByteArray","de.gematik.openhealth.smartcard.identifier.FileIdentifier.getFid"]},{"name":"fun ofApdu(apdu: ByteArray): CardCommandApdu","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofApdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/-companion/of-apdu.html","searchKeys":["ofApdu","fun ofApdu(apdu: ByteArray): CardCommandApdu","de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofApdu"]},{"name":"fun ofOptions(cla: Int, ins: Int, p1: Int, p2: Int, data: ByteArray?, ne: Int?): CardCommandApdu","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofOptions","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/-companion/of-options.html","searchKeys":["ofOptions","fun ofOptions(cla: Int, ins: Int, p1: Int, p2: Int, data: ByteArray?, ne: Int?): CardCommandApdu","de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofOptions"]},{"name":"fun ofOptions(cla: Int, ins: Int, p1: Int, p2: Int, ne: Int?): CardCommandApdu","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofOptions","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/-companion/of-options.html","searchKeys":["ofOptions","fun ofOptions(cla: Int, ins: Int, p1: Int, p2: Int, ne: Int?): CardCommandApdu","de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion.ofOptions"]},{"name":"fun padData(data: ByteArray, blockSize: Int, paddingByte: Byte = PAD): ByteArray","description":"de.gematik.openhealth.smartcard.utils.padData","location":"smartcard/de.gematik.openhealth.smartcard.utils/pad-data.html","searchKeys":["padData","fun padData(data: ByteArray, blockSize: Int, paddingByte: Byte = PAD): ByteArray","de.gematik.openhealth.smartcard.utils.padData"]},{"name":"fun parseHealthCardVersion2(asn1: ByteArray): HealthCardVersion2","description":"de.gematik.openhealth.smartcard.card.parseHealthCardVersion2","location":"smartcard/de.gematik.openhealth.smartcard.card/parse-health-card-version2.html","searchKeys":["parseHealthCardVersion2","fun parseHealthCardVersion2(asn1: ByteArray): HealthCardVersion2","de.gematik.openhealth.smartcard.card.parseHealthCardVersion2"]},{"name":"fun parsePaceInfo(asn1: ByteArray): PaceInfo","description":"de.gematik.openhealth.smartcard.exchange.parsePaceInfo","location":"smartcard/de.gematik.openhealth.smartcard.exchange/parse-pace-info.html","searchKeys":["parsePaceInfo","fun parsePaceInfo(asn1: ByteArray): PaceInfo","de.gematik.openhealth.smartcard.exchange.parsePaceInfo"]},{"name":"fun unpadData(paddedData: ByteArray, paddingByte: Byte = PAD): ByteArray","description":"de.gematik.openhealth.smartcard.utils.unpadData","location":"smartcard/de.gematik.openhealth.smartcard.utils/unpad-data.html","searchKeys":["unpadData","fun unpadData(paddedData: ByteArray, paddingByte: Byte = PAD): ByteArray","de.gematik.openhealth.smartcard.utils.unpadData"]},{"name":"fun valueOf(value: String): HealthCardResponseStatus","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.valueOf","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HealthCardResponseStatus","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.valueOf"]},{"name":"fun valueOf(value: String): Mode","description":"de.gematik.openhealth.smartcard.card.Mode.valueOf","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Mode","de.gematik.openhealth.smartcard.card.Mode.valueOf"]},{"name":"fun valueOf(value: String): PsoAlgorithm","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm.valueOf","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PsoAlgorithm","de.gematik.openhealth.smartcard.card.PsoAlgorithm.valueOf"]},{"name":"fun valueOf(value: String): UnlockMethod","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.valueOf","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): UnlockMethod","de.gematik.openhealth.smartcard.command.UnlockMethod.valueOf"]},{"name":"fun values(): Array<HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.values","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/values.html","searchKeys":["values","fun values(): Array<HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.values"]},{"name":"fun values(): Array<Mode>","description":"de.gematik.openhealth.smartcard.card.Mode.values","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/values.html","searchKeys":["values","fun values(): Array<Mode>","de.gematik.openhealth.smartcard.card.Mode.values"]},{"name":"fun values(): Array<PsoAlgorithm>","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm.values","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/values.html","searchKeys":["values","fun values(): Array<PsoAlgorithm>","de.gematik.openhealth.smartcard.card.PsoAlgorithm.values"]},{"name":"fun values(): Array<UnlockMethod>","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.values","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/values.html","searchKeys":["values","fun values(): Array<UnlockMethod>","de.gematik.openhealth.smartcard.command.UnlockMethod.values"]},{"name":"interface HealthCardScope : SmartCardCommunicationScope","description":"de.gematik.openhealth.smartcard.card.HealthCardScope","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-scope/index.html","searchKeys":["HealthCardScope","interface HealthCardScope : SmartCardCommunicationScope","de.gematik.openhealth.smartcard.card.HealthCardScope"]},{"name":"interface ICardKeyReference","description":"de.gematik.openhealth.smartcard.card.ICardKeyReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-i-card-key-reference/index.html","searchKeys":["ICardKeyReference","interface ICardKeyReference","de.gematik.openhealth.smartcard.card.ICardKeyReference"]},{"name":"interface SmartCardCommunicationScope","description":"de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope","location":"smartcard/de.gematik.openhealth.smartcard.card/-smart-card-communication-scope/index.html","searchKeys":["SmartCardCommunicationScope","interface SmartCardCommunicationScope","de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope"]},{"name":"interface TrustedChannelScope : HealthCardScope","description":"de.gematik.openhealth.smartcard.card.TrustedChannelScope","location":"smartcard/de.gematik.openhealth.smartcard.card/-trusted-channel-scope/index.html","searchKeys":["TrustedChannelScope","interface TrustedChannelScope : HealthCardScope","de.gematik.openhealth.smartcard.card.TrustedChannelScope"]},{"name":"object CardAccess","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-card-access/index.html","searchKeys":["CardAccess","object CardAccess","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.CardAccess"]},{"name":"object CchAutE256","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-ef/-cch-aut-e256/index.html","searchKeys":["CchAutE256","object CchAutE256","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef.CchAutE256"]},{"name":"object ChAutE256","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK.ChAutE256","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-pr-k/-ch-aut-e256/index.html","searchKeys":["ChAutE256","object ChAutE256","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK.ChAutE256"]},{"name":"object Companion","description":"de.gematik.openhealth.smartcard.card.ICardKeyReference.Companion","location":"smartcard/de.gematik.openhealth.smartcard.card/-i-card-key-reference/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.smartcard.card.ICardKeyReference.Companion"]},{"name":"object Companion","description":"de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.Companion","location":"smartcard/de.gematik.openhealth.smartcard.card/-smart-card-communication-scope/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.smartcard.card.SmartCardCommunicationScope.Companion"]},{"name":"object Companion","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.smartcard.command.CardCommandApdu.Companion"]},{"name":"object Companion","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.Companion","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.smartcard.command.HealthCardCommand.Companion"]},{"name":"object Companion","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.Companion","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.smartcard.tagobjects.DataObject.Companion"]},{"name":"object Df","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/index.html","searchKeys":["Df","object Df","de.gematik.openhealth.smartcard.cardobjects.Mf.Df"]},{"name":"object Ef","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-ef/index.html","searchKeys":["Ef","object Ef","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.Ef"]},{"name":"object Ef","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/index.html","searchKeys":["Ef","object Ef","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef"]},{"name":"object Ef","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/index.html","searchKeys":["Ef","object Ef","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef"]},{"name":"object Esign","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/index.html","searchKeys":["Esign","object Esign","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign"]},{"name":"object HCA","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/index.html","searchKeys":["HCA","object HCA","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA"]},{"name":"object Mf","description":"de.gematik.openhealth.smartcard.cardobjects.Mf","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/index.html","searchKeys":["Mf","object Mf","de.gematik.openhealth.smartcard.cardobjects.Mf"]},{"name":"object MrPinHome","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.MrPinHome","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-mr-pin-home/index.html","searchKeys":["MrPinHome","object MrPinHome","de.gematik.openhealth.smartcard.cardobjects.Mf.MrPinHome"]},{"name":"object Pd","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-pd/index.html","searchKeys":["Pd","object Pd","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Pd"]},{"name":"object PrK","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-esign/-pr-k/index.html","searchKeys":["PrK","object PrK","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.Esign.PrK"]},{"name":"object StatusVD","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-status-v-d/index.html","searchKeys":["StatusVD","object StatusVD","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.StatusVD"]},{"name":"object Vd","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-df/-h-c-a/-ef/-vd/index.html","searchKeys":["Vd","object Vd","de.gematik.openhealth.smartcard.cardobjects.Mf.Df.HCA.Ef.Vd"]},{"name":"object Version2","description":"de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2","location":"smartcard/de.gematik.openhealth.smartcard.cardobjects/-mf/-ef/-version2/index.html","searchKeys":["Version2","object Version2","de.gematik.openhealth.smartcard.cardobjects.Mf.Ef.Version2"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.smartcard.card.PaceKey.equals","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.smartcard.card.PaceKey.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.equals","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.smartcard.command.CardResponseApdu.equals"]},{"name":"open override fun calculateKeyReference(dfSpecific: Boolean): Int","description":"de.gematik.openhealth.smartcard.card.CardKey.calculateKeyReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-card-key/calculate-key-reference.html","searchKeys":["calculateKeyReference","open override fun calculateKeyReference(dfSpecific: Boolean): Int","de.gematik.openhealth.smartcard.card.CardKey.calculateKeyReference"]},{"name":"open override fun calculateKeyReference(dfSpecific: Boolean): Int","description":"de.gematik.openhealth.smartcard.card.PasswordReference.calculateKeyReference","location":"smartcard/de.gematik.openhealth.smartcard.card/-password-reference/calculate-key-reference.html","searchKeys":["calculateKeyReference","open override fun calculateKeyReference(dfSpecific: Boolean): Int","de.gematik.openhealth.smartcard.card.PasswordReference.calculateKeyReference"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.smartcard.card.PaceKey.hashCode","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.smartcard.card.PaceKey.hashCode"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.hashCode","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.smartcard.command.CardResponseApdu.hashCode"]},{"name":"open suspend fun HealthCardCommand.transmit(): HealthCardResponse","description":"de.gematik.openhealth.smartcard.card.HealthCardScope.transmit","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-scope/transmit.html","searchKeys":["transmit","open suspend fun HealthCardCommand.transmit(): HealthCardResponse","de.gematik.openhealth.smartcard.card.HealthCardScope.transmit"]},{"name":"open suspend fun HealthCardCommand.transmitSuccessfully(): HealthCardResponse","description":"de.gematik.openhealth.smartcard.card.HealthCardScope.transmitSuccessfully","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-scope/transmit-successfully.html","searchKeys":["transmitSuccessfully","open suspend fun HealthCardCommand.transmitSuccessfully(): HealthCardResponse","de.gematik.openhealth.smartcard.card.HealthCardScope.transmitSuccessfully"]},{"name":"sealed class HealthCardVerifyPinResult","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/index.html","searchKeys":["HealthCardVerifyPinResult","sealed class HealthCardVerifyPinResult","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult"]},{"name":"suspend fun HealthCardScope.establishTrustedChannel(cardAccessNumber: String): TrustedChannelScope","description":"de.gematik.openhealth.smartcard.exchange.establishTrustedChannel","location":"smartcard/de.gematik.openhealth.smartcard.exchange/establish-trusted-channel.html","searchKeys":["establishTrustedChannel","suspend fun HealthCardScope.establishTrustedChannel(cardAccessNumber: String): TrustedChannelScope","de.gematik.openhealth.smartcard.exchange.establishTrustedChannel"]},{"name":"suspend fun HealthCardScope.getRandom(length: Int): ByteArray","description":"de.gematik.openhealth.smartcard.exchange.getRandom","location":"smartcard/de.gematik.openhealth.smartcard.exchange/get-random.html","searchKeys":["getRandom","suspend fun HealthCardScope.getRandom(length: Int): ByteArray","de.gematik.openhealth.smartcard.exchange.getRandom"]},{"name":"suspend fun SmartCardCommunicationScope.transmit(commandApdu: CardCommandApdu): CardResponseApdu","description":"de.gematik.openhealth.smartcard.card.transmit","location":"smartcard/de.gematik.openhealth.smartcard.card/transmit.html","searchKeys":["transmit","suspend fun SmartCardCommunicationScope.transmit(commandApdu: CardCommandApdu): CardResponseApdu","de.gematik.openhealth.smartcard.card.transmit"]},{"name":"suspend fun TrustedChannelScope.readVsd(): ByteArray","description":"de.gematik.openhealth.smartcard.exchange.readVsd","location":"smartcard/de.gematik.openhealth.smartcard.exchange/read-vsd.html","searchKeys":["readVsd","suspend fun TrustedChannelScope.readVsd(): ByteArray","de.gematik.openhealth.smartcard.exchange.readVsd"]},{"name":"suspend fun TrustedChannelScope.retrieveCertificate(): ByteArray","description":"de.gematik.openhealth.smartcard.exchange.retrieveCertificate","location":"smartcard/de.gematik.openhealth.smartcard.exchange/retrieve-certificate.html","searchKeys":["retrieveCertificate","suspend fun TrustedChannelScope.retrieveCertificate(): ByteArray","de.gematik.openhealth.smartcard.exchange.retrieveCertificate"]},{"name":"suspend fun TrustedChannelScope.signChallenge(challenge: ByteArray): ByteArray","description":"de.gematik.openhealth.smartcard.exchange.signChallenge","location":"smartcard/de.gematik.openhealth.smartcard.exchange/sign-challenge.html","searchKeys":["signChallenge","suspend fun TrustedChannelScope.signChallenge(challenge: ByteArray): ByteArray","de.gematik.openhealth.smartcard.exchange.signChallenge"]},{"name":"suspend fun TrustedChannelScope.unlockEgk(unlockMethod: UnlockMethod, puk: String?, oldSecret: String, newSecret: String?): HealthCardResponseStatus","description":"de.gematik.openhealth.smartcard.exchange.unlockEgk","location":"smartcard/de.gematik.openhealth.smartcard.exchange/unlock-egk.html","searchKeys":["unlockEgk","suspend fun TrustedChannelScope.unlockEgk(unlockMethod: UnlockMethod, puk: String?, oldSecret: String, newSecret: String?): HealthCardResponseStatus","de.gematik.openhealth.smartcard.exchange.unlockEgk"]},{"name":"suspend fun TrustedChannelScope.verifyPin(pin: String): HealthCardVerifyPinResult","description":"de.gematik.openhealth.smartcard.exchange.verifyPin","location":"smartcard/de.gematik.openhealth.smartcard.exchange/verify-pin.html","searchKeys":["verifyPin","suspend fun TrustedChannelScope.verifyPin(pin: String): HealthCardVerifyPinResult","de.gematik.openhealth.smartcard.exchange.verifyPin"]},{"name":"val aid: ByteArray","description":"de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.aid","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-application-identifier/aid.html","searchKeys":["aid","val aid: ByteArray","de.gematik.openhealth.smartcard.identifier.ApplicationIdentifier.aid"]},{"name":"val apdu: ByteArray","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.apdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/apdu.html","searchKeys":["apdu","val apdu: ByteArray","de.gematik.openhealth.smartcard.command.CardCommandApdu.apdu"]},{"name":"val apdu: CardResponseApdu","description":"de.gematik.openhealth.smartcard.command.HealthCardResponse.apdu","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response/apdu.html","searchKeys":["apdu","val apdu: CardResponseApdu","de.gematik.openhealth.smartcard.command.HealthCardResponse.apdu"]},{"name":"val bytes: ByteArray","description":"de.gematik.openhealth.smartcard.card.EncryptedPinFormat2.bytes","location":"smartcard/de.gematik.openhealth.smartcard.card/-encrypted-pin-format2/bytes.html","searchKeys":["bytes","val bytes: ByteArray","de.gematik.openhealth.smartcard.card.EncryptedPinFormat2.bytes"]},{"name":"val bytes: ByteArray","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.bytes","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/bytes.html","searchKeys":["bytes","val bytes: ByteArray","de.gematik.openhealth.smartcard.command.CardResponseApdu.bytes"]},{"name":"val changeReferenceDataStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.changeReferenceDataStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/change-reference-data-status.html","searchKeys":["changeReferenceDataStatus","val changeReferenceDataStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.changeReferenceDataStatus"]},{"name":"val cla: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.cla","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/cla.html","searchKeys":["cla","val cla: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.cla"]},{"name":"val cla: Int","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.cla","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/cla.html","searchKeys":["cla","val cla: Int","de.gematik.openhealth.smartcard.command.HealthCardCommand.cla"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.smartcard.exchange.PaceInfo.curve","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-pace-info/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.smartcard.exchange.PaceInfo.curve"]},{"name":"val data: ByteArray","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.data","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/data.html","searchKeys":["data","val data: ByteArray","de.gematik.openhealth.smartcard.command.CardResponseApdu.data"]},{"name":"val data: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.data","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/data.html","searchKeys":["data","val data: ByteArray","de.gematik.openhealth.smartcard.tagobjects.DataObject.data"]},{"name":"val data: ByteArray?","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.data","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/data.html","searchKeys":["data","val data: ByteArray?","de.gematik.openhealth.smartcard.command.CardCommandApdu.data"]},{"name":"val data: ByteArray? = null","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.data","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/data.html","searchKeys":["data","val data: ByteArray? = null","de.gematik.openhealth.smartcard.command.HealthCardCommand.data"]},{"name":"val dataLength: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.dataLength","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/data-length.html","searchKeys":["dataLength","val dataLength: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.dataLength"]},{"name":"val dataOffset: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.dataOffset","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/data-offset.html","searchKeys":["dataOffset","val dataOffset: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.dataOffset"]},{"name":"val enc: SecretKey","description":"de.gematik.openhealth.smartcard.card.PaceKey.enc","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/enc.html","searchKeys":["enc","val enc: SecretKey","de.gematik.openhealth.smartcard.card.PaceKey.enc"]},{"name":"val encoded: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.encoded","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/encoded.html","searchKeys":["encoded","val encoded: ByteArray","de.gematik.openhealth.smartcard.tagobjects.DataObject.encoded"]},{"name":"val encoded: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.LengthObject.encoded","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-length-object/encoded.html","searchKeys":["encoded","val encoded: ByteArray","de.gematik.openhealth.smartcard.tagobjects.LengthObject.encoded"]},{"name":"val encoded: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.MacObject.encoded","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-mac-object/encoded.html","searchKeys":["encoded","val encoded: ByteArray","de.gematik.openhealth.smartcard.tagobjects.MacObject.encoded"]},{"name":"val encoded: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.StatusObject.encoded","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-status-object/encoded.html","searchKeys":["encoded","val encoded: ByteArray","de.gematik.openhealth.smartcard.tagobjects.StatusObject.encoded"]},{"name":"val entries: EnumEntries<HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.entries","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response-status/entries.html","searchKeys":["entries","val entries: EnumEntries<HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.HealthCardResponseStatus.entries"]},{"name":"val entries: EnumEntries<Mode>","description":"de.gematik.openhealth.smartcard.card.Mode.entries","location":"smartcard/de.gematik.openhealth.smartcard.card/-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<Mode>","de.gematik.openhealth.smartcard.card.Mode.entries"]},{"name":"val entries: EnumEntries<PsoAlgorithm>","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm.entries","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<PsoAlgorithm>","de.gematik.openhealth.smartcard.card.PsoAlgorithm.entries"]},{"name":"val entries: EnumEntries<UnlockMethod>","description":"de.gematik.openhealth.smartcard.command.UnlockMethod.entries","location":"smartcard/de.gematik.openhealth.smartcard.command/-unlock-method/entries.html","searchKeys":["entries","val entries: EnumEntries<UnlockMethod>","de.gematik.openhealth.smartcard.command.UnlockMethod.entries"]},{"name":"val expectedLength: Int?","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.expectedLength","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/expected-length.html","searchKeys":["expectedLength","val expectedLength: Int?","de.gematik.openhealth.smartcard.command.CardCommandApdu.expectedLength"]},{"name":"val expectedStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.expectedStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/expected-status.html","searchKeys":["expectedStatus","val expectedStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.HealthCardCommand.expectedStatus"]},{"name":"val fillingInstructionsEfAtrVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfAtrVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-ef-atr-version.html","searchKeys":["fillingInstructionsEfAtrVersion","val fillingInstructionsEfAtrVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfAtrVersion"]},{"name":"val fillingInstructionsEfEnvironmentSettingsVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfEnvironmentSettingsVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-ef-environment-settings-version.html","searchKeys":["fillingInstructionsEfEnvironmentSettingsVersion","val fillingInstructionsEfEnvironmentSettingsVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfEnvironmentSettingsVersion"]},{"name":"val fillingInstructionsEfGdoVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfGdoVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-ef-gdo-version.html","searchKeys":["fillingInstructionsEfGdoVersion","val fillingInstructionsEfGdoVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfGdoVersion"]},{"name":"val fillingInstructionsEfKeyInfoVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfKeyInfoVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-ef-key-info-version.html","searchKeys":["fillingInstructionsEfKeyInfoVersion","val fillingInstructionsEfKeyInfoVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfKeyInfoVersion"]},{"name":"val fillingInstructionsEfLoggingVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfLoggingVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-ef-logging-version.html","searchKeys":["fillingInstructionsEfLoggingVersion","val fillingInstructionsEfLoggingVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsEfLoggingVersion"]},{"name":"val fillingInstructionsVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/filling-instructions-version.html","searchKeys":["fillingInstructionsVersion","val fillingInstructionsVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.fillingInstructionsVersion"]},{"name":"val generalAuthenticateStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.generalAuthenticateStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/general-authenticate-status.html","searchKeys":["generalAuthenticateStatus","val generalAuthenticateStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.generalAuthenticateStatus"]},{"name":"val getRandomValuesStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.getRandomValuesStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/get-random-values-status.html","searchKeys":["getRandomValuesStatus","val getRandomValuesStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.getRandomValuesStatus"]},{"name":"val healthCardResponseStatus: HealthCardResponseStatus","description":"de.gematik.openhealth.smartcard.command.ResponseException.healthCardResponseStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/-response-exception/health-card-response-status.html","searchKeys":["healthCardResponseStatus","val healthCardResponseStatus: HealthCardResponseStatus","de.gematik.openhealth.smartcard.command.ResponseException.healthCardResponseStatus"]},{"name":"val identifier: Int","description":"de.gematik.openhealth.smartcard.card.PsoAlgorithm.identifier","location":"smartcard/de.gematik.openhealth.smartcard.card/-pso-algorithm/identifier.html","searchKeys":["identifier","val identifier: Int","de.gematik.openhealth.smartcard.card.PsoAlgorithm.identifier"]},{"name":"val ins: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.ins","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/ins.html","searchKeys":["ins","val ins: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.ins"]},{"name":"val ins: Int","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.ins","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/ins.html","searchKeys":["ins","val ins: Int","de.gematik.openhealth.smartcard.command.HealthCardCommand.ins"]},{"name":"val isEncrypted: Boolean","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.isEncrypted","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/is-encrypted.html","searchKeys":["isEncrypted","val isEncrypted: Boolean","de.gematik.openhealth.smartcard.tagobjects.DataObject.isEncrypted"]},{"name":"val mac: ByteArray","description":"de.gematik.openhealth.smartcard.tagobjects.MacObject.mac","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-mac-object/mac.html","searchKeys":["mac","val mac: ByteArray","de.gematik.openhealth.smartcard.tagobjects.MacObject.mac"]},{"name":"val mac: SecretKey","description":"de.gematik.openhealth.smartcard.card.PaceKey.mac","location":"smartcard/de.gematik.openhealth.smartcard.card/-pace-key/mac.html","searchKeys":["mac","val mac: SecretKey","de.gematik.openhealth.smartcard.card.PaceKey.mac"]},{"name":"val manageSecurityEnvironmentStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.manageSecurityEnvironmentStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/manage-security-environment-status.html","searchKeys":["manageSecurityEnvironmentStatus","val manageSecurityEnvironmentStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.manageSecurityEnvironmentStatus"]},{"name":"val ne: Int?","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.ne","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/ne.html","searchKeys":["ne","val ne: Int?","de.gematik.openhealth.smartcard.command.CardCommandApdu.ne"]},{"name":"val ne: Int? = null","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.ne","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/ne.html","searchKeys":["ne","val ne: Int? = null","de.gematik.openhealth.smartcard.command.HealthCardCommand.ne"]},{"name":"val objectSystemVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.objectSystemVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/object-system-version.html","searchKeys":["objectSystemVersion","val objectSystemVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.objectSystemVersion"]},{"name":"val p1: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.p1","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/p1.html","searchKeys":["p1","val p1: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.p1"]},{"name":"val p1: Int = 0","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.p1","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/p1.html","searchKeys":["p1","val p1: Int = 0","de.gematik.openhealth.smartcard.command.HealthCardCommand.p1"]},{"name":"val p2: Int","description":"de.gematik.openhealth.smartcard.command.CardCommandApdu.p2","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-command-apdu/p2.html","searchKeys":["p2","val p2: Int","de.gematik.openhealth.smartcard.command.CardCommandApdu.p2"]},{"name":"val p2: Int = 0","description":"de.gematik.openhealth.smartcard.command.HealthCardCommand.p2","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-command/p2.html","searchKeys":["p2","val p2: Int = 0","de.gematik.openhealth.smartcard.command.HealthCardCommand.p2"]},{"name":"val pinStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.pinStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/pin-status.html","searchKeys":["pinStatus","val pinStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.pinStatus"]},{"name":"val productIdentificationObjectSystemVersion: ByteArray","description":"de.gematik.openhealth.smartcard.card.HealthCardVersion2.productIdentificationObjectSystemVersion","location":"smartcard/de.gematik.openhealth.smartcard.card/-health-card-version2/product-identification-object-system-version.html","searchKeys":["productIdentificationObjectSystemVersion","val productIdentificationObjectSystemVersion: ByteArray","de.gematik.openhealth.smartcard.card.HealthCardVersion2.productIdentificationObjectSystemVersion"]},{"name":"val protocolId: String","description":"de.gematik.openhealth.smartcard.exchange.PaceInfo.protocolId","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-pace-info/protocol-id.html","searchKeys":["protocolId","val protocolId: String","de.gematik.openhealth.smartcard.exchange.PaceInfo.protocolId"]},{"name":"val protocolIdBytes: ByteArray","description":"de.gematik.openhealth.smartcard.exchange.PaceInfo.protocolIdBytes","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-pace-info/protocol-id-bytes.html","searchKeys":["protocolIdBytes","val protocolIdBytes: ByteArray","de.gematik.openhealth.smartcard.exchange.PaceInfo.protocolIdBytes"]},{"name":"val psoComputeDigitalSignatureStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.psoComputeDigitalSignatureStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/pso-compute-digital-signature-status.html","searchKeys":["psoComputeDigitalSignatureStatus","val psoComputeDigitalSignatureStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.psoComputeDigitalSignatureStatus"]},{"name":"val pwdId: Int","description":"de.gematik.openhealth.smartcard.card.PasswordReference.pwdId","location":"smartcard/de.gematik.openhealth.smartcard.card/-password-reference/pwd-id.html","searchKeys":["pwdId","val pwdId: Int","de.gematik.openhealth.smartcard.card.PasswordReference.pwdId"]},{"name":"val readStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.readStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/read-status.html","searchKeys":["readStatus","val readStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.readStatus"]},{"name":"val response: HealthCardResponse","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.response","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/response.html","searchKeys":["response","val response: HealthCardResponse","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.response"]},{"name":"val retriesLeft: Int","description":"de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning.retriesLeft","location":"smartcard/de.gematik.openhealth.smartcard.exchange/-health-card-verify-pin-result/-wrong-secret-warning/retries-left.html","searchKeys":["retriesLeft","val retriesLeft: Int","de.gematik.openhealth.smartcard.exchange.HealthCardVerifyPinResult.WrongSecretWarning.retriesLeft"]},{"name":"val selectStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.selectStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/select-status.html","searchKeys":["selectStatus","val selectStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.selectStatus"]},{"name":"val sfId: Int","description":"de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.sfId","location":"smartcard/de.gematik.openhealth.smartcard.identifier/-short-file-identifier/sf-id.html","searchKeys":["sfId","val sfId: Int","de.gematik.openhealth.smartcard.identifier.ShortFileIdentifier.sfId"]},{"name":"val status: HealthCardResponseStatus","description":"de.gematik.openhealth.smartcard.command.HealthCardResponse.status","location":"smartcard/de.gematik.openhealth.smartcard.command/-health-card-response/status.html","searchKeys":["status","val status: HealthCardResponseStatus","de.gematik.openhealth.smartcard.command.HealthCardResponse.status"]},{"name":"val sw: Int","description":"de.gematik.openhealth.smartcard.command.CardResponseApdu.sw","location":"smartcard/de.gematik.openhealth.smartcard.command/-card-response-apdu/sw.html","searchKeys":["sw","val sw: Int","de.gematik.openhealth.smartcard.command.CardResponseApdu.sw"]},{"name":"val tag: Asn1Tag","description":"de.gematik.openhealth.smartcard.tagobjects.DataObject.tag","location":"smartcard/de.gematik.openhealth.smartcard.tagobjects/-data-object/tag.html","searchKeys":["tag","val tag: Asn1Tag","de.gematik.openhealth.smartcard.tagobjects.DataObject.tag"]},{"name":"val unlockEgkStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.unlockEgkStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/unlock-egk-status.html","searchKeys":["unlockEgkStatus","val unlockEgkStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.unlockEgkStatus"]},{"name":"val verifySecretStatus: Map<Int, HealthCardResponseStatus>","description":"de.gematik.openhealth.smartcard.command.verifySecretStatus","location":"smartcard/de.gematik.openhealth.smartcard.command/verify-secret-status.html","searchKeys":["verifySecretStatus","val verifySecretStatus: Map<Int, HealthCardResponseStatus>","de.gematik.openhealth.smartcard.command.verifySecretStatus"]},{"name":"Aes","description":"de.gematik.openhealth.crypto.CmacAlgorithm.Aes","location":"crypto/de.gematik.openhealth.crypto/-cmac-algorithm/-aes/index.html","searchKeys":["Aes","Aes","de.gematik.openhealth.crypto.CmacAlgorithm.Aes"]},{"name":"BrainpoolP256r1","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/index.html","searchKeys":["BrainpoolP256r1","BrainpoolP256r1","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1"]},{"name":"BrainpoolP384r1","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/index.html","searchKeys":["BrainpoolP384r1","BrainpoolP384r1","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1"]},{"name":"BrainpoolP512r1","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/index.html","searchKeys":["BrainpoolP512r1","BrainpoolP512r1","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1"]},{"name":"Kyber768","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm.Kyber768","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/-kyber768/index.html","searchKeys":["Kyber768","Kyber768","de.gematik.openhealth.crypto.kem.KemAlgorithm.Kyber768"]},{"name":"MlKem768","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm.MlKem768","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/-ml-kem768/index.html","searchKeys":["MlKem768","MlKem768","de.gematik.openhealth.crypto.kem.KemAlgorithm.MlKem768"]},{"name":"Sha1","description":"de.gematik.openhealth.crypto.HashAlgorithm.Sha1","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-sha1/index.html","searchKeys":["Sha1","Sha1","de.gematik.openhealth.crypto.HashAlgorithm.Sha1"]},{"name":"Sha256","description":"de.gematik.openhealth.crypto.HashAlgorithm.Sha256","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-sha256/index.html","searchKeys":["Sha256","Sha256","de.gematik.openhealth.crypto.HashAlgorithm.Sha256"]},{"name":"Sha384","description":"de.gematik.openhealth.crypto.HashAlgorithm.Sha384","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-sha384/index.html","searchKeys":["Sha384","Sha384","de.gematik.openhealth.crypto.HashAlgorithm.Sha384"]},{"name":"Sha512","description":"de.gematik.openhealth.crypto.HashAlgorithm.Sha512","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-sha512/index.html","searchKeys":["Sha512","Sha512","de.gematik.openhealth.crypto.HashAlgorithm.Sha512"]},{"name":"Shake128","description":"de.gematik.openhealth.crypto.HashAlgorithm.Shake128","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-shake128/index.html","searchKeys":["Shake128","Shake128","de.gematik.openhealth.crypto.HashAlgorithm.Shake128"]},{"name":"Shake256","description":"de.gematik.openhealth.crypto.HashAlgorithm.Shake256","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/-shake256/index.html","searchKeys":["Shake256","Shake256","de.gematik.openhealth.crypto.HashAlgorithm.Shake256"]},{"name":"abstract class CryptoScope","description":"de.gematik.openhealth.crypto.CryptoScope","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/index.html","searchKeys":["CryptoScope","abstract class CryptoScope","de.gematik.openhealth.crypto.CryptoScope"]},{"name":"abstract class SecureRandom : Random","description":"de.gematik.openhealth.crypto.SecureRandom","location":"crypto/de.gematik.openhealth.crypto/-secure-random/index.html","searchKeys":["SecureRandom","abstract class SecureRandom : Random","de.gematik.openhealth.crypto.SecureRandom"]},{"name":"abstract fun authTag(): ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesCipher.authTag","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher/auth-tag.html","searchKeys":["authTag","abstract fun authTag(): ByteArray","de.gematik.openhealth.crypto.cipher.AesCipher.authTag"]},{"name":"abstract fun computeSecret(otherPublicKey: EcPublicKey): ByteArray","description":"de.gematik.openhealth.crypto.exchange.Ecdh.computeSecret","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh/compute-secret.html","searchKeys":["computeSecret","abstract fun computeSecret(otherPublicKey: EcPublicKey): ByteArray","de.gematik.openhealth.crypto.exchange.Ecdh.computeSecret"]},{"name":"abstract fun decapsulate(wrappedKey: ByteArray): KemDecapsulationResult","description":"de.gematik.openhealth.crypto.kem.KemDecapsulation.decapsulate","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation/decapsulate.html","searchKeys":["decapsulate","abstract fun decapsulate(wrappedKey: ByteArray): KemDecapsulationResult","de.gematik.openhealth.crypto.kem.KemDecapsulation.decapsulate"]},{"name":"abstract fun digest(): ByteArray","description":"de.gematik.openhealth.crypto.Hash.digest","location":"crypto/de.gematik.openhealth.crypto/-hash/digest.html","searchKeys":["digest","abstract fun digest(): ByteArray","de.gematik.openhealth.crypto.Hash.digest"]},{"name":"abstract fun encapsulate(): KemEncapsulationResult","description":"de.gematik.openhealth.crypto.kem.KemEncapsulation.encapsulate","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation/encapsulate.html","searchKeys":["encapsulate","abstract fun encapsulate(): KemEncapsulationResult","de.gematik.openhealth.crypto.kem.KemEncapsulation.encapsulate"]},{"name":"abstract fun encapsulationKey(): ByteArray","description":"de.gematik.openhealth.crypto.kem.KemDecapsulation.encapsulationKey","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation/encapsulation-key.html","searchKeys":["encapsulationKey","abstract fun encapsulationKey(): ByteArray","de.gematik.openhealth.crypto.kem.KemDecapsulation.encapsulationKey"]},{"name":"abstract fun final(): ByteArray","description":"de.gematik.openhealth.crypto.Cmac.final","location":"crypto/de.gematik.openhealth.crypto/-cmac/final.html","searchKeys":["final","abstract fun final(): ByteArray","de.gematik.openhealth.crypto.Cmac.final"]},{"name":"abstract fun final(): ByteArray","description":"de.gematik.openhealth.crypto.cipher.Cipher.final","location":"crypto/de.gematik.openhealth.crypto.cipher/-cipher/final.html","searchKeys":["final","abstract fun final(): ByteArray","de.gematik.openhealth.crypto.cipher.Cipher.final"]},{"name":"abstract fun update(data: ByteArray)","description":"de.gematik.openhealth.crypto.Cmac.update","location":"crypto/de.gematik.openhealth.crypto/-cmac/update.html","searchKeys":["update","abstract fun update(data: ByteArray)","de.gematik.openhealth.crypto.Cmac.update"]},{"name":"abstract fun update(data: ByteArray)","description":"de.gematik.openhealth.crypto.Hash.update","location":"crypto/de.gematik.openhealth.crypto/-hash/update.html","searchKeys":["update","abstract fun update(data: ByteArray)","de.gematik.openhealth.crypto.Hash.update"]},{"name":"abstract fun update(data: ByteArray): ByteArray","description":"de.gematik.openhealth.crypto.cipher.Cipher.update","location":"crypto/de.gematik.openhealth.crypto.cipher/-cipher/update.html","searchKeys":["update","abstract fun update(data: ByteArray): ByteArray","de.gematik.openhealth.crypto.cipher.Cipher.update"]},{"name":"abstract val a: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.a","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/a.html","searchKeys":["a","abstract val a: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.a"]},{"name":"abstract val autoPadding: Boolean","description":"de.gematik.openhealth.crypto.cipher.AesCipherSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher-spec/auto-padding.html","searchKeys":["autoPadding","abstract val autoPadding: Boolean","de.gematik.openhealth.crypto.cipher.AesCipherSpec.autoPadding"]},{"name":"abstract val autoPadding: Boolean","description":"de.gematik.openhealth.crypto.cipher.AesDecipherSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher-spec/auto-padding.html","searchKeys":["autoPadding","abstract val autoPadding: Boolean","de.gematik.openhealth.crypto.cipher.AesDecipherSpec.autoPadding"]},{"name":"abstract val b: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.b","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/b.html","searchKeys":["b","abstract val b: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.b"]},{"name":"abstract val data: ByteArray","description":"de.gematik.openhealth.crypto.key.Key.data","location":"crypto/de.gematik.openhealth.crypto.key/-key/data.html","searchKeys":["data","abstract val data: ByteArray","de.gematik.openhealth.crypto.key.Key.data"]},{"name":"abstract val iv: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesCipherIvSpec.iv","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher-iv-spec/iv.html","searchKeys":["iv","abstract val iv: ByteArray","de.gematik.openhealth.crypto.cipher.AesCipherIvSpec.iv"]},{"name":"abstract val iv: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesDecipherIvSpec.iv","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher-iv-spec/iv.html","searchKeys":["iv","abstract val iv: ByteArray","de.gematik.openhealth.crypto.cipher.AesDecipherIvSpec.iv"]},{"name":"abstract val p: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.p","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/p.html","searchKeys":["p","abstract val p: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.p"]},{"name":"abstract val q: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.q","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/q.html","searchKeys":["q","abstract val q: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.q"]},{"name":"abstract val spec: AesCipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesCipher.spec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher/spec.html","searchKeys":["spec","abstract val spec: AesCipherSpec","de.gematik.openhealth.crypto.cipher.AesCipher.spec"]},{"name":"abstract val spec: AesDecipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesDecipher.spec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher/spec.html","searchKeys":["spec","abstract val spec: AesDecipherSpec","de.gematik.openhealth.crypto.cipher.AesDecipher.spec"]},{"name":"abstract val spec: CmacSpec","description":"de.gematik.openhealth.crypto.Cmac.spec","location":"crypto/de.gematik.openhealth.crypto/-cmac/spec.html","searchKeys":["spec","abstract val spec: CmacSpec","de.gematik.openhealth.crypto.Cmac.spec"]},{"name":"abstract val spec: EcdhSpec","description":"de.gematik.openhealth.crypto.exchange.Ecdh.spec","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh/spec.html","searchKeys":["spec","abstract val spec: EcdhSpec","de.gematik.openhealth.crypto.exchange.Ecdh.spec"]},{"name":"abstract val spec: HashSpec","description":"de.gematik.openhealth.crypto.Hash.spec","location":"crypto/de.gematik.openhealth.crypto/-hash/spec.html","searchKeys":["spec","abstract val spec: HashSpec","de.gematik.openhealth.crypto.Hash.spec"]},{"name":"abstract val spec: KemSpec","description":"de.gematik.openhealth.crypto.kem.KemDecapsulation.spec","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation/spec.html","searchKeys":["spec","abstract val spec: KemSpec","de.gematik.openhealth.crypto.kem.KemDecapsulation.spec"]},{"name":"abstract val spec: KemSpec","description":"de.gematik.openhealth.crypto.kem.KemEncapsulation.spec","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation/spec.html","searchKeys":["spec","abstract val spec: KemSpec","de.gematik.openhealth.crypto.kem.KemEncapsulation.spec"]},{"name":"abstract val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesCipherSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher-spec/tag-length.html","searchKeys":["tagLength","abstract val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesCipherSpec.tagLength"]},{"name":"abstract val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesDecipherSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher-spec/tag-length.html","searchKeys":["tagLength","abstract val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesDecipherSpec.tagLength"]},{"name":"abstract val x: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.x","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/x.html","searchKeys":["x","abstract val x: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.x"]},{"name":"abstract val y: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.y","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/y.html","searchKeys":["y","abstract val y: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.y"]},{"name":"actual fun CmacSpec.nativeCreateCmac(scope: CryptoScope, secret: SecretKey): Cmac","description":"de.gematik.openhealth.crypto.nativeCreateCmac","location":"crypto/de.gematik.openhealth.crypto/native-create-cmac.html","searchKeys":["nativeCreateCmac","actual fun CmacSpec.nativeCreateCmac(scope: CryptoScope, secret: SecretKey): Cmac","de.gematik.openhealth.crypto.nativeCreateCmac"]},{"name":"actual fun HashSpec.nativeCreateHash(scope: CryptoScope): Hash","description":"de.gematik.openhealth.crypto.nativeCreateHash","location":"crypto/de.gematik.openhealth.crypto/native-create-hash.html","searchKeys":["nativeCreateHash","actual fun HashSpec.nativeCreateHash(scope: CryptoScope): Hash","de.gematik.openhealth.crypto.nativeCreateHash"]},{"name":"actual fun KemSpec.nativeCreateDecapsulation(scope: CryptoScope): KemDecapsulation","description":"de.gematik.openhealth.crypto.kem.nativeCreateDecapsulation","location":"crypto/de.gematik.openhealth.crypto.kem/native-create-decapsulation.html","searchKeys":["nativeCreateDecapsulation","actual fun KemSpec.nativeCreateDecapsulation(scope: CryptoScope): KemDecapsulation","de.gematik.openhealth.crypto.kem.nativeCreateDecapsulation"]},{"name":"actual fun KemSpec.nativeCreateEncapsulation(scope: CryptoScope, encapsulationKey: ByteArray): KemEncapsulation","description":"de.gematik.openhealth.crypto.kem.nativeCreateEncapsulation","location":"crypto/de.gematik.openhealth.crypto.kem/native-create-encapsulation.html","searchKeys":["nativeCreateEncapsulation","actual fun KemSpec.nativeCreateEncapsulation(scope: CryptoScope, encapsulationKey: ByteArray): KemEncapsulation","de.gematik.openhealth.crypto.kem.nativeCreateEncapsulation"]},{"name":"actual fun nativeConstantTimeEquals(arrayA: ByteArray, arrayB: ByteArray): Boolean","description":"de.gematik.openhealth.crypto.nativeConstantTimeEquals","location":"crypto/de.gematik.openhealth.crypto/native-constant-time-equals.html","searchKeys":["nativeConstantTimeEquals","actual fun nativeConstantTimeEquals(arrayA: ByteArray, arrayB: ByteArray): Boolean","de.gematik.openhealth.crypto.nativeConstantTimeEquals"]},{"name":"annotation class ExperimentalCryptoApi","description":"de.gematik.openhealth.crypto.ExperimentalCryptoApi","location":"crypto/de.gematik.openhealth.crypto/-experimental-crypto-api/index.html","searchKeys":["ExperimentalCryptoApi","annotation class ExperimentalCryptoApi","de.gematik.openhealth.crypto.ExperimentalCryptoApi"]},{"name":"annotation class UnoptimizedCryptoApi(val ticket: String)","description":"de.gematik.openhealth.crypto.UnoptimizedCryptoApi","location":"crypto/de.gematik.openhealth.crypto/-unoptimized-crypto-api/index.html","searchKeys":["UnoptimizedCryptoApi","annotation class UnoptimizedCryptoApi(val ticket: String)","de.gematik.openhealth.crypto.UnoptimizedCryptoApi"]},{"name":"annotation class UnsafeCryptoApi","description":"de.gematik.openhealth.crypto.UnsafeCryptoApi","location":"crypto/de.gematik.openhealth.crypto/-unsafe-crypto-api/index.html","searchKeys":["UnsafeCryptoApi","annotation class UnsafeCryptoApi","de.gematik.openhealth.crypto.UnsafeCryptoApi"]},{"name":"class AesCbcSpec(val tagLength: ByteUnit, val iv: ByteArray, val autoPadding: Boolean = true) : AesCipherIvSpec, AesDecipherIvSpec","description":"de.gematik.openhealth.crypto.cipher.AesCbcSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cbc-spec/index.html","searchKeys":["AesCbcSpec","class AesCbcSpec(val tagLength: ByteUnit, val iv: ByteArray, val autoPadding: Boolean = true) : AesCipherIvSpec, AesDecipherIvSpec","de.gematik.openhealth.crypto.cipher.AesCbcSpec"]},{"name":"class AesEcbSpec(val tagLength: ByteUnit, val autoPadding: Boolean = true) : AesCipherSpec, AesDecipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesEcbSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-ecb-spec/index.html","searchKeys":["AesEcbSpec","class AesEcbSpec(val tagLength: ByteUnit, val autoPadding: Boolean = true) : AesCipherSpec, AesDecipherSpec","de.gematik.openhealth.crypto.cipher.AesEcbSpec"]},{"name":"class AesGcmCipherSpec(val tagLength: ByteUnit, val iv: ByteArray, val aad: ByteArray) : AesCipherIvSpec","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/index.html","searchKeys":["AesGcmCipherSpec","class AesGcmCipherSpec(val tagLength: ByteUnit, val iv: ByteArray, val aad: ByteArray) : AesCipherIvSpec","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec"]},{"name":"class AesGcmDecipherSpec(val tagLength: ByteUnit, val iv: ByteArray, val aad: ByteArray, val authTag: ByteArray) : AesDecipherIvSpec","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/index.html","searchKeys":["AesGcmDecipherSpec","class AesGcmDecipherSpec(val tagLength: ByteUnit, val iv: ByteArray, val aad: ByteArray, val authTag: ByteArray) : AesDecipherIvSpec","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec"]},{"name":"class CmacException(val message: String, val cause: Throwable? = null) : Throwable","description":"de.gematik.openhealth.crypto.CmacException","location":"crypto/de.gematik.openhealth.crypto/-cmac-exception/index.html","searchKeys":["CmacException","class CmacException(val message: String, val cause: Throwable? = null) : Throwable","de.gematik.openhealth.crypto.CmacException"]},{"name":"class CmacSpec(val algorithm: CmacAlgorithm)","description":"de.gematik.openhealth.crypto.CmacSpec","location":"crypto/de.gematik.openhealth.crypto/-cmac-spec/index.html","searchKeys":["CmacSpec","class CmacSpec(val algorithm: CmacAlgorithm)","de.gematik.openhealth.crypto.CmacSpec"]},{"name":"class EcKeyPairSpec(val curve: EcCurve)","description":"de.gematik.openhealth.crypto.key.EcKeyPairSpec","location":"crypto/de.gematik.openhealth.crypto.key/-ec-key-pair-spec/index.html","searchKeys":["EcKeyPairSpec","class EcKeyPairSpec(val curve: EcCurve)","de.gematik.openhealth.crypto.key.EcKeyPairSpec"]},{"name":"class EcPrivateKey : Key","description":"de.gematik.openhealth.crypto.key.EcPrivateKey","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/index.html","searchKeys":["EcPrivateKey","class EcPrivateKey : Key","de.gematik.openhealth.crypto.key.EcPrivateKey"]},{"name":"class EcPublicKey : Key","description":"de.gematik.openhealth.crypto.key.EcPublicKey","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/index.html","searchKeys":["EcPublicKey","class EcPublicKey : Key","de.gematik.openhealth.crypto.key.EcPublicKey"]},{"name":"class EcdhSpec(val curve: EcCurve)","description":"de.gematik.openhealth.crypto.exchange.EcdhSpec","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh-spec/index.html","searchKeys":["EcdhSpec","class EcdhSpec(val curve: EcCurve)","de.gematik.openhealth.crypto.exchange.EcdhSpec"]},{"name":"class HashException(val message: String, val cause: Throwable? = null) : Throwable","description":"de.gematik.openhealth.crypto.HashException","location":"crypto/de.gematik.openhealth.crypto/-hash-exception/index.html","searchKeys":["HashException","class HashException(val message: String, val cause: Throwable? = null) : Throwable","de.gematik.openhealth.crypto.HashException"]},{"name":"class HashSpec(val algorithm: HashAlgorithm)","description":"de.gematik.openhealth.crypto.HashSpec","location":"crypto/de.gematik.openhealth.crypto/-hash-spec/index.html","searchKeys":["HashSpec","class HashSpec(val algorithm: HashAlgorithm)","de.gematik.openhealth.crypto.HashSpec"]},{"name":"class KemSpec(val algorithm: KemAlgorithm)","description":"de.gematik.openhealth.crypto.kem.KemSpec","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-spec/index.html","searchKeys":["KemSpec","class KemSpec(val algorithm: KemAlgorithm)","de.gematik.openhealth.crypto.kem.KemSpec"]},{"name":"class LazySuspend<T : Any>(initializer: suspend () -> T)","description":"de.gematik.openhealth.crypto.LazySuspend","location":"crypto/de.gematik.openhealth.crypto/[js]-lazy-suspend/index.html","searchKeys":["LazySuspend","class LazySuspend<T : Any>(initializer: suspend () -> T)","de.gematik.openhealth.crypto.LazySuspend"]},{"name":"class LazySuspend<T : Any>(initializer: suspend () -> T)","description":"de.gematik.openhealth.crypto.LazySuspend","location":"crypto/de.gematik.openhealth.crypto/[common]-lazy-suspend/index.html","searchKeys":["LazySuspend","class LazySuspend<T : Any>(initializer: suspend () -> T)","de.gematik.openhealth.crypto.LazySuspend"]},{"name":"class Pem(val type: String, val data: ByteArray)","description":"de.gematik.openhealth.crypto.Pem","location":"crypto/de.gematik.openhealth.crypto/-pem/index.html","searchKeys":["Pem","class Pem(val type: String, val data: ByteArray)","de.gematik.openhealth.crypto.Pem"]},{"name":"class SecretKey(val data: ByteArray) : Key","description":"de.gematik.openhealth.crypto.key.SecretKey","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/index.html","searchKeys":["SecretKey","class SecretKey(val data: ByteArray) : Key","de.gematik.openhealth.crypto.key.SecretKey"]},{"name":"class WebAssemblyException(message: String?) : RuntimeException","description":"de.gematik.openhealth.crypto.wrapper.WebAssemblyException","location":"crypto/de.gematik.openhealth.crypto.wrapper/-web-assembly-exception/index.html","searchKeys":["WebAssemblyException","class WebAssemblyException(message: String?) : RuntimeException","de.gematik.openhealth.crypto.wrapper.WebAssemblyException"]},{"name":"const val OID: String","description":"de.gematik.openhealth.crypto.key.EcPublicKey.Companion.OID","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/-companion/-o-i-d.html","searchKeys":["OID","const val OID: String","de.gematik.openhealth.crypto.key.EcPublicKey.Companion.OID"]},{"name":"constructor()","description":"de.gematik.openhealth.crypto.CryptoScope.CryptoScope","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/-crypto-scope.html","searchKeys":["CryptoScope","constructor()","de.gematik.openhealth.crypto.CryptoScope.CryptoScope"]},{"name":"constructor()","description":"de.gematik.openhealth.crypto.SecureRandom.SecureRandom","location":"crypto/de.gematik.openhealth.crypto/-secure-random/-secure-random.html","searchKeys":["SecureRandom","constructor()","de.gematik.openhealth.crypto.SecureRandom.SecureRandom"]},{"name":"constructor(algorithm: CmacAlgorithm)","description":"de.gematik.openhealth.crypto.CmacSpec.CmacSpec","location":"crypto/de.gematik.openhealth.crypto/-cmac-spec/-cmac-spec.html","searchKeys":["CmacSpec","constructor(algorithm: CmacAlgorithm)","de.gematik.openhealth.crypto.CmacSpec.CmacSpec"]},{"name":"constructor(algorithm: HashAlgorithm)","description":"de.gematik.openhealth.crypto.HashSpec.HashSpec","location":"crypto/de.gematik.openhealth.crypto/-hash-spec/-hash-spec.html","searchKeys":["HashSpec","constructor(algorithm: HashAlgorithm)","de.gematik.openhealth.crypto.HashSpec.HashSpec"]},{"name":"constructor(algorithm: KemAlgorithm)","description":"de.gematik.openhealth.crypto.kem.KemSpec.KemSpec","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-spec/-kem-spec.html","searchKeys":["KemSpec","constructor(algorithm: KemAlgorithm)","de.gematik.openhealth.crypto.kem.KemSpec.KemSpec"]},{"name":"constructor(curve: EcCurve)","description":"de.gematik.openhealth.crypto.exchange.EcdhSpec.EcdhSpec","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh-spec/-ecdh-spec.html","searchKeys":["EcdhSpec","constructor(curve: EcCurve)","de.gematik.openhealth.crypto.exchange.EcdhSpec.EcdhSpec"]},{"name":"constructor(curve: EcCurve)","description":"de.gematik.openhealth.crypto.key.EcKeyPairSpec.EcKeyPairSpec","location":"crypto/de.gematik.openhealth.crypto.key/-ec-key-pair-spec/-ec-key-pair-spec.html","searchKeys":["EcKeyPairSpec","constructor(curve: EcCurve)","de.gematik.openhealth.crypto.key.EcKeyPairSpec.EcKeyPairSpec"]},{"name":"constructor(curve: EcCurve, x: BigInteger?, y: BigInteger?)","description":"de.gematik.openhealth.crypto.key.EcPoint.EcPoint","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/-ec-point.html","searchKeys":["EcPoint","constructor(curve: EcCurve, x: BigInteger?, y: BigInteger?)","de.gematik.openhealth.crypto.key.EcPoint.EcPoint"]},{"name":"constructor(data: ByteArray)","description":"de.gematik.openhealth.crypto.key.SecretKey.SecretKey","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/-secret-key.html","searchKeys":["SecretKey","constructor(data: ByteArray)","de.gematik.openhealth.crypto.key.SecretKey.SecretKey"]},{"name":"constructor(initializer: suspend () -> T)","description":"de.gematik.openhealth.crypto.LazySuspend.LazySuspend","location":"crypto/de.gematik.openhealth.crypto/[js]-lazy-suspend/-lazy-suspend.html","searchKeys":["LazySuspend","constructor(initializer: suspend () -> T)","de.gematik.openhealth.crypto.LazySuspend.LazySuspend"]},{"name":"constructor(initializer: suspend () -> T)","description":"de.gematik.openhealth.crypto.LazySuspend.LazySuspend","location":"crypto/de.gematik.openhealth.crypto/[common]-lazy-suspend/-lazy-suspend.html","searchKeys":["LazySuspend","constructor(initializer: suspend () -> T)","de.gematik.openhealth.crypto.LazySuspend.LazySuspend"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"de.gematik.openhealth.crypto.CmacException.CmacException","location":"crypto/de.gematik.openhealth.crypto/-cmac-exception/-cmac-exception.html","searchKeys":["CmacException","constructor(message: String, cause: Throwable? = null)","de.gematik.openhealth.crypto.CmacException.CmacException"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"de.gematik.openhealth.crypto.HashException.HashException","location":"crypto/de.gematik.openhealth.crypto/-hash-exception/-hash-exception.html","searchKeys":["HashException","constructor(message: String, cause: Throwable? = null)","de.gematik.openhealth.crypto.HashException.HashException"]},{"name":"constructor(message: String?)","description":"de.gematik.openhealth.crypto.wrapper.WebAssemblyException.WebAssemblyException","location":"crypto/de.gematik.openhealth.crypto.wrapper/-web-assembly-exception/-web-assembly-exception.html","searchKeys":["WebAssemblyException","constructor(message: String?)","de.gematik.openhealth.crypto.wrapper.WebAssemblyException.WebAssemblyException"]},{"name":"constructor(sharedSecret: ByteArray)","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult.KemDecapsulationResult","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/-kem-decapsulation-result.html","searchKeys":["KemDecapsulationResult","constructor(sharedSecret: ByteArray)","de.gematik.openhealth.crypto.kem.KemDecapsulationResult.KemDecapsulationResult"]},{"name":"constructor(sharedSecret: ByteArray, wrappedKey: ByteArray)","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult.KemEncapsulationResult","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/-kem-encapsulation-result.html","searchKeys":["KemEncapsulationResult","constructor(sharedSecret: ByteArray, wrappedKey: ByteArray)","de.gematik.openhealth.crypto.kem.KemEncapsulationResult.KemEncapsulationResult"]},{"name":"constructor(tagLength: ByteUnit, autoPadding: Boolean = true)","description":"de.gematik.openhealth.crypto.cipher.AesEcbSpec.AesEcbSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-ecb-spec/-aes-ecb-spec.html","searchKeys":["AesEcbSpec","constructor(tagLength: ByteUnit, autoPadding: Boolean = true)","de.gematik.openhealth.crypto.cipher.AesEcbSpec.AesEcbSpec"]},{"name":"constructor(tagLength: ByteUnit, iv: ByteArray, aad: ByteArray)","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.AesGcmCipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/-aes-gcm-cipher-spec.html","searchKeys":["AesGcmCipherSpec","constructor(tagLength: ByteUnit, iv: ByteArray, aad: ByteArray)","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.AesGcmCipherSpec"]},{"name":"constructor(tagLength: ByteUnit, iv: ByteArray, aad: ByteArray, authTag: ByteArray)","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.AesGcmDecipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/-aes-gcm-decipher-spec.html","searchKeys":["AesGcmDecipherSpec","constructor(tagLength: ByteUnit, iv: ByteArray, aad: ByteArray, authTag: ByteArray)","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.AesGcmDecipherSpec"]},{"name":"constructor(tagLength: ByteUnit, iv: ByteArray, autoPadding: Boolean = true)","description":"de.gematik.openhealth.crypto.cipher.AesCbcSpec.AesCbcSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cbc-spec/-aes-cbc-spec.html","searchKeys":["AesCbcSpec","constructor(tagLength: ByteUnit, iv: ByteArray, autoPadding: Boolean = true)","de.gematik.openhealth.crypto.cipher.AesCbcSpec.AesCbcSpec"]},{"name":"constructor(type: String, data: ByteArray)","description":"de.gematik.openhealth.crypto.Pem.Pem","location":"crypto/de.gematik.openhealth.crypto/-pem/-pem.html","searchKeys":["Pem","constructor(type: String, data: ByteArray)","de.gematik.openhealth.crypto.Pem.Pem"]},{"name":"constructor(value: Int)","description":"de.gematik.openhealth.crypto.ByteUnit.ByteUnit","location":"crypto/de.gematik.openhealth.crypto/-byte-unit/-byte-unit.html","searchKeys":["ByteUnit","constructor(value: Int)","de.gematik.openhealth.crypto.ByteUnit.ByteUnit"]},{"name":"data class EcPoint(val curve: EcCurve, val x: BigInteger?, val y: BigInteger?)","description":"de.gematik.openhealth.crypto.key.EcPoint","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/index.html","searchKeys":["EcPoint","data class EcPoint(val curve: EcCurve, val x: BigInteger?, val y: BigInteger?)","de.gematik.openhealth.crypto.key.EcPoint"]},{"name":"data class KemDecapsulationResult(val sharedSecret: ByteArray)","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/index.html","searchKeys":["KemDecapsulationResult","data class KemDecapsulationResult(val sharedSecret: ByteArray)","de.gematik.openhealth.crypto.kem.KemDecapsulationResult"]},{"name":"data class KemEncapsulationResult(val sharedSecret: ByteArray, val wrappedKey: ByteArray)","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/index.html","searchKeys":["KemEncapsulationResult","data class KemEncapsulationResult(val sharedSecret: ByteArray, val wrappedKey: ByteArray)","de.gematik.openhealth.crypto.kem.KemEncapsulationResult"]},{"name":"enum CmacAlgorithm : Enum<CmacAlgorithm> ","description":"de.gematik.openhealth.crypto.CmacAlgorithm","location":"crypto/de.gematik.openhealth.crypto/-cmac-algorithm/index.html","searchKeys":["CmacAlgorithm","enum CmacAlgorithm : Enum<CmacAlgorithm> ","de.gematik.openhealth.crypto.CmacAlgorithm"]},{"name":"enum EcCurve : Enum<EcCurve> ","description":"de.gematik.openhealth.crypto.key.EcCurve","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/index.html","searchKeys":["EcCurve","enum EcCurve : Enum<EcCurve> ","de.gematik.openhealth.crypto.key.EcCurve"]},{"name":"enum HashAlgorithm : Enum<HashAlgorithm> ","description":"de.gematik.openhealth.crypto.HashAlgorithm","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/index.html","searchKeys":["HashAlgorithm","enum HashAlgorithm : Enum<HashAlgorithm> ","de.gematik.openhealth.crypto.HashAlgorithm"]},{"name":"enum KemAlgorithm : Enum<KemAlgorithm> ","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/index.html","searchKeys":["KemAlgorithm","enum KemAlgorithm : Enum<KemAlgorithm> ","de.gematik.openhealth.crypto.kem.KemAlgorithm"]},{"name":"expect fun EcKeyPairSpec.generateKeyPair(): Pair<EcPublicKey, EcPrivateKey>","description":"de.gematik.openhealth.crypto.key.generateKeyPair","location":"crypto/de.gematik.openhealth.crypto.key/generate-key-pair.html","searchKeys":["generateKeyPair","expect fun EcKeyPairSpec.generateKeyPair(): Pair<EcPublicKey, EcPrivateKey>","de.gematik.openhealth.crypto.key.generateKeyPair"]},{"name":"expect fun secureRandom(): SecureRandom","description":"de.gematik.openhealth.crypto.secureRandom","location":"crypto/de.gematik.openhealth.crypto/secure-random.html","searchKeys":["secureRandom","expect fun secureRandom(): SecureRandom","de.gematik.openhealth.crypto.secureRandom"]},{"name":"expect suspend fun initializeNativeCryptoProvider()","description":"de.gematik.openhealth.crypto.initializeNativeCryptoProvider","location":"crypto/de.gematik.openhealth.crypto/initialize-native-crypto-provider.html","searchKeys":["initializeNativeCryptoProvider","expect suspend fun initializeNativeCryptoProvider()","de.gematik.openhealth.crypto.initializeNativeCryptoProvider"]},{"name":"fun <R> useCrypto(block: CryptoScope.() -> R): R","description":"de.gematik.openhealth.crypto.useCrypto","location":"crypto/de.gematik.openhealth.crypto/use-crypto.html","searchKeys":["useCrypto","fun <R> useCrypto(block: CryptoScope.() -> R): R","de.gematik.openhealth.crypto.useCrypto"]},{"name":"fun <T : Any> runWithProvider(block: () -> T): T","description":"de.gematik.openhealth.crypto.wrapper.runWithProvider","location":"crypto/de.gematik.openhealth.crypto.wrapper/run-with-provider.html","searchKeys":["runWithProvider","fun <T : Any> runWithProvider(block: () -> T): T","de.gematik.openhealth.crypto.wrapper.runWithProvider"]},{"name":"fun <T : Any> runWithProvider(block: CryptoModule.() -> T): T","description":"de.gematik.openhealth.crypto.wrapper.runWithProvider","location":"crypto/de.gematik.openhealth.crypto.wrapper/run-with-provider.html","searchKeys":["runWithProvider","fun <T : Any> runWithProvider(block: CryptoModule.() -> T): T","de.gematik.openhealth.crypto.wrapper.runWithProvider"]},{"name":"fun AesCipherSpec.createCipher(key: SecretKey): AesCipher","description":"de.gematik.openhealth.crypto.CryptoScope.createCipher","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-cipher.html","searchKeys":["createCipher","fun AesCipherSpec.createCipher(key: SecretKey): AesCipher","de.gematik.openhealth.crypto.CryptoScope.createCipher"]},{"name":"fun AesDecipherSpec.createDecipher(key: SecretKey): AesDecipher","description":"de.gematik.openhealth.crypto.CryptoScope.createDecipher","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-decipher.html","searchKeys":["createDecipher","fun AesDecipherSpec.createDecipher(key: SecretKey): AesDecipher","de.gematik.openhealth.crypto.CryptoScope.createDecipher"]},{"name":"fun Asn1Decoder.ParserScope.readEcCurveFromAlgorithmIdentifier(): EcCurve","description":"de.gematik.openhealth.crypto.key.readEcCurveFromAlgorithmIdentifier","location":"crypto/de.gematik.openhealth.crypto.key/read-ec-curve-from-algorithm-identifier.html","searchKeys":["readEcCurveFromAlgorithmIdentifier","fun Asn1Decoder.ParserScope.readEcCurveFromAlgorithmIdentifier(): EcCurve","de.gematik.openhealth.crypto.key.readEcCurveFromAlgorithmIdentifier"]},{"name":"fun ByteArray.contentConstantTimeEquals(other: ByteArray): Boolean","description":"de.gematik.openhealth.crypto.contentConstantTimeEquals","location":"crypto/de.gematik.openhealth.crypto/content-constant-time-equals.html","searchKeys":["contentConstantTimeEquals","fun ByteArray.contentConstantTimeEquals(other: ByteArray): Boolean","de.gematik.openhealth.crypto.contentConstantTimeEquals"]},{"name":"fun ByteArray.toUint8Vector(): <Error class: unknown class>","description":"de.gematik.openhealth.crypto.wrapper.toUint8Vector","location":"crypto/de.gematik.openhealth.crypto.wrapper/[common]to-uint8-vector.html","searchKeys":["toUint8Vector","fun ByteArray.toUint8Vector(): <Error class: unknown class>","de.gematik.openhealth.crypto.wrapper.toUint8Vector"]},{"name":"fun ByteArray.toUint8Vector(): Uint8Vector","description":"de.gematik.openhealth.crypto.wrapper.toUint8Vector","location":"crypto/de.gematik.openhealth.crypto.wrapper/[js]to-uint8-vector.html","searchKeys":["toUint8Vector","fun ByteArray.toUint8Vector(): Uint8Vector","de.gematik.openhealth.crypto.wrapper.toUint8Vector"]},{"name":"fun CmacSpec.createCmac(secret: SecretKey): Cmac","description":"de.gematik.openhealth.crypto.CryptoScope.createCmac","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-cmac.html","searchKeys":["createCmac","fun CmacSpec.createCmac(secret: SecretKey): Cmac","de.gematik.openhealth.crypto.CryptoScope.createCmac"]},{"name":"fun EcPoint.toEcPublicKey(): EcPublicKey","description":"de.gematik.openhealth.crypto.key.toEcPublicKey","location":"crypto/de.gematik.openhealth.crypto.key/to-ec-public-key.html","searchKeys":["toEcPublicKey","fun EcPoint.toEcPublicKey(): EcPublicKey","de.gematik.openhealth.crypto.key.toEcPublicKey"]},{"name":"fun EcPrivateKey.Companion.decodeFromAsn1(data: ByteArray): EcPrivateKey","description":"de.gematik.openhealth.crypto.key.decodeFromAsn1","location":"crypto/de.gematik.openhealth.crypto.key/decode-from-asn1.html","searchKeys":["decodeFromAsn1","fun EcPrivateKey.Companion.decodeFromAsn1(data: ByteArray): EcPrivateKey","de.gematik.openhealth.crypto.key.decodeFromAsn1"]},{"name":"fun EcPrivateKey.Companion.decodeFromPem(data: String): EcPrivateKey","description":"de.gematik.openhealth.crypto.key.decodeFromPem","location":"crypto/de.gematik.openhealth.crypto.key/decode-from-pem.html","searchKeys":["decodeFromPem","fun EcPrivateKey.Companion.decodeFromPem(data: String): EcPrivateKey","de.gematik.openhealth.crypto.key.decodeFromPem"]},{"name":"fun EcPrivateKey.Companion.fromScalar(curve: EcCurve, data: ByteArray): EcPrivateKey","description":"de.gematik.openhealth.crypto.key.fromScalar","location":"crypto/de.gematik.openhealth.crypto.key/from-scalar.html","searchKeys":["fromScalar","fun EcPrivateKey.Companion.fromScalar(curve: EcCurve, data: ByteArray): EcPrivateKey","de.gematik.openhealth.crypto.key.fromScalar"]},{"name":"fun EcPrivateKey.encodeToAsn1(): ByteArray","description":"de.gematik.openhealth.crypto.key.encodeToAsn1","location":"crypto/de.gematik.openhealth.crypto.key/encode-to-asn1.html","searchKeys":["encodeToAsn1","fun EcPrivateKey.encodeToAsn1(): ByteArray","de.gematik.openhealth.crypto.key.encodeToAsn1"]},{"name":"fun EcPrivateKey.encodeToPem(): String","description":"de.gematik.openhealth.crypto.key.encodeToPem","location":"crypto/de.gematik.openhealth.crypto.key/encode-to-pem.html","searchKeys":["encodeToPem","fun EcPrivateKey.encodeToPem(): String","de.gematik.openhealth.crypto.key.encodeToPem"]},{"name":"fun EcPublicKey.Companion.decodeFromAsn1(data: ByteArray): EcPublicKey","description":"de.gematik.openhealth.crypto.key.decodeFromAsn1","location":"crypto/de.gematik.openhealth.crypto.key/decode-from-asn1.html","searchKeys":["decodeFromAsn1","fun EcPublicKey.Companion.decodeFromAsn1(data: ByteArray): EcPublicKey","de.gematik.openhealth.crypto.key.decodeFromAsn1"]},{"name":"fun EcPublicKey.Companion.decodeFromPem(data: String): EcPublicKey","description":"de.gematik.openhealth.crypto.key.decodeFromPem","location":"crypto/de.gematik.openhealth.crypto.key/decode-from-pem.html","searchKeys":["decodeFromPem","fun EcPublicKey.Companion.decodeFromPem(data: String): EcPublicKey","de.gematik.openhealth.crypto.key.decodeFromPem"]},{"name":"fun EcPublicKey.Companion.decodeFromUncompressedFormat(curve: EcCurve, data: ByteArray): EcPublicKey","description":"de.gematik.openhealth.crypto.key.decodeFromUncompressedFormat","location":"crypto/de.gematik.openhealth.crypto.key/decode-from-uncompressed-format.html","searchKeys":["decodeFromUncompressedFormat","fun EcPublicKey.Companion.decodeFromUncompressedFormat(curve: EcCurve, data: ByteArray): EcPublicKey","de.gematik.openhealth.crypto.key.decodeFromUncompressedFormat"]},{"name":"fun EcPublicKey.encodeToAsn1(): ByteArray","description":"de.gematik.openhealth.crypto.key.encodeToAsn1","location":"crypto/de.gematik.openhealth.crypto.key/encode-to-asn1.html","searchKeys":["encodeToAsn1","fun EcPublicKey.encodeToAsn1(): ByteArray","de.gematik.openhealth.crypto.key.encodeToAsn1"]},{"name":"fun EcPublicKey.encodeToPem(): String","description":"de.gematik.openhealth.crypto.key.encodeToPem","location":"crypto/de.gematik.openhealth.crypto.key/encode-to-pem.html","searchKeys":["encodeToPem","fun EcPublicKey.encodeToPem(): String","de.gematik.openhealth.crypto.key.encodeToPem"]},{"name":"fun EcPublicKey.toEcPoint(): EcPoint","description":"de.gematik.openhealth.crypto.key.toEcPoint","location":"crypto/de.gematik.openhealth.crypto.key/to-ec-point.html","searchKeys":["toEcPoint","fun EcPublicKey.toEcPoint(): EcPoint","de.gematik.openhealth.crypto.key.toEcPoint"]},{"name":"fun EcdhSpec.createKeyExchange(privateKey: EcPrivateKey): Ecdh","description":"de.gematik.openhealth.crypto.CryptoScope.createKeyExchange","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-key-exchange.html","searchKeys":["createKeyExchange","fun EcdhSpec.createKeyExchange(privateKey: EcPrivateKey): Ecdh","de.gematik.openhealth.crypto.CryptoScope.createKeyExchange"]},{"name":"fun HashSpec.createHash(): Hash","description":"de.gematik.openhealth.crypto.CryptoScope.createHash","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-hash.html","searchKeys":["createHash","fun HashSpec.createHash(): Hash","de.gematik.openhealth.crypto.CryptoScope.createHash"]},{"name":"fun KemSpec.createDecapsulation(): KemDecapsulation","description":"de.gematik.openhealth.crypto.CryptoScope.createDecapsulation","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-decapsulation.html","searchKeys":["createDecapsulation","fun KemSpec.createDecapsulation(): KemDecapsulation","de.gematik.openhealth.crypto.CryptoScope.createDecapsulation"]},{"name":"fun KemSpec.createEncapsulation(encapsulationKey: ByteArray): KemEncapsulation","description":"de.gematik.openhealth.crypto.CryptoScope.createEncapsulation","location":"crypto/de.gematik.openhealth.crypto/-crypto-scope/create-encapsulation.html","searchKeys":["createEncapsulation","fun KemSpec.createEncapsulation(encapsulationKey: ByteArray): KemEncapsulation","de.gematik.openhealth.crypto.CryptoScope.createEncapsulation"]},{"name":"fun Pem.encodeToString(): String","description":"de.gematik.openhealth.crypto.encodeToString","location":"crypto/de.gematik.openhealth.crypto/encode-to-string.html","searchKeys":["encodeToString","fun Pem.encodeToString(): String","de.gematik.openhealth.crypto.encodeToString"]},{"name":"fun String.decodeToPem(): Pem","description":"de.gematik.openhealth.crypto.decodeToPem","location":"crypto/de.gematik.openhealth.crypto/decode-to-pem.html","searchKeys":["decodeToPem","fun String.decodeToPem(): Pem","de.gematik.openhealth.crypto.decodeToPem"]},{"name":"fun Uint8Vector.toByteArray(): ByteArray","description":"de.gematik.openhealth.crypto.wrapper.toByteArray","location":"crypto/de.gematik.openhealth.crypto.wrapper/to-byte-array.html","searchKeys":["toByteArray","fun Uint8Vector.toByteArray(): ByteArray","de.gematik.openhealth.crypto.wrapper.toByteArray"]},{"name":"fun isValid(encapsulation: KemEncapsulationResult): Boolean","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult.isValid","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/is-valid.html","searchKeys":["isValid","fun isValid(encapsulation: KemEncapsulationResult): Boolean","de.gematik.openhealth.crypto.kem.KemDecapsulationResult.isValid"]},{"name":"fun loadNativeLibrary()","description":"de.gematik.openhealth.crypto.loadNativeLibrary","location":"crypto/de.gematik.openhealth.crypto/load-native-library.html","searchKeys":["loadNativeLibrary","fun loadNativeLibrary()","de.gematik.openhealth.crypto.loadNativeLibrary"]},{"name":"fun negate(): EcPoint","description":"de.gematik.openhealth.crypto.key.EcPoint.negate","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/negate.html","searchKeys":["negate","fun negate(): EcPoint","de.gematik.openhealth.crypto.key.EcPoint.negate"]},{"name":"fun point(x: BigInteger?, y: BigInteger?): EcPoint","description":"de.gematik.openhealth.crypto.key.EcCurve.point","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/point.html","searchKeys":["point","fun point(x: BigInteger?, y: BigInteger?): EcPoint","de.gematik.openhealth.crypto.key.EcCurve.point"]},{"name":"fun tryGet(): T","description":"de.gematik.openhealth.crypto.LazySuspend.tryGet","location":"crypto/de.gematik.openhealth.crypto/[js]-lazy-suspend/try-get.html","searchKeys":["tryGet","fun tryGet(): T","de.gematik.openhealth.crypto.LazySuspend.tryGet"]},{"name":"fun tryGet(): T","description":"de.gematik.openhealth.crypto.LazySuspend.tryGet","location":"crypto/de.gematik.openhealth.crypto/[common]-lazy-suspend/try-get.html","searchKeys":["tryGet","fun tryGet(): T","de.gematik.openhealth.crypto.LazySuspend.tryGet"]},{"name":"fun valueOf(value: String): CmacAlgorithm","description":"de.gematik.openhealth.crypto.CmacAlgorithm.valueOf","location":"crypto/de.gematik.openhealth.crypto/-cmac-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CmacAlgorithm","de.gematik.openhealth.crypto.CmacAlgorithm.valueOf"]},{"name":"fun valueOf(value: String): EcCurve","description":"de.gematik.openhealth.crypto.key.EcCurve.valueOf","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EcCurve","de.gematik.openhealth.crypto.key.EcCurve.valueOf"]},{"name":"fun valueOf(value: String): HashAlgorithm","description":"de.gematik.openhealth.crypto.HashAlgorithm.valueOf","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HashAlgorithm","de.gematik.openhealth.crypto.HashAlgorithm.valueOf"]},{"name":"fun valueOf(value: String): KemAlgorithm","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm.valueOf","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KemAlgorithm","de.gematik.openhealth.crypto.kem.KemAlgorithm.valueOf"]},{"name":"fun values(): Array<CmacAlgorithm>","description":"de.gematik.openhealth.crypto.CmacAlgorithm.values","location":"crypto/de.gematik.openhealth.crypto/-cmac-algorithm/values.html","searchKeys":["values","fun values(): Array<CmacAlgorithm>","de.gematik.openhealth.crypto.CmacAlgorithm.values"]},{"name":"fun values(): Array<EcCurve>","description":"de.gematik.openhealth.crypto.key.EcCurve.values","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/values.html","searchKeys":["values","fun values(): Array<EcCurve>","de.gematik.openhealth.crypto.key.EcCurve.values"]},{"name":"fun values(): Array<HashAlgorithm>","description":"de.gematik.openhealth.crypto.HashAlgorithm.values","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/values.html","searchKeys":["values","fun values(): Array<HashAlgorithm>","de.gematik.openhealth.crypto.HashAlgorithm.values"]},{"name":"fun values(): Array<KemAlgorithm>","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm.values","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/values.html","searchKeys":["values","fun values(): Array<KemAlgorithm>","de.gematik.openhealth.crypto.kem.KemAlgorithm.values"]},{"name":"interface AesCipher : Cipher","description":"de.gematik.openhealth.crypto.cipher.AesCipher","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher/index.html","searchKeys":["AesCipher","interface AesCipher : Cipher","de.gematik.openhealth.crypto.cipher.AesCipher"]},{"name":"interface AesDecipher : Cipher","description":"de.gematik.openhealth.crypto.cipher.AesDecipher","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher/index.html","searchKeys":["AesDecipher","interface AesDecipher : Cipher","de.gematik.openhealth.crypto.cipher.AesDecipher"]},{"name":"interface Cipher","description":"de.gematik.openhealth.crypto.cipher.Cipher","location":"crypto/de.gematik.openhealth.crypto.cipher/-cipher/index.html","searchKeys":["Cipher","interface Cipher","de.gematik.openhealth.crypto.cipher.Cipher"]},{"name":"interface Cmac","description":"de.gematik.openhealth.crypto.Cmac","location":"crypto/de.gematik.openhealth.crypto/-cmac/index.html","searchKeys":["Cmac","interface Cmac","de.gematik.openhealth.crypto.Cmac"]},{"name":"interface Ecdh","description":"de.gematik.openhealth.crypto.exchange.Ecdh","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh/index.html","searchKeys":["Ecdh","interface Ecdh","de.gematik.openhealth.crypto.exchange.Ecdh"]},{"name":"interface Hash","description":"de.gematik.openhealth.crypto.Hash","location":"crypto/de.gematik.openhealth.crypto/-hash/index.html","searchKeys":["Hash","interface Hash","de.gematik.openhealth.crypto.Hash"]},{"name":"interface KemDecapsulation","description":"de.gematik.openhealth.crypto.kem.KemDecapsulation","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation/index.html","searchKeys":["KemDecapsulation","interface KemDecapsulation","de.gematik.openhealth.crypto.kem.KemDecapsulation"]},{"name":"interface KemEncapsulation","description":"de.gematik.openhealth.crypto.kem.KemEncapsulation","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation/index.html","searchKeys":["KemEncapsulation","interface KemEncapsulation","de.gematik.openhealth.crypto.kem.KemEncapsulation"]},{"name":"interface Key","description":"de.gematik.openhealth.crypto.key.Key","location":"crypto/de.gematik.openhealth.crypto.key/-key/index.html","searchKeys":["Key","interface Key","de.gematik.openhealth.crypto.key.Key"]},{"name":"object Companion","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.Companion","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.crypto.key.EcPrivateKey.Companion"]},{"name":"object Companion","description":"de.gematik.openhealth.crypto.key.EcPublicKey.Companion","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/-companion/index.html","searchKeys":["Companion","object Companion","de.gematik.openhealth.crypto.key.EcPublicKey.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult.equals","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.crypto.kem.KemDecapsulationResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult.equals","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.crypto.kem.KemEncapsulationResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.equals","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.crypto.key.EcPrivateKey.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.crypto.key.EcPublicKey.equals","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.crypto.key.EcPublicKey.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"de.gematik.openhealth.crypto.key.SecretKey.equals","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","de.gematik.openhealth.crypto.key.SecretKey.equals"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult.hashCode","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.crypto.kem.KemDecapsulationResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult.hashCode","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.crypto.kem.KemEncapsulationResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.hashCode","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.crypto.key.EcPrivateKey.hashCode"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.crypto.key.EcPublicKey.hashCode","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.crypto.key.EcPublicKey.hashCode"]},{"name":"open override fun hashCode(): Int","description":"de.gematik.openhealth.crypto.key.SecretKey.hashCode","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","de.gematik.openhealth.crypto.key.SecretKey.hashCode"]},{"name":"open override fun toString(): String","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.toString","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/to-string.html","searchKeys":["toString","open override fun toString(): String","de.gematik.openhealth.crypto.key.EcPrivateKey.toString"]},{"name":"open override fun toString(): String","description":"de.gematik.openhealth.crypto.key.EcPublicKey.toString","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/to-string.html","searchKeys":["toString","open override fun toString(): String","de.gematik.openhealth.crypto.key.EcPublicKey.toString"]},{"name":"open override fun toString(): String","description":"de.gematik.openhealth.crypto.key.SecretKey.toString","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/to-string.html","searchKeys":["toString","open override fun toString(): String","de.gematik.openhealth.crypto.key.SecretKey.toString"]},{"name":"open override val a: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.a","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/a.html","searchKeys":["a","open override val a: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.a"]},{"name":"open override val a: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.a","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/a.html","searchKeys":["a","open override val a: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.a"]},{"name":"open override val a: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.a","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/a.html","searchKeys":["a","open override val a: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.a"]},{"name":"open override val autoPadding: Boolean = false","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/auto-padding.html","searchKeys":["autoPadding","open override val autoPadding: Boolean = false","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.autoPadding"]},{"name":"open override val autoPadding: Boolean = false","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/auto-padding.html","searchKeys":["autoPadding","open override val autoPadding: Boolean = false","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.autoPadding"]},{"name":"open override val autoPadding: Boolean = true","description":"de.gematik.openhealth.crypto.cipher.AesCbcSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cbc-spec/auto-padding.html","searchKeys":["autoPadding","open override val autoPadding: Boolean = true","de.gematik.openhealth.crypto.cipher.AesCbcSpec.autoPadding"]},{"name":"open override val autoPadding: Boolean = true","description":"de.gematik.openhealth.crypto.cipher.AesEcbSpec.autoPadding","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-ecb-spec/auto-padding.html","searchKeys":["autoPadding","open override val autoPadding: Boolean = true","de.gematik.openhealth.crypto.cipher.AesEcbSpec.autoPadding"]},{"name":"open override val b: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.b","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/b.html","searchKeys":["b","open override val b: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.b"]},{"name":"open override val b: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.b","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/b.html","searchKeys":["b","open override val b: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.b"]},{"name":"open override val b: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.b","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/b.html","searchKeys":["b","open override val b: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.b"]},{"name":"open override val cause: Throwable? = null","description":"de.gematik.openhealth.crypto.CmacException.cause","location":"crypto/de.gematik.openhealth.crypto/-cmac-exception/cause.html","searchKeys":["cause","open override val cause: Throwable? = null","de.gematik.openhealth.crypto.CmacException.cause"]},{"name":"open override val cause: Throwable? = null","description":"de.gematik.openhealth.crypto.HashException.cause","location":"crypto/de.gematik.openhealth.crypto/-hash-exception/cause.html","searchKeys":["cause","open override val cause: Throwable? = null","de.gematik.openhealth.crypto.HashException.cause"]},{"name":"open override val data: ByteArray","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.data","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/data.html","searchKeys":["data","open override val data: ByteArray","de.gematik.openhealth.crypto.key.EcPrivateKey.data"]},{"name":"open override val data: ByteArray","description":"de.gematik.openhealth.crypto.key.EcPublicKey.data","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/data.html","searchKeys":["data","open override val data: ByteArray","de.gematik.openhealth.crypto.key.EcPublicKey.data"]},{"name":"open override val data: ByteArray","description":"de.gematik.openhealth.crypto.key.SecretKey.data","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/data.html","searchKeys":["data","open override val data: ByteArray","de.gematik.openhealth.crypto.key.SecretKey.data"]},{"name":"open override val iv: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesCbcSpec.iv","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cbc-spec/iv.html","searchKeys":["iv","open override val iv: ByteArray","de.gematik.openhealth.crypto.cipher.AesCbcSpec.iv"]},{"name":"open override val iv: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.iv","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/iv.html","searchKeys":["iv","open override val iv: ByteArray","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.iv"]},{"name":"open override val iv: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.iv","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/iv.html","searchKeys":["iv","open override val iv: ByteArray","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.iv"]},{"name":"open override val message: String","description":"de.gematik.openhealth.crypto.CmacException.message","location":"crypto/de.gematik.openhealth.crypto/-cmac-exception/message.html","searchKeys":["message","open override val message: String","de.gematik.openhealth.crypto.CmacException.message"]},{"name":"open override val message: String","description":"de.gematik.openhealth.crypto.HashException.message","location":"crypto/de.gematik.openhealth.crypto/-hash-exception/message.html","searchKeys":["message","open override val message: String","de.gematik.openhealth.crypto.HashException.message"]},{"name":"open override val p: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.p","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/p.html","searchKeys":["p","open override val p: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.p"]},{"name":"open override val p: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.p","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/p.html","searchKeys":["p","open override val p: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.p"]},{"name":"open override val p: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.p","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/p.html","searchKeys":["p","open override val p: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.p"]},{"name":"open override val q: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.q","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/q.html","searchKeys":["q","open override val q: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.q"]},{"name":"open override val q: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.q","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/q.html","searchKeys":["q","open override val q: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.q"]},{"name":"open override val q: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.q","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/q.html","searchKeys":["q","open override val q: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.q"]},{"name":"open override val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesCbcSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cbc-spec/tag-length.html","searchKeys":["tagLength","open override val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesCbcSpec.tagLength"]},{"name":"open override val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesEcbSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-ecb-spec/tag-length.html","searchKeys":["tagLength","open override val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesEcbSpec.tagLength"]},{"name":"open override val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/tag-length.html","searchKeys":["tagLength","open override val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.tagLength"]},{"name":"open override val tagLength: ByteUnit","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.tagLength","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/tag-length.html","searchKeys":["tagLength","open override val tagLength: ByteUnit","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.tagLength"]},{"name":"open override val x: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.x","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/x.html","searchKeys":["x","open override val x: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.x"]},{"name":"open override val x: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.x","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/x.html","searchKeys":["x","open override val x: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.x"]},{"name":"open override val x: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.x","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/x.html","searchKeys":["x","open override val x: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.x"]},{"name":"open override val y: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.y","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p256r1/y.html","searchKeys":["y","open override val y: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP256r1.y"]},{"name":"open override val y: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.y","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p384r1/y.html","searchKeys":["y","open override val y: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP384r1.y"]},{"name":"open override val y: BigInteger","description":"de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.y","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/-brainpool-p512r1/y.html","searchKeys":["y","open override val y: BigInteger","de.gematik.openhealth.crypto.key.EcCurve.BrainpoolP512r1.y"]},{"name":"operator fun plus(other: EcPoint): EcPoint","description":"de.gematik.openhealth.crypto.key.EcPoint.plus","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/plus.html","searchKeys":["plus","operator fun plus(other: EcPoint): EcPoint","de.gematik.openhealth.crypto.key.EcPoint.plus"]},{"name":"operator fun times(k: BigInteger): EcPoint","description":"de.gematik.openhealth.crypto.key.EcPoint.times","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/times.html","searchKeys":["times","operator fun times(k: BigInteger): EcPoint","de.gematik.openhealth.crypto.key.EcPoint.times"]},{"name":"sealed interface AesCipherIvSpec : AesCipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesCipherIvSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher-iv-spec/index.html","searchKeys":["AesCipherIvSpec","sealed interface AesCipherIvSpec : AesCipherSpec","de.gematik.openhealth.crypto.cipher.AesCipherIvSpec"]},{"name":"sealed interface AesCipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesCipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-cipher-spec/index.html","searchKeys":["AesCipherSpec","sealed interface AesCipherSpec","de.gematik.openhealth.crypto.cipher.AesCipherSpec"]},{"name":"sealed interface AesDecipherIvSpec : AesDecipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesDecipherIvSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher-iv-spec/index.html","searchKeys":["AesDecipherIvSpec","sealed interface AesDecipherIvSpec : AesDecipherSpec","de.gematik.openhealth.crypto.cipher.AesDecipherIvSpec"]},{"name":"sealed interface AesDecipherSpec","description":"de.gematik.openhealth.crypto.cipher.AesDecipherSpec","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-decipher-spec/index.html","searchKeys":["AesDecipherSpec","sealed interface AesDecipherSpec","de.gematik.openhealth.crypto.cipher.AesDecipherSpec"]},{"name":"suspend fun <R> useCryptoAsync(block: suspend CryptoScope.() -> R): R","description":"de.gematik.openhealth.crypto.useCryptoAsync","location":"crypto/de.gematik.openhealth.crypto/use-crypto-async.html","searchKeys":["useCryptoAsync","suspend fun <R> useCryptoAsync(block: suspend CryptoScope.() -> R): R","de.gematik.openhealth.crypto.useCryptoAsync"]},{"name":"suspend fun get(): T","description":"de.gematik.openhealth.crypto.LazySuspend.get","location":"crypto/de.gematik.openhealth.crypto/[js]-lazy-suspend/get.html","searchKeys":["get","suspend fun get(): T","de.gematik.openhealth.crypto.LazySuspend.get"]},{"name":"suspend fun get(): T","description":"de.gematik.openhealth.crypto.LazySuspend.get","location":"crypto/de.gematik.openhealth.crypto/[common]-lazy-suspend/get.html","searchKeys":["get","suspend fun get(): T","de.gematik.openhealth.crypto.LazySuspend.get"]},{"name":"val ByteUnit.bits: Int","description":"de.gematik.openhealth.crypto.bits","location":"crypto/de.gematik.openhealth.crypto/bits.html","searchKeys":["bits","val ByteUnit.bits: Int","de.gematik.openhealth.crypto.bits"]},{"name":"val ByteUnit.bytes: Int","description":"de.gematik.openhealth.crypto.bytes","location":"crypto/de.gematik.openhealth.crypto/bytes.html","searchKeys":["bytes","val ByteUnit.bytes: Int","de.gematik.openhealth.crypto.bytes"]},{"name":"val Int.bits: ByteUnit","description":"de.gematik.openhealth.crypto.bits","location":"crypto/de.gematik.openhealth.crypto/bits.html","searchKeys":["bits","val Int.bits: ByteUnit","de.gematik.openhealth.crypto.bits"]},{"name":"val Int.bytes: ByteUnit","description":"de.gematik.openhealth.crypto.bytes","location":"crypto/de.gematik.openhealth.crypto/bytes.html","searchKeys":["bytes","val Int.bytes: ByteUnit","de.gematik.openhealth.crypto.bytes"]},{"name":"val Provider: LazySuspend<CryptoModule>","description":"de.gematik.openhealth.crypto.wrapper.Provider","location":"crypto/de.gematik.openhealth.crypto.wrapper/-provider.html","searchKeys":["Provider","val Provider: LazySuspend<CryptoModule>","de.gematik.openhealth.crypto.wrapper.Provider"]},{"name":"val aad: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.aad","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-cipher-spec/aad.html","searchKeys":["aad","val aad: ByteArray","de.gematik.openhealth.crypto.cipher.AesGcmCipherSpec.aad"]},{"name":"val aad: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.aad","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/aad.html","searchKeys":["aad","val aad: ByteArray","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.aad"]},{"name":"val algorithm: CmacAlgorithm","description":"de.gematik.openhealth.crypto.CmacSpec.algorithm","location":"crypto/de.gematik.openhealth.crypto/-cmac-spec/algorithm.html","searchKeys":["algorithm","val algorithm: CmacAlgorithm","de.gematik.openhealth.crypto.CmacSpec.algorithm"]},{"name":"val algorithm: HashAlgorithm","description":"de.gematik.openhealth.crypto.HashSpec.algorithm","location":"crypto/de.gematik.openhealth.crypto/-hash-spec/algorithm.html","searchKeys":["algorithm","val algorithm: HashAlgorithm","de.gematik.openhealth.crypto.HashSpec.algorithm"]},{"name":"val algorithm: KemAlgorithm","description":"de.gematik.openhealth.crypto.kem.KemSpec.algorithm","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-spec/algorithm.html","searchKeys":["algorithm","val algorithm: KemAlgorithm","de.gematik.openhealth.crypto.kem.KemSpec.algorithm"]},{"name":"val authTag: ByteArray","description":"de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.authTag","location":"crypto/de.gematik.openhealth.crypto.cipher/-aes-gcm-decipher-spec/auth-tag.html","searchKeys":["authTag","val authTag: ByteArray","de.gematik.openhealth.crypto.cipher.AesGcmDecipherSpec.authTag"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.crypto.exchange.EcdhSpec.curve","location":"crypto/de.gematik.openhealth.crypto.exchange/-ecdh-spec/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.crypto.exchange.EcdhSpec.curve"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.crypto.key.EcKeyPairSpec.curve","location":"crypto/de.gematik.openhealth.crypto.key/-ec-key-pair-spec/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.crypto.key.EcKeyPairSpec.curve"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.crypto.key.EcPoint.curve","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.crypto.key.EcPoint.curve"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.curve","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.crypto.key.EcPrivateKey.curve"]},{"name":"val curve: EcCurve","description":"de.gematik.openhealth.crypto.key.EcPublicKey.curve","location":"crypto/de.gematik.openhealth.crypto.key/-ec-public-key/curve.html","searchKeys":["curve","val curve: EcCurve","de.gematik.openhealth.crypto.key.EcPublicKey.curve"]},{"name":"val data: ByteArray","description":"de.gematik.openhealth.crypto.Pem.data","location":"crypto/de.gematik.openhealth.crypto/-pem/data.html","searchKeys":["data","val data: ByteArray","de.gematik.openhealth.crypto.Pem.data"]},{"name":"val entries: EnumEntries<CmacAlgorithm>","description":"de.gematik.openhealth.crypto.CmacAlgorithm.entries","location":"crypto/de.gematik.openhealth.crypto/-cmac-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<CmacAlgorithm>","de.gematik.openhealth.crypto.CmacAlgorithm.entries"]},{"name":"val entries: EnumEntries<EcCurve>","description":"de.gematik.openhealth.crypto.key.EcCurve.entries","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/entries.html","searchKeys":["entries","val entries: EnumEntries<EcCurve>","de.gematik.openhealth.crypto.key.EcCurve.entries"]},{"name":"val entries: EnumEntries<HashAlgorithm>","description":"de.gematik.openhealth.crypto.HashAlgorithm.entries","location":"crypto/de.gematik.openhealth.crypto/-hash-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<HashAlgorithm>","de.gematik.openhealth.crypto.HashAlgorithm.entries"]},{"name":"val entries: EnumEntries<KemAlgorithm>","description":"de.gematik.openhealth.crypto.kem.KemAlgorithm.entries","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<KemAlgorithm>","de.gematik.openhealth.crypto.kem.KemAlgorithm.entries"]},{"name":"val g: EcPoint","description":"de.gematik.openhealth.crypto.key.EcCurve.g","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/g.html","searchKeys":["g","val g: EcPoint","de.gematik.openhealth.crypto.key.EcCurve.g"]},{"name":"val isInfinity: Boolean","description":"de.gematik.openhealth.crypto.key.EcPoint.isInfinity","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/is-infinity.html","searchKeys":["isInfinity","val isInfinity: Boolean","de.gematik.openhealth.crypto.key.EcPoint.isInfinity"]},{"name":"val length: ByteUnit","description":"de.gematik.openhealth.crypto.key.SecretKey.length","location":"crypto/de.gematik.openhealth.crypto.key/-secret-key/length.html","searchKeys":["length","val length: ByteUnit","de.gematik.openhealth.crypto.key.SecretKey.length"]},{"name":"val oid: String","description":"de.gematik.openhealth.crypto.key.EcCurve.oid","location":"crypto/de.gematik.openhealth.crypto.key/-ec-curve/oid.html","searchKeys":["oid","val oid: String","de.gematik.openhealth.crypto.key.EcCurve.oid"]},{"name":"val s: BigInteger","description":"de.gematik.openhealth.crypto.key.EcPrivateKey.s","location":"crypto/de.gematik.openhealth.crypto.key/-ec-private-key/s.html","searchKeys":["s","val s: BigInteger","de.gematik.openhealth.crypto.key.EcPrivateKey.s"]},{"name":"val sharedSecret: ByteArray","description":"de.gematik.openhealth.crypto.kem.KemDecapsulationResult.sharedSecret","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-decapsulation-result/shared-secret.html","searchKeys":["sharedSecret","val sharedSecret: ByteArray","de.gematik.openhealth.crypto.kem.KemDecapsulationResult.sharedSecret"]},{"name":"val sharedSecret: ByteArray","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult.sharedSecret","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/shared-secret.html","searchKeys":["sharedSecret","val sharedSecret: ByteArray","de.gematik.openhealth.crypto.kem.KemEncapsulationResult.sharedSecret"]},{"name":"val ticket: String","description":"de.gematik.openhealth.crypto.UnoptimizedCryptoApi.ticket","location":"crypto/de.gematik.openhealth.crypto/-unoptimized-crypto-api/ticket.html","searchKeys":["ticket","val ticket: String","de.gematik.openhealth.crypto.UnoptimizedCryptoApi.ticket"]},{"name":"val type: String","description":"de.gematik.openhealth.crypto.Pem.type","location":"crypto/de.gematik.openhealth.crypto/-pem/type.html","searchKeys":["type","val type: String","de.gematik.openhealth.crypto.Pem.type"]},{"name":"val uncompressed: ByteArray","description":"de.gematik.openhealth.crypto.key.EcPoint.uncompressed","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/uncompressed.html","searchKeys":["uncompressed","val uncompressed: ByteArray","de.gematik.openhealth.crypto.key.EcPoint.uncompressed"]},{"name":"val value: Int","description":"de.gematik.openhealth.crypto.ByteUnit.value","location":"crypto/de.gematik.openhealth.crypto/-byte-unit/value.html","searchKeys":["value","val value: Int","de.gematik.openhealth.crypto.ByteUnit.value"]},{"name":"val wrappedKey: ByteArray","description":"de.gematik.openhealth.crypto.kem.KemEncapsulationResult.wrappedKey","location":"crypto/de.gematik.openhealth.crypto.kem/-kem-encapsulation-result/wrapped-key.html","searchKeys":["wrappedKey","val wrappedKey: ByteArray","de.gematik.openhealth.crypto.kem.KemEncapsulationResult.wrappedKey"]},{"name":"val x: BigInteger?","description":"de.gematik.openhealth.crypto.key.EcPoint.x","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/x.html","searchKeys":["x","val x: BigInteger?","de.gematik.openhealth.crypto.key.EcPoint.x"]},{"name":"val y: BigInteger?","description":"de.gematik.openhealth.crypto.key.EcPoint.y","location":"crypto/de.gematik.openhealth.crypto.key/-ec-point/y.html","searchKeys":["y","val y: BigInteger?","de.gematik.openhealth.crypto.key.EcPoint.y"]},{"name":"value class ByteUnit(val value: Int)","description":"de.gematik.openhealth.crypto.ByteUnit","location":"crypto/de.gematik.openhealth.crypto/-byte-unit/index.html","searchKeys":["ByteUnit","value class ByteUnit(val value: Int)","de.gematik.openhealth.crypto.ByteUnit"]}]